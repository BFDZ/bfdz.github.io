<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高清电视直播IPTV</title>
      <link href="/2019/11/06/133/"/>
      <url>/2019/11/06/133/</url>
      
        <content type="html"><![CDATA[<p>这是北京邮电大学和 BYR-Team 提供的校园直播，拥有央视高清及各大卫视高清频道。</p><p>浏览器在线观看：<a href="https://v4.uhd.app/" target="_blank" rel="noopener">https://v4.uhd.app/</a></p><p>PC端和移动端直播源：<a href="http://ivi.bupt.edu.cn/" target="_blank" rel="noopener">http://ivi.bupt.edu.cn/</a></p><p><img src="https://ae01.alicdn.com/kf/H27af28f2756b4b66bd217684793e3f4b1.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPTV </tag>
            
            <tag> 直播源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量生成带二维码海报免费软件</title>
      <link href="/2019/10/22/131/"/>
      <url>/2019/10/22/131/</url>
      
        <content type="html"><![CDATA[<p>生成二维码的工具很多，生成带二维码的海报类型工具就很少了。</p><a id="more"></a><p>支持的功能如下：</p><p>0  纯绿色，不访问网络，没有其他功能，放心使用。因为不访问网络，因此也不会自动升级。<br>1  直接生成普通的二维码，文字可设置，颜色可设置，边距可设置。<br>2  二维码中间可以带小图片，自动缩放到合适大小。<br>3  在一个海报图片上面贴上二维码，位置可调整，透明度可调整。<br>4  海报上的二维码可以设置外边框，更好看一些，可以更换颜色。<br>5  批量生成海报图片，同一张海报底图上面的二维码不同，批量一次性生成多张海报。<br>6  批量生成海报图片，用不同的海报底图，同一个二维码，批量一次性生产多张。</p><p><a href="https://pan.baidu.com/s/1u9tb1LpxspooGNg3UOEqRw" target="_blank" rel="noopener">https://pan.baidu.com/s/1u9tb1LpxspooGNg3UOEqRw</a></p><p>(其他下载地址，可能被人改过，植入广告等等。不做保证，此地址是软件作者个人百度盘地址，可以保证真实性）</p><hr><p>转载来源：(免费工具批量生成带二维码海报免费软件)[<a href="http://blog.sina.com.cn/s/blog_74661d9f0102xydv.html]" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_74661d9f0102xydv.html]</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免费软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费高速游戏加速器</title>
      <link href="/2019/10/22/132/"/>
      <url>/2019/10/22/132/</url>
      
        <content type="html"><![CDATA[<p>GoLink加速器是一款专业的游戏加速器，免费为国内玩家提供游戏加速服务，支持Origin、Steam、Uplay等平台游戏大作，游戏专线加速通道能够有效降低延迟、避免卡顿、杜绝掉线、轻松联机，界面简洁，操作方便！</p><p>同时也可以让海外华人畅玩国内的APP。满足海外华人高速观看优酷爱奇艺等国内主流音乐、视频应用等需求；助力海外国服游戏玩家一键加速游戏应用，从此告别丢包卡顿，随时随地畅玩王者荣耀等国服手游，给你畅快体验。</p><p>我用这个加速器玩战地一，日服延迟在60ms左右，比所谓的日本IPLC专线还要稳定，另外这个加速器还支持 Pubg lite 泰国服等游戏。</p><p>下载地址：<a href="https://www.golink.com/?code=TJESXQAS" target="_blank" rel="noopener">GoLink</a></p><a id="more"></a><p><img src="https://www.golink.com/images/index-v2/show1-1.png" alt=""><br><img src="https://www.golink.com/images/index-v2/show2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏加速器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用iptables+ipset限制端口</title>
      <link href="/2019/08/22/130/"/>
      <url>/2019/08/22/130/</url>
      
        <content type="html"><![CDATA[<p>利用iptables+ipset限制端口，只允许国内访问。</p><a id="more"></a><hr><p>Debian下，先安装</p><p><code>apt-get install ipset</code></p><p>创建ipset的 chnroute IP集</p><p><code>ipset create chnroute hash:net maxelem 65536</code></p><p>自动下载更新ipset国内IP路由脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ipset create chnroute <span class="built_in">hash</span>:net maxelem 65536</span><br><span class="line">wget --no-check-certificate -O- <span class="string">'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest'</span>| awk -F\| <span class="string">'/CN\|ipv4/ &#123; printf("%s/%d\n", $4, 32-log($5)/log(2)) &#125;'</span>&gt;/etc/chnroute.txt</span><br><span class="line">ipset flush chnroute</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> ip;<span class="keyword">do</span></span><br><span class="line">ipset add chnroute <span class="variable">$ip</span></span><br><span class="line"><span class="keyword">done</span>&lt;/etc/chnroute.txt</span><br><span class="line">ipset save chnroute &gt;/etc/chnroute.conf</span><br></pre></td></tr></table></figure><p>保存脚本为chnroute.sh 到/etc目录下，并且赋予执行权限</p><p><code>chmod +x /etc/chnroute.sh</code></p><p>添加crontab计划任务，每天执行一次更新。</p><p><code>crontab -e</code></p><p>添加</p><p><code>0 0 * * * /etc/chnroute.sh</code></p><p>显示chnroute列表</p><p><code>ipset list chnroute</code></p><p>iptables限制，只允许ipset的 chnroute IP集内IP连接到7000端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -m set--match -set chnroute src -p tcp --dport 7000 -j ACCEPT</span><br><span class="line">iptables -A INPUT -m set--match -set chnroute src -p udp --dport 7000 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 7000 -j DROP</span><br><span class="line">iptables -A INPUT -p udp --dport 7000 -j DROP</span><br></pre></td></tr></table></figure><p>7000端口为frps参数的bind_port = 7000，主要限制国外IP连接到此frps通讯端口，即可。</p><hr><p>转载:<a href="https://bob.kim/wallip" target="_blank" rel="noopener">利用iptables+ipset限制，只允许国内IP连接到frps服务</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMS激活方法</title>
      <link href="/2019/08/14/129/"/>
      <url>/2019/08/14/129/</url>
      
        <content type="html"><![CDATA[<p><strong>支持Windows操作系统(VL),Office软件(VL). 已支持到最新的Windows和Office! 支持激活 Windows10 和 Office2019.</strong></p><a id="more"></a><hr><ul><li>Windows:<br>以管理员身份打开命令提示符,然执行下列命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">::cd /d &quot;%SystemRoot%\system32&quot;</span><br><span class="line">slmgr /skms kms.bfdz.ink</span><br><span class="line">slmgr /ato</span><br><span class="line">slmgr /xpr</span><br></pre></td></tr></table></figure><ul><li>Office:<br>以管理员身份打开命令提示符,进入软件安装目录,然后执行下列命令(这里以Office 2013为例):  </li></ul><p>进入32位版本安装目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /d &quot;%ProgramFiles(x86)%\Microsoft Office\Office15&quot;</span><br></pre></td></tr></table></figure><p>进入64位版本安装目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /d &quot;%ProgramFiles%\Microsoft Office\Office15&quot;</span><br></pre></td></tr></table></figure><p>然后执行下列命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /sethst:kms.bfdz.ink</span><br><span class="line">cscript ospp.vbs /act</span><br><span class="line">cscript ospp.vbs /dstatus</span><br></pre></td></tr></table></figure></p><p><strong>通过以上步骤就可以免费激活你的Windows系统和Office软件.</strong> 如果激活失败或输入过其他密钥,请先替换为<a href="https://technet.microsoft.com/en-us/library/jj612867.aspx" target="_blank" rel="noopener">微软官方GVLK密钥</a>.(<a href="https://moeclub.org/2018/12/02/710/" target="_blank" rel="noopener">点击查看</a>) 以安装政府版密钥为例(Ent G 400 Years):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk YYVX9-NTFWV-6MDM3-9PT4T-4M68B</span><br></pre></td></tr></table></figure></p><hr><p>注意:</p><ul><li><p>KMS方式激活的有效期只有180天.</p></li><li><p>每隔一段时间系统会自动KMS服务器请求续期.</p></li><li><p>只要本博客能够访问,这些都是自动的.无需人为干预.</p></li><li><p>只允许中国ip访问.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Cloudflare Worker 构建 Pt-Gen</title>
      <link href="/2019/07/28/128/"/>
      <url>/2019/07/28/128/</url>
      
        <content type="html"><![CDATA[<p>最早的时候，Pt-Gen是作为Pt-help的一个子项，使用flask内置的web server提供服务，后来BFDZ将其单独提取出来（<a href="https://github.com/BFDZ/PT-Gen" target="_blank" rel="noopener">BFDZ/PT-Gen</a>），但是仍然存在部署较为困难的问题。</p><p>过去近1年的Pt-Gen的运行中，我曾经迁移过多次宿主机。目前托给ourhelp组的Pt-Gen服务器更是远在欧洲大陆。此外因为网络的问题，也导致部分时间段与豆瓣服务器无法连接，导致Pt-Gen服务的SLA特别差。</p><p>近期，我得知八蠢想要构建基于AWS lambda的Pt-Gen，也正好最近看到了有关Cloudflare Worker的一些介绍。正好这也是Cf-worker的用途之一——“构建完全依赖于 Web API 的“无服务器”应用程序”。</p><p>然而，与AWS lambda不同的是，cf-worker只支持Javscript。于是将原来Pt-Gen改成javascript的格式并使用Travis CI进行自动构建。</p><p>项目地址： <a href="https://github.com/Rhilip/pt-gen-cfworker" target="_blank" rel="noopener">https://github.com/Rhilip/pt-gen-cfworker</a><br>项目Demo地址： <a href="https://ptgen.rhilip.workers.dev/" target="_blank" rel="noopener">https://ptgen.rhilip.workers.dev/</a><br><a id="more"></a><br>Cloudflare Worker介绍<br>文档： <a href="https://workers.cloudflare.com/docs" target="_blank" rel="noopener">https://workers.cloudflare.com/docs</a></p><p>Cloudflare Worker是Cloudflare推出的serverless服务，可以使用Javascript以及WebAssembly语言进行编程，其最简单的代码示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1\. Register a FetchEvent listener that sends a custom</span></span><br><span class="line"><span class="comment">// response for the given request.</span></span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</span><br><span class="line">event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 2\. Return a custom request object</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">"hello world"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并提供了相应的CLI工具 <a href="https://github.com/cloudflare/wrangler" target="_blank" rel="noopener">Wrangler</a> 进行APP构建。此外，还提供了很简洁的调试界面。</p><p><strong>最为良心的Cloudflare Worker是可以免费使用的（免费计划一天最多100,000次请求）</strong></p><h2 id="部署基于Cloudflare-Worker的Pt-Gen"><a href="#部署基于Cloudflare-Worker的Pt-Gen" class="headerlink" title="部署基于Cloudflare Worker的Pt-Gen"></a>部署基于Cloudflare Worker的Pt-Gen</h2><p>和原项目相比，Pt-Gen-cfworker并不需要你在VPS上搭建复杂（并不）的Python3+uwsgi工具链，只需要你有Cloudflare帐号就可以。</p><p>本教程并不介绍Cloudflare帐号的注册方法（请自己搜索），仅分有无Node.js环境对不同用户部署方法进行介绍。</p><h3 id="1-无Node环境直接部署"><a href="#1-无Node环境直接部署" class="headerlink" title="1.无Node环境直接部署"></a>1.无Node环境直接部署</h3><p>因为项目主文件 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/master/index.js" target="_blank" rel="noopener">index.js</a> 加载了两个npm库用于解析页面，所以并不能直接使用。不过在项目的build分支中，我使用Travis CI自动构建了 可以用于CF-Worker的 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/build/script.js" target="_blank" rel="noopener">script.js</a> 。</p><p>所以进入Cloudflare的Worker面板，并创建新的Worker。<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/2591219312.png" alt=""><br><img src="https://blog.rhilip.info/usr/uploads/2019/07/1417315508.png" alt=""></p><p>在Worker代码的编辑器里面，首先修改左上角的Worker名称，这个名称会影响到后面生成的Worker域名（除非你使用已经在CF中注册的其他域名）。然后将 build分支的 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/build/script.js" target="_blank" rel="noopener">script.js</a> 文件全部复制到左侧的代码框中替换Cloudflare默认的代码块。</p><p>最后点击Run，如果右侧出现如下图的JSON块说明部署成功。之后你就可以直接使用worker域名进行访问。</p><p>如我这边部署的域名是<code>https://ptgen.rhilip.workers.dev/</code>。<br>则获取豆瓣的信息则请求地址如下： <code>https://ptgen.rhilip.workers.dev/?url=https://movie.douban.com/subject/1297880/</code>。<br>请求链接格式和Python写的Pt-Gen相同，既可以使用<code>&amp;url=.....</code> ，也可以使用<code>&amp;site=....&amp;sid=....</code>。且返回字段格式尽可能与原repo相同。<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/1494080402.png" alt=""><br><img src="https://blog.rhilip.info/usr/uploads/2019/07/3901039727.png" alt=""></p><h3 id="2-Node环境下使用Wrangler部署"><a href="#2-Node环境下使用Wrangler部署" class="headerlink" title="2.Node环境下使用Wrangler部署"></a>2.Node环境下使用Wrangler部署</h3><p>如果你本地有Node环境，或者希望对Pt-Gen-cfworker有改进的需要，你可以自己构建Worker文件。</p><blockquote><p>Wrangler 文档： <a href="https://github.com/cloudflare/wrangler" target="_blank" rel="noopener">https://github.com/cloudflare/wrangler</a></p></blockquote><ol><li>安装Wrangler并注册全局信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i @cloudflare/wrangler -g</span><br><span class="line">wrangler config <span class="string">"<span class="variable">$&#123;CF_EMAIL&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;CF_API_KEY&#125;</span>"</span></span><br></pre></td></tr></table></figure></li></ol><p>其中 <code>${CF_EMAIL}</code>为你的Cloudflare帐号，而 <code>${CF_API_KEY}</code> 你可以在你帐号的Profile页面中找到Global API Key。</p><ol start="2"><li>取得项目源代码并配置Wrangler信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Rhilip/pt-gen-cfworker.git</span><br><span class="line">cp wrangler.toml.sample wrangler.toml</span><br><span class="line">sed -i <span class="string">"s/CF_ACCOUNT_ID/<span class="variable">$&#123;CF_ACCOUNT_ID&#125;</span>/g"</span> wrangler.toml</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><p>使用git clone或者zip包下载项目源代码后，需要编辑<code>wrangler.toml</code>文件的相关键值，并将<code>account_id</code>值改成你在Worker界面右侧API栏中看到的值，<code>name</code> 值会影响到部署时的值，默认为<code>ptgen</code>。如果你不愿部署在<code>..workers.dev</code>域名下，你可以再参照Wrangler文档，添加<code>zone_id</code>，<code>route</code>等信息，本处不再累述。</p><ol start="3"><li>部署到workers.dev上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#wrangler build # 构造</span></span><br><span class="line"><span class="comment">#wrangler preview # 构造并预览</span></span><br><span class="line">wrangler publish <span class="comment"># 构造并发布</span></span><br></pre></td></tr></table></figure></li></ol><p>如果配置好wrangler信息并使用 <code>wrangler publish</code>，会直接部署，并 提示如下信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ wrangler publish</span><br><span class="line">⬇️ Installing wasm-pack...</span><br><span class="line">⬇️ Installing wranglerjs...</span><br><span class="line">Built successfully.</span><br><span class="line">Successfully published your script.</span><br><span class="line">Successfully made your script available at ptgen.rhilip.workers.dev</span><br><span class="line">✨ Success! Your worker was successfully published. ✨</span><br></pre></td></tr></table></figure></p><p>而如果使用<code>wrangler preview</code>则会在构建完后，弹出<code>https://cloudflareworkers.com/</code>开头的网页。此时你可以使用console等方法对脚本进行调试。</p><p>除了使用wrangler，本人还在<code>package.json</code>中设置了<code>alias</code>，你也可以使用 <code>npm {build,preview,publish}</code> （在IDE中）快速调用。</p><h3 id="Travis-CI-自动构建"><a href="#Travis-CI-自动构建" class="headerlink" title="Travis-CI 自动构建"></a>Travis-CI 自动构建</h3><p>本项目使用Travis-CI对主分支的更新进行自动构建生成build分支信息。</p><p>相关配置文件写在 .travis.yml 中。请自行查阅，并在Travis-CI中对以下环境变量进行设置：<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/3885747407.png" alt=""></p><hr><p>著作权归作者所有。<br>商业转载请联系作者获得授权，非商业转载请注明出处。<br>作者：Rhilip<br>链接：<a href="https://blog.rhilip.info/archives/1095/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/1095/</a><br>来源：<a href="https://blog.rhilip.info/" target="_blank" rel="noopener">https://blog.rhilip.info/</a></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pt </tag>
            
            <tag> Cloudflare Worker </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PbootCMS 部署教程</title>
      <link href="/2019/07/24/127/"/>
      <url>/2019/07/24/127/</url>
      
        <content type="html"><![CDATA[<h2 id="演示环境"><a href="#演示环境" class="headerlink" title="演示环境"></a>演示环境</h2><ul><li>系统: Linux</li><li>面板：lnmp<ul><li>nginx</li><li>php-7.2</li></ul></li></ul><a id="more"></a><h2 id="创建网站"><a href="#创建网站" class="headerlink" title="创建网站"></a>创建网站</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/24/eAdd9f.jpg" alt=""></p><p>因为 PbootCMS 要求开启环境的 Pathinfo 模式支持，所以 Enable PHP Pathinfo 这一项必须选 y ，其他选项随意。</p><h2 id="下载和配置"><a href="#下载和配置" class="headerlink" title="下载和配置"></a>下载和配置</h2><p>进入网站目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/demo.example.com/</span><br></pre></td></tr></table></figure></p><p>下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/hnaoyun/PbootCMS/archive/V1.4.2.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf V1.4.2.tar.gz </span><br><span class="line">mv PbootCMS-1.4.2/* ./</span><br></pre></td></tr></table></figure></p><p>配置权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R www ./*</span><br><span class="line">chgrp -R www ./*</span><br></pre></td></tr></table></figure></p><h2 id="配置授权码"><a href="#配置授权码" class="headerlink" title="配置授权码"></a>配置授权码</h2><p>进入 PbootCMS 官网页面 <a href="https://www.pbootcms.com/freesn.html" target="_blank" rel="noopener">https://www.pbootcms.com/freesn.html</a> ，输入自己网站的域名免费获取永久授权码。</p><p><img src="https://s2.ax1x.com/2019/07/24/eA07fx.jpg" alt=""></p><p>登陆自己网站后台，在 <code>全局配置</code> &gt;&gt; <code>配置参数</code> 中填写系统授权码并提交，这时候网站就已经可以访问了。</p><p>系统后台默认访问路径：http://域名/admin.php 账号：admin 密码：123456</p><p><img src="https://s2.ax1x.com/2019/07/24/eABptI.jpg" alt=""></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>最后注意修改后台管理员的默认密码和点击自动修改数据库路径。</p><p><img src="https://s2.ax1x.com/2019/07/24/eABnNn.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> PbootCMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PT-Gen v0.4.x 搭建教程</title>
      <link href="/2019/05/15/126/"/>
      <url>/2019/05/15/126/</url>
      
        <content type="html"><![CDATA[<p>PT-Gen 0.4.4 版，相比于之前的 0.3.5 版，有很大的改动：</p><ol><li>增加了数据库缓存，所以服务器必须要安装 sqlite3。</li><li>5月13日豆瓣电影的公共API下线，导致 PT-Gen v0.4.2 及之前的版本无法获取电影数据，现在通过在前端页面和后端程序加入 apikey 才解决这个问题。</li><li>修改了 API 路径，由原来的 <code>/movieinfo/gen</code> 改为 <code>/infogen</code></li><li>去掉了 run.py</li></ol><p>建议之前使用 v0.3.5 的朋友按此教程升级到 v0.4.5，同时前端页面也要注意更新。</p><hr><p>服务器必备的软件环境：</p><ul><li>nginx</li><li>python3.5 或者更高</li><li>pip3</li><li>uWSGI</li><li>sqlite3</li></ul><p>我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。</p><a id="more"></a><hr><p>如果你的 vps 系统是比较新的，例如 Debian 9 ，可能已经预置了 python3.5 和 sqlite3。可以通过下面的命令查看<code>_sqlite3.so</code>情况，如果有类似 <code>/usr/lib/python3.5/lib-dynload/_sqlite3.cpython-35m-x86_64-linux-gnu.so</code>这样的文件，则不需要再编译安装 sqlite3 和 python3。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name _sqlite*.so</span><br></pre></td></tr></table></figure><h2 id="编译安装-sqlite3"><a href="#编译安装-sqlite3" class="headerlink" title="编译安装 sqlite3"></a>编译安装 sqlite3</h2><ol><li>下载源码</li><li>解压</li><li>进入目录</li><li>编译</li><li>安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span><br><span class="line">tar xzvf sqlite-autoconf-3280000.tar.gz</span><br><span class="line"><span class="built_in">cd</span> sqlite-autoconf-3280000</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/sqlite</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装成功后，会出现类型下面的提示</p><p><img src="https://s2.ax1x.com/2019/05/16/E77eAJ.png" alt=""></p><hr><h2 id="编译安装-python-3"><a href="#编译安装-python-3" class="headerlink" title="编译安装 python 3"></a>编译安装 python 3</h2><p>之前有编译安装 python3 的重新进入源码目录编译安装，没有的需下载源码。</p><h3 id="下载-python-源码"><a href="#下载-python-源码" class="headerlink" title="下载 python 源码"></a>下载 python 源码</h3><p>用 wget 从官网下载源码，最低可选择版本 python3.5。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz</span><br></pre></td></tr></table></figure><h3 id="解压，配置"><a href="#解压，配置" class="headerlink" title="解压，配置"></a>解压，配置</h3><p>下载完成后解压，然后修改setup.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.6.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.6.4</span><br><span class="line">vim setup.py</span><br></pre></td></tr></table></figure><p>查找 <code>sqlite_inc_paths</code> 新增</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'/usr/local/sqlite/include'</span>,</span><br><span class="line"><span class="string">'/usr/local/sqlite/include/sqlite3'</span>,</span><br></pre></td></tr></table></figure><p>完成后如下</p><p><a href="https://imgchr.com/i/E77YAH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/16/E77YAH.png" alt=""></a></p><p>保存并退出。</p><h3 id="编译，安装"><a href="#编译，安装" class="headerlink" title="编译，安装"></a>编译，安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-loadable-sqlite-extensions --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="建立软链"><a href="#建立软链" class="headerlink" title="建立软链"></a>建立软链</h3><p>建立 python3 和 pip3 的软链（安装过 python3 的不需要再建软链）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>建立软链后输入 python3 即可进入 python3 解释器，同时你还可以输入 python 或 python2 进入 python2 解释器，二者可以共存。</p><hr><h2 id="下载-PT-Gen"><a href="#下载-PT-Gen" class="headerlink" title="下载 PT-Gen"></a>下载 PT-Gen</h2><p>lnmp 新建主机，设置网站根目录和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p>进入网站根目录并下载程序源码, v0.3.5 用户先杀掉uwsig进程和删除网站目录里面的 PT-Gen。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/api.example.com</span><br><span class="line">wget https://github.com/BFDZ/PT-Gen/archive/0.4.5.tar.gz</span><br><span class="line">tar xzvf 0.4.5.tar.gz</span><br><span class="line">mv PT-Gen*/* ./</span><br></pre></td></tr></table></figure></p><p>修改数据库文件权限,使 www 用户可以读写数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 database/</span><br></pre></td></tr></table></figure></p><p>安装依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirement.txt</span><br></pre></td></tr></table></figure><hr><h2 id="安装，配置-uWSGI"><a href="#安装，配置-uWSGI" class="headerlink" title="安装，配置 uWSGI"></a>安装，配置 uWSGI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3  install uwsgi</span><br></pre></td></tr></table></figure><p>新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini</span><br></pre></td></tr></table></figure><p>填入此配置文件内容并保存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[uwsgi]</span></span><br><span class="line"><span class="comment"># 采用sock方式通信，程序在启动时会自己创建这个文件</span></span><br><span class="line"><span class="string">socket</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.sock</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.pid</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 指向网站目录</span></span><br><span class="line"><span class="string">chdir</span> <span class="string">=</span> <span class="string">/home/wwwroot/api.example.com</span></span><br><span class="line"><span class="comment"># python 启动程序文件</span></span><br><span class="line"><span class="string">wsgi-file</span> <span class="string">=</span> <span class="string">app.py</span></span><br><span class="line"><span class="comment"># python 程序内用以启动的 application 变量名</span></span><br><span class="line"><span class="string">callable</span> <span class="string">=</span> <span class="string">app</span></span><br><span class="line"><span class="comment"># 进程数，可按服务器配置和负载情况调高</span></span><br><span class="line"><span class="string">processes</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 线程数</span></span><br><span class="line"><span class="string">threads</span> <span class="string">=</span> <span class="number">8</span></span><br><span class="line"><span class="comment"># 开启master，程序会进入后台运行模式</span></span><br><span class="line"><span class="string">master</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大请求数，在指定数量的管理请求后重载worker</span></span><br><span class="line"><span class="string">max-requests</span> <span class="string">=</span> <span class="number">6000</span></span><br><span class="line"><span class="comment"># 指定启动用户</span></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 指定用户组</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line"><span class="string">daemonize</span> <span class="string">=</span> <span class="string">/var/log/uwsgi.log</span></span><br><span class="line"><span class="string">disable-logging</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>建议不要使用 root 用户启动 uwsgi，保持和 nginx 的启动用户一样。lnmp 中 nginx 进程是属于www ，所以 uwsgi 的 uid/gid 也要指定为 www 用户。</p><hr><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><p>修改 nginx 网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/vhost/api.example.com.conf</span><br></pre></td></tr></table></figure><p> <code>location /</code> 段添加 uwsgi 相关配置, v0.3.5 用户将 <code>run:app</code> 改成 <code>app</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">    include      uwsgi_params;</span><br><span class="line">    uwsgi_pass   unix:/tmp/uwsgi.sock;</span><br><span class="line">    uwsgi_param  UWSGI_CHDIR  /home/wwwroot/api.example.com;</span><br><span class="line">    uwsgi_param  UWSGI_SCRIPT app;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx reload</span><br></pre></td></tr></table></figure><hr><h2 id="运行后端"><a href="#运行后端" class="headerlink" title="运行后端"></a>运行后端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --ini config.ini</span><br></pre></td></tr></table></figure><p>这时访问 api 的域名，会出现提示 <code>Hello world~</code> ，表示程序已成功运行。</p><p>其他操作：</p><ul><li>重载：<code>uwsgi --reload /tmp/uwsgi.pid</code></li><li>停止：<code>uwsgi --stop /tmp/uwsgi.pid</code></li></ul><h2 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a>自动更新</h2><p>后台自动更新数据库需要在 crontab 中添加，建议10分钟更新5个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>最后一行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * <span class="built_in">cd</span> /home/wwwroot/api.example.com/ &amp;&amp; /usr/<span class="built_in">local</span>/bin/flask update_infogen</span><br></pre></td></tr></table></figure><h2 id="修改前端页面-api"><a href="#修改前端页面-api" class="headerlink" title="修改前端页面 api"></a>修改前端页面 api</h2><p>PT-Gen 的 api 的路径为 <code>api.example.com/infogen</code> ,前端页面修改此处的api网址为自己的即可。</p><p><img src="https://s2.ax1x.com/2019/05/18/EXJHjP.md.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> pt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权力的游戏第八季第一集</title>
      <link href="/2019/04/15/125/"/>
      <url>/2019/04/15/125/</url>
      
        <content type="html"><![CDATA[<blockquote><p>game.of.thrones.s08e01.repack.1080p.web.h264-memento<br>衣柜字幕组外挂字幕</p></blockquote><a id="more"></a><p><img src="https://img01.sogoucdn.com/app/a/100520146/44C264F6A516085829C54F9ED4582AEA" alt=""></p><p>◎译　　名　权力的游戏 第八季 / Game of Thrones: The Final Season / 权游8<br>◎片　　名　Game of Thrones Season 8<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　剧情 / 奇幻 / 冒险<br>◎语　　言　英语<br>◎上映日期　2019-04-14(美国)<br>◎IMDb评分  9.9/10 from 1975 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt5924366" target="_blank" rel="noopener">http://www.imdb.com/title/tt5924366</a><br>◎豆瓣评分　9.8/10 from 17498 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26584183/" target="_blank" rel="noopener">https://movie.douban.com/subject/26584183/</a><br>◎集　　数　6<br>◎片　　长　60分钟(E1-E2) / 80分钟(E3-E6)<br>◎导　　演　米格尔·萨普什尼克 Miguel Sapochnik / 大卫·努特尔 David Nutter / 戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss<br>◎编　　剧　戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss / 乔治·马丁 George R.R. Martin<br>◎主　　演　艾米莉亚·克拉克 Emilia Clarke<br>　　　　　　基特·哈灵顿 Kit Harington<br>　　　　　　彼特·丁拉基 Peter Dinklage<br>　　　　　　苏菲·特纳 Sophie Turner<br>　　　　　　麦茜·威廉姆斯 Maisie Williams<br>　　　　　　琳娜·海蒂 Lena Headey<br>　　　　　　伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright<br>　　　　　　尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau<br>　　　　　　约翰·C·布莱德利 John C. Bradley<br>　　　　　　阿尔菲·艾伦 Alfie Allen<br>　　　　　　皮鲁·埃斯贝克 Pilou Asbæk<br>　　　　　　格温多兰·克里斯蒂 Gwendoline Christie<br>　　　　　　利亚姆·坎宁安 Liam Cunningham<br>　　　　　　娜塔莉·伊曼纽尔 Nathalie Emmanuel<br>　　　　　　康勒斯·希尔 Conleth Hill<br>　　　　　　罗伊·麦克凯恩 Rory McCann<br>　　　　　　杰罗姆·弗林 Jerome Flynn<br>　　　　　　克里斯托弗·海维尤 Kristofer Hivju<br>　　　　　　约瑟夫·戴浦西 Joe Dempsie<br>　　　　　　雅各布·安德森 Jacob Anderson<br>　　　　　　伊恩·格雷 Iain Glen<br>　　　　　　安东·莱瑟 Anton Lesser<br>　　　　　　理查德·多默 Richard Dormer<br>　　　　　　杰玛·韦兰 Gemma Whelan<br>　　　　　　本·克朗普顿 Ben Crompton<br>　　　　　　哈弗波·朱利尔斯·比昂森 Hafþór Júlíus Björnsson<br>　　　　　　丹尼尔·波特曼 Daniel Portman<br>　　　　　　鲁珀特·范西塔特 Rupert Vansittart<br>　　　　　　贝拉·拉姆齐 Bella Ramsey</p><p>◎标　　签　权力的游戏 | HBO | 美剧 | 史诗 | 魔幻 | 经典 | 奇幻 | 美国</p><p>◎简　　介  </p><p>　　HBO剧集《权力的游戏》第八季将于2019年4月14日播出，本季共6集。<br>故事发展至第八季，重返临冬城的琼恩·雪诺（基特·哈灵顿 Kit Harington 饰）在布兰·史塔克（伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright 饰）口中得知了自己身世的秘密，让他与丹妮莉丝·塔格利安（艾米莉亚·克拉克 Emilia Clarke 饰）的关系蒙上了一层冰霜。<br>詹姆·兰尼斯特（尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau 饰）试图召集河间地驻军北伐异鬼，却发现艾德慕·徒利（托比亚斯·门基斯 Tobias Menzies 饰）已经包围你了奔流城。<br>攸伦·葛雷乔伊（皮鲁·埃斯贝克 Pilou Asbæ 饰）将黄金团带至君临获取了瑟曦（琳娜·海蒂 Lena Headey 饰）的信任，而实际上，他已经与无面者贾昆·赫加尔（汤姆·拉斯齐哈 Tom Wlaschiha 饰）私下达成了秘密协议。</p><p>◎获奖情况  </p><p>　　第5届豆瓣电影年度榜单(2018)<br>　　最值得期待的剧集(提名)</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH</a></p>]]></content>
      
      
      <categories>
          
          <category> 电视剧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBO </tag>
            
            <tag> 欧美剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱，死亡和机器人 LOVE DEATH + ROBOTS</title>
      <link href="/2019/04/07/124/"/>
      <url>/2019/04/07/124/</url>
      
        <content type="html"><![CDATA[<blockquote><p>内封多国字幕</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2019/04/07/5caa133ce4fca.jpg" alt="love_death_and_robots"></p><p>◎译　　名　爱，死亡和机器人 / LOVE DEATH + ROBOTS / 爱 x 死 x 机器人(台) / 爱、死亡 &amp; 机器人 / 爱情，死亡与机器人 / 爱，死亡与机器人 / 爱．死．机械人(港)<br>◎片　　名　Love, Death &amp; Robots<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　喜剧 / 科幻 / 动画 / 恐怖 / 奇幻<br>◎语　　言　英语<br>◎上映日期　2019-03-15(美国)<br>◎IMDb评分  8.8/10 from 36219 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt9561862" target="_blank" rel="noopener">http://www.imdb.com/title/tt9561862</a><br>◎豆瓣评分　9.2/10 from 146924 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/30424374/" target="_blank" rel="noopener">https://movie.douban.com/subject/30424374/</a><br>◎集　　数　18<br>◎片　　长　15分钟<br>◎导　　演　维克多·马尔多纳多 Víctor Maldonado / 加布里埃尔·彭纳基奥利 Gabriele Pennacchioli / 阿尔弗雷多·托雷斯 Alfredo Torres / 弗兰克·巴尔森 Franck Balson / 阿尔贝托·米尔戈 Alberto Mielgo / 蒂姆·米勒 Tim Miller / 达米安·纽诺 Damian Nenow / 杰罗姆·陈 Jerome Chen / 维塔利·舒舒科 Vitaliy Shushko / 欧文·沙利文 Owen Sullivan / 罗伯特·瓦利 Robert Valley / 戴夫·威尔逊 Dave Wilson / 乔恩·叶 Jon Yeo / 哈维尔·雷西奥·格雷西亚 Javier Recio Gracia<br>◎编　　剧　蒂姆·米勒 Tim Miller / 约翰·斯卡尔齐 John Scalzi / 阿拉斯泰尔·雷诺兹 Alastair Reynolds / 彼得·F·汉密尔顿 Peter F. Hamilton / 马尔科·克鲁斯 Marko Kloos / 乔·R·兰斯代尔 Joe R. Lansdale / 贾尼斯·罗伯逊 Janis Robertson<br>◎主　　演　斯科特·怀特 Scott Whyte<br>　　　　　　诺兰·诺斯 Nolan North<br>　　　　　　马修·杨·金 Matthew Yang King<br>　　　　　　迈克尔·本耶尔 Michael Benyaer<br>　　　　　　乔什·布雷纳 Josh Brener<br>　　　　　　艾莉·康德伦 Elly Condron<br>　　　　　　亨利·杜思韦特 Henry Douthwaite<br>　　　　　　亚伦·希梅尔斯坦 Aaron Himelstein<br>　　　　　　斯蒂芬·卡皮契奇 Stefan Kapičić<br>　　　　　　莫里斯·拉马奇 Maurice LaMarche<br>　　　　　　艾米丽·奥布莱恩 Emily O’Brien<br>　　　　　　凯文·迈克尔·理查德森 Kevin Michael Richardson<br>　　　　　　海伦·萨德勒 Helen Sadler<br>　　　　　　伊兰妮·谭 Elaine Tan<br>　　　　　　柯克·桑顿 Kirk Thornton<br>　　　　　　萨米拉·威利 Samira Wiley<br>　　　　　　玛丽·伊丽莎白·温斯特德 Mary Elizabeth Winstead<br>　　　　　　卡洛斯·阿拉斯拉奇 Carlos Alazraqui<br>　　　　　　亚当·巴特利 Adam Bartley<br>　　　　　　托弗·戈瑞斯 Topher Grace<br>　　　　　　尤里·洛文塔尔 Yuri Lowenthal<br>　　　　　　克里斯托弗·L·帕森 Christopher L. Parson<br>　　　　　　弗雷德·塔特西奥 Fred Tatasciore<br>　　　　　　布鲁斯·托马斯 Bruce Thomas<br>　　　　　　艾玛·索内特 Emma Thornett<br>　　　　　　加里·安东尼·威廉斯 Gary Anthony Williams<br>　　　　　　盖瑞·科尔 Gary Cole<br>　　　　　　约翰·迪·玛吉欧 John Di Maggio<br>　　　　　　克里斯·帕内尔 Chris Parnell<br>　　　　　　吉姆·皮里 Jim Pirri<br>　　　　　　内斯特·塞拉诺 Nestor Serrano<br>　　　　　　吉尔·塔利 Jill Talley<br>　　　　　　劳拉·沃德尔 Laura Waddell<br>　　　　　　泰姆·温特斯 Time Winters<br>　　　　　　格文多林·叶 Gwendoline Yeo<br>　　　　　　奥米德·阿布塔西 Omid Abtahi<br>　　　　　　安东尼奥·阿尔瓦雷斯 Antonio Alvarez<br>　　　　　　布莱恩·布鲁姆 Brian Bloom<br>　　　　　　格雷厄姆·汉密尔顿 Graham Hamilton<br>　　　　　　迪特尔·詹森 Dieter Jansen<br>　　　　　　安德烈·索格利扎索 André Sogliuzzo</p><p>◎标　　签　科幻 | netflix | 动画 | 短片集 | 美国 | 赛博朋克 | 2019 | 奇幻</p><p>◎简　　介  </p><p>　　这部名为《爱，死亡和机器人》的动画短片合集由18部分组成，每部分时长5-15分钟。这些短片涵盖多种类型，包括科幻、奇幻、恐怖和喜剧；这些短片也将包含多种形式，包括传统2D和3DCGI短片。<br>18部短片导演列表：<br>1.桑尼的优势 Dave Wilson<br>2.三个机器人 Víctor Maldonado&amp;Alfredo Torres<br>3.证人 Alberto Mielgo<br>4.机动装甲 Franck Balson<br>5.噬魂者 Owen Sullivan<br>6.当酸奶统治世界 Victor Maldonado &amp; Alfredo Torres<br>7.裂缝以外 Leon Berlue,Dominique Boidin,Remi Kozyra,Maxime Luere<br>8.祝有好的收获 Oliver Thomas<br>9.垃圾场 Javier Recio Gracia<br>10.变形者 Gabriele Pennacchioli<br>11.帮手 Jon Yeo<br>12.古鱼复苏 Damian Nenow<br>13.新运十三 Jerome Chen<br>14.齐马的作品 Robert Valley<br>15.盲点 Vitality Shushko<br>16.冰河时代 Tim Miller<br>17.不一样的历史 Victor Maldonado &amp; Alfredo Torres<br>18.秘密战争 Istvan Zorkoczy</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z</a></p>]]></content>
      
      
      <categories>
          
          <category> 电视剧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧美剧 </tag>
            
            <tag> Netflix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第10放映室《影话2018》</title>
      <link href="/2019/02/09/123/"/>
      <url>/2019/02/09/123/</url>
      
        <content type="html"><![CDATA[<p>聚焦2018中国银幕，盘点全年热门影片。一年一度，妙语酷评，第10放映室传统保留节目《影话2018》，除夕至初六，每天中午12:26，陪您一起边吃边看过大年！</p><p>每天同步更新下载链接:<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA</a></p>]]></content>
      
      
      <categories>
          
          <category> 电视节目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第10放映室 </tag>
            
            <tag> CCTV10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>种子文件编辑工具 Torrent File Editor</title>
      <link href="/2019/02/09/122/"/>
      <url>/2019/02/09/122/</url>
      
        <content type="html"><![CDATA[<p>Torrent File Editor 是一款开源免费的种子文件编辑工具，支持 Windows 和 Mac 平台，以及自带中文语言。</p><p>下载地址：<a href="https://sourceforge.net/projects/torrent-file-editor/" target="_blank" rel="noopener">https://sourceforge.net/projects/torrent-file-editor/</a></p><a id="more"></a><hr><p>特点：</p><ul><li>新建 .torrent 文件</li><li>通过简单、人性化的界面编辑种子文件</li><li>以 JSON 格式编辑 .torrent 文件</li><li>添加，删除和交换种子文件内的文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Torrent File Editor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ampache 私人云音乐搭建和使用</title>
      <link href="/2019/01/13/121/"/>
      <url>/2019/01/13/121/</url>
      
        <content type="html"><![CDATA[<p>Ampache 是一个​基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何平台的网络设备访问自己的视频和音乐。</p><p>和 Plex 相比，这款程序全部功能都是免费开源的，并且支持包括 Plex 在内的多种客户端 API 和网络传输协议。</p><p>项目网址：<a href="https://github.com/ampache/ampache" target="_blank" rel="noopener">https://github.com/ampache/ampache</a></p><a id="more"></a><hr><hr><h1 id="服务端搭建"><a href="#服务端搭建" class="headerlink" title="服务端搭建"></a>服务端搭建</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li><p>web 服务程序，下列之一</p><ul><li>Apache</li><li>lighttpd</li><li>nginx</li><li>IIS</li></ul></li><li><p>PHP 5.6 或者更高版本</p></li><li><p>PHP 模块：</p><ul><li>PDO</li><li>PDO_MYSQL</li><li>hash</li><li>session</li><li>json</li><li>simplexml (可选)</li><li>curl (可选)</li><li>对于 FreeBSD 系统必须加载一下模块:<ul><li>php-xml</li><li>php-dom</li></ul></li></ul></li><li><p>MySQL 5.x</p></li></ul><p>本文的演示环境：</p><ul><li>lnmp 1.5</li><li>vps<ul><li>Debian 7</li><li>1 CPU</li><li>512 MB 内存</li><li>20G 硬盘</li></ul></li></ul><p>linux 服务器上推荐使用 <a href="https://lnmp.org/" target="_blank" rel="noopener">lnmp</a> 安装环境。如果只是用来做音乐服务器，对 vps 的配置要求不高，因为音乐文件的体积也不大，码率要求也低。</p><hr><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>安装完 lnmp ，然后创建网站目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost list</span><br></pre></td></tr></table></figure><p>下载程序，注意不要 git clone ，要从 Release 下载最新版本完整程序安装包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/test.nas.ink/</span><br><span class="line">wget https://github.com/ampache/ampache/releases/download/3.9.0/ampache-3.9.0_all.zip</span><br><span class="line">unzip ampache-3.9.0_all.zip</span><br></pre></td></tr></table></figure><p>修改 config 目录权限，确保安装时配置文件可写入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R config/</span><br></pre></td></tr></table></figure></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h3><p>访问你配置的网站域名，如果没出错，会出现这个安装页面。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz538xki2lj20zk0i6q4e.jpg" alt="image"></p><p>Ampache 支持包括中文在内的多种语言。</p><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><p>PHP 整型大小一项会有警告，但貌似影响可以忽略不计。如果其他项没问题，点击继续。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz53bur38kj20yv184nb8.jpg" alt="image"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>填写端口和密码，然后点击插入数据库。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53guvyb2j20yo0q7goh.jpg" alt="image"></p><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><p>如果程序安装包解压在网站根目录，web 路径留空，不用填。<br><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53jsqp3qj20wd0m5775.jpg" alt=""></p><p>填写 MySQL 用户名和密码</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53mpe9m9j20x80krwi4.jpg" alt="image"></p><p>其他设置都保存默认即可，除非你清楚选项的作用。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz53pfmrfgj20x00dumys.jpg" alt="image"></p><p>点击查看文件栏，然后点击第一行配置文件后面的写。如果提示写入错误，请检查 config 目录权限。</p><h3 id="配置管理员用户名和密码"><a href="#配置管理员用户名和密码" class="headerlink" title="配置管理员用户名和密码"></a>配置管理员用户名和密码</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53r2qkrcj20w80gpabq.jpg" alt="image"></p><h3 id="检查更新"><a href="#检查更新" class="headerlink" title="检查更新"></a>检查更新</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53u4ma9kj20x20ni76v.jpg" alt="image"></p><p>目前是最新版，无需更新。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53ujksyej20wb09d3zc.jpg" alt="image"></p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p>现在已经安装成功，返回网站首页即可使用了。<br><img src="https://ws1.sinaimg.cn/large/92253953gy1fz53w6565qj20ny0jrdgr.jpg" alt="image"></p><hr><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p>目录就是服务器上存储音乐文件的路径，设置目录后 Ampache 可以扫描路径下的音乐文件，将歌曲信息添加到程序的曲库里。</p><p>首先在服务器上创建一个目录，用于存放音乐文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/wwwroot/test.nas.ink/music</span><br></pre></td></tr></table></figure><p>使用 ftp 上传文件到目录。因为 linux 系统没装中文语言，上传后文件名会乱码，所以我都是把文件压缩后上传，再解压。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz54bn55kmj213m0mbafh.jpg" alt="image"></p><p>登录 ampache 后台，第一次进入会提示创建目录。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54de43bjj21h50pn76u.jpg" alt="image"></p><p>或者点左侧管理员图标，也可添加目录。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz54nrp3l3j21hc0gr75x.jpg" alt=""></p><p>目录名称随意填写，目录类型选 local 。文件名样式按照你上传的音乐文件样式修改，需和你上传的音乐文件名样式对应，右边有参数说明。目录样式按实际情况修改。路径填写你之前创建的目录，注意是绝对路径。然后点击添加目录。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54feb3jsj21hb0njq81.jpg" alt="image"></p><h2 id="扫描目录"><a href="#扫描目录" class="headerlink" title="扫描目录"></a>扫描目录</h2><p>第一次添加目录会自动扫描一次，以后上传了新歌可以在目录列表里手动扫描。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54r581c0j21ha0l3n05.jpg" alt="image"></p><p>扫描完以后，在歌曲标题里面，点击播放按钮可通过网页播放歌曲。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54pz036rj21hc0q477g.jpg" alt=""></p><h2 id="流式播放"><a href="#流式播放" class="headerlink" title="流式播放"></a>流式播放</h2><p>ampache 的网页播放十分简陋，并且不知什么原因 flac 格式无法播放。ampache 能够覆盖全平台的方式是网络串流。</p><p>点击网页右侧的播放方式选项，默认选项：网络播放器，即通过网页播放。现在改成 流。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz57aiq8yhj21hc0q9dj5.jpg" alt="image"></p><p>然后再点击歌曲的播放按钮，就不会再网页播放，而是会提示下载一个 m3u 文件。接触过直播源或者在线视频抓取的同学应该知道 m3u8 这种文件，m3u 是一种 Windows-1252格式纯文本文件，可以指定一个或多个多媒体文件的位置，而 M3U8 就是 UTF-8 编码的 M3U。</p><p><img src="https://wx2.sinaimg.cn/large/92253953gy1fz54q4fhy7j21h70nx786.jpg" alt=""></p><p>下载后，即可使用本地支持 m3u 的播放器打开。列如 VLC、foobar2000。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><p>foobar2000 打开，需要播放过一次才会显示歌曲名等信息，不知道是不是我的版本有问题。所以还是建议用 VLC 播放，VLC 在几乎所有平台是都有对应安装包。</p><h2 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h2><p>如果想把全部歌曲生成 m3u 添加到本地播放器曲库，可以通过创建智能播放列表的方式，将全部歌曲生成一个 m3u 文件。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671huiqj21gq0g9tao.jpg" alt="image"></p><p>不用添加任何规则，点击创建就是把所以歌曲保存成列表。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671ktevj21h50h70uy.jpg" alt="image"></p><p>然后点播放按钮下载 m3u 文件。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz5671ogbyj21gp0ecgnp.jpg" alt="image"></p><p>把 m3u 文件拖入 VLC 的媒体库，点击展开列表。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><h2 id="key-的有效期"><a href="#key-的有效期" class="headerlink" title="key 的有效期"></a>key 的有效期</h2><p>程序默认设置 key 的有效期是 7 个小时，也就是添加到本地播放器媒体库的歌曲 7 个小时后会无法播放。</p><p>在管理员，System，将 分享链接的默认有效期改成 0 ，本地的 m3u 歌曲列表就不会失效了。</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz56denyadj21gq0p9jwv.jpg" alt="image"></p><p>如果再要使其失效，可以手动刷新 API key</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkbtwhj21gx0daabw.jpg" alt="image"></p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkf7clj21hb0jl41g.jpg" alt="image"></p><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>Ampache 还有很多功能我没搞清楚怎么用，目前唯一知道的是采用流媒体方式播放，MPDroid 没搞明白怎么配置。在安卓上有个应用叫 Power Ampache ，可以访问 Ampache 服务器，但是使用体验十分差。Plex 做的不错，但移动端是收费的。找了一圈发现还是 VLC 最强大。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 音乐 </tag>
            
            <tag> Ampache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 年十大热门 BT 站</title>
      <link href="/2019/01/08/120/"/>
      <url>/2019/01/08/120/</url>
      
        <content type="html"><![CDATA[<p>2019 年初访问量大的BT站有哪些？延续前几年的传统，我们统计发现 YTS 领先了 The Pirate Bay。在经历了动荡的一年后，BT 站排名相对比较稳定。</p><p>虽然现在流媒体风靡一时，但 BT 站仍然很热门。</p><p>长期以来，海盗湾都是 BT 站中无可争议的第一。但今年年初 YTS 和 1337x 的访问量超过了海盗湾。</p><p>海盗湾的访问量下滑可能归因于过去几个月的频繁宕机和接连的问题。但对于许多人来说，海盗湾仍然是首选站点，或者过几个月海盗湾重新获得领先地位，也不足为奇。</p><p>今年的名单出现了一名“新人”。TorrentDownloads 去年缺席后，又回来了，该站取代了去年 iDope 的位置。</p><p>因为本文主要针对英语用户和面向国际受众的 BT 站进行排名，所以即使 <a href="https://rutracker.org/forum/index.php" target="_blank" rel="noopener">RuTracker</a>,<a href="https://dytt8.net/" target="_blank" rel="noopener">Dytt8</a>,<a href="https://www.elitetorrent.biz/" target="_blank" rel="noopener">EliteTorrent</a>,<a href="https://www.torrent9.uno/" target="_blank" rel="noopener">Torrent9</a> 符合流量条件，也不会包括在内。</p><p>以下是新年伊始访问量最大的 BT 站的榜单，这个排行榜是基于 Alexa 的数据。</p><a id="more"></a><hr><h2 id="1、YTS-AM"><a href="#1、YTS-AM" class="headerlink" title="1、YTS.AM"></a>1、YTS.AM</h2><p>网址: <a href="http://yts.am/" target="_blank" rel="noopener">http://yts.am/</a></p><p>这个网站是原 YTS/YIFY 的非官方继任者。</p><h2 id="2、1337X"><a href="#2、1337X" class="headerlink" title="2、1337X"></a>2、1337X</h2><p>网址：<a href="http://1337x.to/" target="_blank" rel="noopener">http://1337x.to/</a></p><p>1337X 多年来一直稳居榜单之中，该站有专门的发布组，提供最新的资源。尽管多个国家的 ISP 对其进行封锁，但其访问量仍在增长。</p><h2 id="3、海盗湾"><a href="#3、海盗湾" class="headerlink" title="3、海盗湾"></a>3、海盗湾</h2><p>网址：<a href="http://thepiratebay.org/" target="_blank" rel="noopener">http://thepiratebay.org/</a></p><p>海盗湾去年满 15 周岁，是这个榜单里最古老的 BT 站。如果我们把来自代理的流量也计算在内，该站可能会排在第一。但因为频繁宕机和接连的问题，该站暂列第三。</p><h2 id="4、RARBG"><a href="#4、RARBG" class="headerlink" title="4、RARBG"></a>4、RARBG</h2><p>网址：<a href="http://rarbg.to/" target="_blank" rel="noopener">http://rarbg.to/</a></p><p>RARBG 成立于 2008 年，该站在电影和电视剧方面更新速度较快。RARBG 与去年相比下降了两个名次。该站有多个域名，这里选取访问量最大的域名进行排名。</p><h2 id="5、Torrentz2"><a href="#5、Torrentz2" class="headerlink" title="5、Torrentz2"></a>5、Torrentz2</h2><p>网址：<a href="https://torrentz2.eu/" target="_blank" rel="noopener">https://torrentz2.eu/</a></p><p>Torrentz2 是 Torrentz.eu 的仿站，虽然去年发生过一些问题，但该站仍然很热门。</p><h2 id="6、NYAA-SI"><a href="#6、NYAA-SI" class="headerlink" title="6、NYAA.SI"></a>6、NYAA.SI</h2><p>网址：<a href="https://nyaa.si/" target="_blank" rel="noopener">https://nyaa.si/</a></p><p>NYAA.si 是之前关站重生后的网站。该站去年被 Cloudflare 停过机，但很快切换了服务商。</p><h2 id="7、LIMETORRENTS"><a href="#7、LIMETORRENTS" class="headerlink" title="7、LIMETORRENTS"></a>7、LIMETORRENTS</h2><p>网址：<a href="https://www.limetorrents.info/" target="_blank" rel="noopener">https://www.limetorrents.info/</a></p><p>Limetorrents 是一个建站时间超过五年的 BT 站。该站几个月前换了域名，并加入了 CDN 以应对各种拦截。</p><h2 id="8、ZOOQLE"><a href="#8、ZOOQLE" class="headerlink" title="8、ZOOQLE"></a>8、ZOOQLE</h2><p>网址：<a href="https://zooqle.com/" target="_blank" rel="noopener">https://zooqle.com/</a></p><p>Zooqle 拥有近 380 万个种子，排名一直保持在前 10。该站官方宣传自己是 Bitsnoop 的替代网站。</p><h2 id="9、EZTV-AG"><a href="#9、EZTV-AG" class="headerlink" title="9、EZTV.AG"></a>9、EZTV.AG</h2><p>网址：<a href="http://eztv.ag/" target="_blank" rel="noopener">http://eztv.ag/</a></p><p>网站内容主要是英美剧资源。域名换了很多次，目前网站运营团队不知是不是原来的。几个月前，发布组 ETTV 指责该站盗取他们的种子改名发布。</p><h2 id="10、TORRENTDOWNLOADS"><a href="#10、TORRENTDOWNLOADS" class="headerlink" title="10、TORRENTDOWNLOADS"></a>10、TORRENTDOWNLOADS</h2><p>网址：<a href="https://www.torrentdownloads.me/" target="_blank" rel="noopener">https://www.torrentdownloads.me/</a></p><p>TorrentDownloads 已经建站多年，去年缺席前 10 以后，今年凭借每月数百万的用户访问量回到了榜单。</p><hr><p>via:<a href="https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2019/" target="_blank" rel="noopener">Top 10 Most Popular Torrent Sites of 2019</a></p>]]></content>
      
      
      <categories>
          
          <category> BT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT </tag>
            
            <tag> torrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TnP压制组标准&amp;规范</title>
      <link href="/2018/12/23/119/"/>
      <url>/2018/12/23/119/</url>
      
        <content type="html"><![CDATA[<p>这是 TnP 压制组在 m-team 站内论坛公开发布的压制标准，和其他顶级压制小组的标准规范大同小异。对于想学习压制或者组建压制组的人来说具有参考意义。</p><a id="more"></a><hr><p><strong>压制组标准&amp;规则</strong></p><p><strong>目的</strong><br>规范化内部小组压制作品，提高制作质量</p><p><strong>压制任务申请</strong><br><strong>流程</strong></p><p>所有的压制都会在 <a href="https://tp.m-team.cc/todo.php" target="_blank" rel="noopener">https://tp.m-team.cc/todo.php</a> 发布压制任务，Internal成员可以前往认领任务。</p><ul><li>Internal成员不建议一次认领多个任务（但不包括同一电影的不同分辨率）。</li><li>认领首发电影压制需要尽可能快发布，非首发电影建议2周内发布。</li><li>管理人员保留对超过限定压制时间的任务重新指派压制人的权利。</li></ul><p><strong>格式</strong><br>所有的视频、音频、字幕流等都必须封装在mkv中</p><p><strong>视频流</strong><br>所有的压制都建议使用最佳的源进行制作，这意味着可能需要下载多个源进行截图对比。使用更好的源制作的压制可能会代替掉旧的、基于更差的源制作的作品。建议在职人论坛（<a href="https://tp.m-team.cc/forums.php?action=viewforum&amp;forumid=11" target="_blank" rel="noopener">https://tp.m-team.cc/forums.php?action=viewforum&amp;forumid=11</a> ）展示你做的对比，以便其他成员观看和评论。</p><p>x264是暂时唯一推荐的视频编码。对于x265的补充规定会另外叙述。其余编码因为编码效率和质量等问题不应再采用。对于源视频中存在的问题，鼓励进行修复，但不强制规定。同时，Source vs Encode对比截图也是<strong>必须</strong>添加到种子详情描述中的，使用滤镜修复的问题区域必须添加Source vs Filtered vs Encode对比截图。</p><p>对于10bit压制，推荐添加Source vs 10Bit Encode vs 8Bit Encode截图证明10bit的必要性。</p><p><strong>音频流</strong><br>对于压制，不推荐使用体积过大的无损音轨（占总mkv文件体积超过1/3）。</p><p>允许的格式 (无损格式):</p><ul><li>DTS:X / DTS-HD MA.</li><li>Atmos / TrueHD. 通常杜比Atmos/TrueHD由于旧设备兼容性问题，都会内嵌AC3内核，推荐一并封装至mkv中。</li><li>FLAC. 对于单声道/立体声必须使用FLAC，以及源音频格式为LPCM格式必须转换成FLAC格式。 </li></ul><p>允许的格式 (有损格式):</p><ul><li>DTS (and other lossy variants). 推荐直接使用DTS-HD/DTS:X中的DTS核心。请务必注意768Kbps的DTS核心不应该使用在压制中，原因是DTS核心的低效编码使得其效果反而不如AC3 640Kbps。如有需要可以使用DTS-HD Master Suite对8声道的DTS-HD/DTS:X音轨进行重新制作，提取DTS-ES 6.1核心。</li><li>Dolby Digital (and other lossy variants). 一般直接从Atmos/TrueHD中提取，如果需要压制，可以使用Sony Sound Forge Pro制作，它是Dolby官方授权的编码器。</li><li>AAC. 只允许出现在单声道/立体声中，一般使用在导评音轨上。如果是视频主音轨，推荐使用FDK AAC制作，如果是导评音轨，可以使用QAAC制作。</li></ul><p>特殊的不允许使用的格式:</p><ul><li>LPCM. 无论任何情况都不应该出现极为低效的LPCM格式。必须转码至无损的FLAC格式（单声道/立体声）或者使用DTS-HD Master Suite制作成DTS-HD MA格式（多声道）。</li></ul><p>导评音轨如果在源上存在，必须进行封装。可以选择直接封装或者进行压制再封装。对于压制，推荐立体声的导评成品码率控制在80Kbps左右。</p><p><strong>字幕</strong><br>必须封装源中带有的英文字幕以及中文字幕（如果存在）。并且，必须在mkvtoolnix中正确标注字幕类型。</p><ul><li>对于英文字幕，主要存在SDH、Non-SDH、Forced三种类型。SDH全称为Subtitles for the deaf or hard-of-hearing，即听力障碍专用字幕，明显特征为存在很多非对白的描述性字幕。Non-SDH则为普通常见的英语字幕。Forced为非英语对白字幕，即英语电影中只针对外语部分的字幕。</li><li>对于英文字幕，封装OCR的.SRT格式也是必须的。鉴于大部分压制员的母语为中文而非英语，OCR可以交由其他人完成。一般在国外站点论坛均有很多母语为英语的用户，并且可以提供OCR处理，详细事宜清联系TnP组组长Nginx。</li><li>对于中文字幕，主要需要标注简体、繁体、粤语，对应Simplified、Traditional、Cantonese。中文字幕由于其识别难度大，校对成本高，不推荐每一片都进行中文的OCR处理，热门电影也可以寻求WEBDL片源自带中字进行匹配。</li><li>评论音轨字幕需要注明为评论字幕。</li></ul><p><strong>章节</strong><br>源中如果存在章节，必须一并封装。如果有具体章节名（非1、2、3…等，存在具体含义的章节名），推荐合理命名。</p><ul><li>章节名为英文，必须参照源菜单手动录入。</li><li>章节名为非英文，推荐按照Chapter X (原外文章节名)命名。如果录入外文章节名有困难可以只提供Chapter X形式命名。</li><li>不存在具体章节名，统一使用ChapterGrabber软件生成命名Chapter X。</li></ul><p><strong>文件信息</strong><br>针对各种类型的作品发布前需要注意填写的信息。</p><p><strong>压制</strong><br>音视频流的Title填入相关信息。</p><ul><li>视频流可以填入”压制人ID @ TnP”以及视频轨道对应信息。</li><li>音频流可以填入特殊音轨说明，如导评音轨应填写”Commentary with director Christopher Nolan”。</li><li>具体每条轨道的编码格式等信息，必须填写。</li></ul><p>举例</p><ul><li>EncoderID @ TnP / x264 / 16888 kbps / 1080p / 23.976 fps / 16:9 / High Profile 4.1</li><li>DTS-HD Master Audio / 5.1 / 48 kHz / 3826 kbps / 24-bit</li><li>Commentary with director Christopher Nolan / Dolby Digital Audio / 2.0 / 48 kHz / 224 kbps / 16-bit</li><li>FLAC Audio / 1.0 / 48 kHz / 579 kbps / 24-bit</li></ul><p><strong>默认轨道</strong><br>对于语言为英语的电影：</p><ul><li>默认轨道应设置在：视频轨道、第一音频轨道、英文Forced字幕轨道（如有）</li><li>非默认轨道应该设置在：除以上的所有轨道</li></ul><p>对于语言为非英语的电影：</p><ul><li>默认轨道应该设置在：视频轨道、第一音频轨道、第一英文字幕轨道</li><li>非默认轨道应该设置在：除以上所有轨道</li></ul><p>错误设置默认轨道选项会导致REPACK/PROPER</p><p><strong>命名</strong></p><ul><li>使用英文命名，以IMDB标题为准。如果电影标题为非英语标题，使用IMDB的”World-wide”标题。如红海行动标题为Operation Red Sea （<a href="https://www.imdb.com/title/tt6878882/releaseinfo?ref_=tt_ql_dt_2" target="_blank" rel="noopener">https://www.imdb.com/title/tt6878882/releaseinfo?ref_=tt_ql_dt_2</a> ）。</li><li>作品题目中需要包含特定的版本信息和片源地区（不填则为默认US或首发片源，推荐存在不同地区片源的时候填写），如加长版（Extended Cut）和日版（JPN）</li></ul><p><strong>电影命名</strong><br>压制: Title.Year.Edition.Source.Resolution.Acodec.Vcodec-Tag</p><p>举例:</p><ul><li>Captain.America.The.Winter.Soldier.2014.BluRay.1080p.DTS.x264-TnP</li><li>X-Men.Days.of.Future.Past.2014.Hybrid.1080p.BluRay.AC3.x264-TnP</li><li>Interstellar.2014.JPN.1080p.BluRay.DTS-HD.MA.5.1.x264-TnP</li><li>Maze.Runner.2014.REPACK.BluRay.720p.DD5.1.x264-TnP</li><li>Zootopia.2014.GER.Extended.Cut.BluRay.1080p.Atmos.7.1.x264-TnP</li></ul><p>以下是命名中可能用到的编码格式以及对应缩写供参考。<br><img src="https://wx1.sinaimg.cn/large/92253953gy1fywvbc9nylj20b904z74q.jpg" alt="V_.png"></p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fywvc9gg9oj20f40daaaw.jpg" alt="A_.jpg"></p><p><strong>种子详情</strong><br>种子详情需要包含NFO，务必提供恰当的截图进行展示。<br>NFO需要包括：</p><ul><li>压制源信息，尽可能涵盖地区、版本、来源小组。一般源文件名即可满足要求。</li><li>视频信息、音频信息。主要为分辨率、帧率、编码方式和码率等。</li><li>字幕信息。主要为字幕语言。</li><li>x264输出日志信息，一般包括”x264 [info]: frame “、”x264 [info]: consecutive B-frames”等。</li><li>章节信息。是否包含章节（Yes/No）、章节是否命名（Numbered/Named）。<br>NFO模板小组统一，详细模板查看本版对应主题帖。</li></ul><p>恰当的截图包括：</p><ul><li>Source vs Encode对比截图，Encode必须选取压缩程度最大的B帧，推荐Source选取P帧。</li><li>截图使用AVS脚本在恰当位置显示帧信息，包括当前帧数/总帧数、帧类型等。</li><li>可能的情况下添加与0day及其他P2P小组的对比截图。如”Source vs Encode vs VietHD vs SPARKS”。</li></ul><p><strong>作品发布后的问题</strong><br><strong>REPACK/PROPER</strong><br>作品发布后，主要有以下情况需要进行REPACK/PROPER</p><ul><li>对已经发布过的、存在严重问题（如切边有误、花屏、封装有误、音视频流播放有问题等）的作品进行修复，必须进行REPACK/PROPER。重新制作的作品需要在标题中Edition位置注明REPACK（由原发布者自行重新制作）或PROPER（由其他成员制作），并且需要在种子详情明显位置注明修正的问题。</li><li>对已经发布过的作品，发布后寻找到新的质量更好（视频、音频）的源，推荐进行REPACK/PROPER，并且需要给出不同源的对比截图。</li></ul><p>所有的REPACK/PROPER都会导致原来的作品被删除，新的作品进行置顶和Free处理。</p><hr><p>转载来源:<a href="https://tp.m-team.cc/forums.php?action=viewtopic&amp;forumid=53&amp;topicid=27317" target="_blank" rel="noopener">TnP压制组标准&amp;规范 / TnP Rules and Standards （11/9更新 添加默认轨道要求）</a></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TnP </tag>
            
            <tag> 视频压制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>墙与梯的较量</title>
      <link href="/2018/12/14/118/"/>
      <url>/2018/12/14/118/</url>
      
        <content type="html"><![CDATA[<p>在某个 Telegram 群讨论到了现在很多 10 多岁的年轻人都学会翻墙了，想起我小的时候，大概也是在 10 岁左右第一次翻墙。作为经历过多次墙与梯的升级的网虫，把这个写下来也算是一个对童年的回忆了……</p><a id="more"></a><hr><p><img src="/images/118/118.jpg" alt=""></p><hr><p>转载来源:<a href="https://webcache.googleusercontent.com/search?q=cache:https://blog.yandere.moe/moe/gfw-vs-proxy/97.html" target="_blank" rel="noopener">墙与梯的较量——那些年我们一起用过的翻墙手段</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络封锁 </tag>
            
            <tag> vpn </tag>
            
            <tag> ss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VapourSynthEditor-r19-64bit</title>
      <link href="/2018/12/08/117/"/>
      <url>/2018/12/08/117/</url>
      
        <content type="html"><![CDATA[<p>基于 VapourSynthEditor-r19 源码编译，未知的原因导致 r18 的汉化文件无法用在 r19 上面，所以这是“原汁原味”的英文原版。<br><a id="more"></a></p><hr><p><strong>下载</strong></p><blockquote><p>文件: VapourSynthEditor-r19-64bit.zip<br>MD5: 16F6031DB90DA31F84660CD02E42CF3F<br>SHA1: 9827B5004591FA4E6C8774CEFA9A54C94CCEDE4B<br>SHA256: E705278268633E2CCF6411837D59A1227567B74EAC5367BDE57F11BD52FFE277</p></blockquote><p>OneDrive: <a href="https://pan.nas.ink/Encoder/tools/VapourSynthEditor/" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a><br>STACK: <a href="https://bfdz.stackstorage.com/s/U1u4XKPLwLVIWCQ" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a><br>cargo: <a href="https://cargo.hyperay.cc/Encoder/tools/VapourSynthEditor-r19-64bit.zip" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vsedit </tag>
            
            <tag> VapourSynth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian/Ubuntu/CentOS 网络安装/重装系统/纯净安装 一键脚本</title>
      <link href="/2018/11/30/116/"/>
      <url>/2018/11/30/116/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Vicer 突然临时关闭了博客，这是原文和脚本的备份。</p></blockquote><p>脚本：<a href="https://pan.nas.ink/script/InstallNET.sh" target="_blank" rel="noopener">https://pan.nas.ink/script/InstallNET.sh</a></p><p>第 328 行有一个压缩包，如果你也要备份这个脚本，建议把压缩包也下载好，然后修改链接。</p><a id="more"></a><hr><p><strong>背景</strong>:</p><ul><li>适用于由 GRUB 引导的 CentOS, Ubuntu, Debian 系统.</li><li>使用官方发行版去掉模板预装的软件.</li><li>同时也可以解决内核版本与软件不兼容的问题。</li><li>只要有 root 权限,还您一个纯净的系统。</li></ul><p><strong>注意</strong>:</p><ul><li>全自动安装默认 root 密码: <code>Vicer</code>,安装完成后请立即更改密码.</li><li>能够全自动重装 Debian/Ubuntu/CentOS 等系统.</li><li>同时提供dd安装镜像功能,例如: 全自动无救援 dd 安装 windows 系统</li><li>全自动安装 CentOS 时默认提供 VNC 功能,可使用 VNC Viewer 查看进度,</li><li>VNC 端口为 1 或者 5901,可自行尝试连接.(成功后 VNC 功能会消失.)</li><li>目前 CentOS 系统只支持任意版本重装为 CentOS 6.x 及以下版本.</li><li><strong>特别注意: <code>OpenVZ</code> 构架不适用.</strong></li></ul><hr><p><strong>更新</strong>:</p><p>[2018.11.12]<br>修复了一写错误逻辑.</p><p>[2018.10.31]<br>增加 –loader 参数.(用于定制镜像)</p><p>[2018.08.10]<br>修复一些Bug.<br>增加 -i 参数.(用于指定网卡)</p><p>[2018.06.09]<br>支持自定义远程桌面端口并打开相关防火墙端口(默认为3389).<br>自动扩展系统盘空间为整个硬盘.<br>增加 -rdp 参数.(用于更换RDP端口,并强制打开该端口防火墙)</p><p>[2018.04.17]<br>修复对grub.conf抓取识别的问题.</p><p>[2018.04.06]<br>优化正则表达式.<br>丢弃对grep -P的依赖.</p><p>[2018.04.03]<br>合并Debian/Ubuntu/CentOS/dd安装镜像功能.<br>使用最少依赖原则.<br>优化部分流程.<br>修复一些已知BUG.</p><hr><p><strong>依赖包</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#二进制文件    Debian/Ubuntu    RedHat/CentOS</span><br><span class="line">iconv         [libc-bin]       [glibc-common]</span><br><span class="line">xz            [xz-utils]       [xz]</span><br><span class="line">awk           [gawk]           [gawk]</span><br><span class="line">sed           [sed]            [sed]</span><br><span class="line">file          [file]           [file]</span><br><span class="line">grep          [grep]           [grep]</span><br><span class="line">openssl       [openssl]        [openssl]</span><br><span class="line">cpio          [cpio]           [cpio]</span><br><span class="line">gzip          [gzip]           [gzip]</span><br><span class="line">cat,cut..     [coreutils]      [coreutils]</span><br></pre></td></tr></table></figure><p><strong>确保安装了所需软件</strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Debian/Ubuntu:</span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line">#RedHat/CentOS:</span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure></p><p><strong>如果出现了错误,请运行</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"> </span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure></p><p><strong>快速使用示例</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span>) -d 8 -v 64 -a</span><br></pre></td></tr></table></figure></p><p><strong>下载及说明</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span> &amp;&amp; chmod a+x InstallNET.sh</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">        bash InstallNET.sh      -d/--debian [dist-name]</span><br><span class="line">                                -u/--ubuntu [dist-name]</span><br><span class="line">                                -c/--centos [dist-version]</span><br><span class="line">                                -v/--ver [32/i386|64/amd64]</span><br><span class="line">                                --ip-addr/--ip-gate/--ip-mask</span><br><span class="line">                                -apt/-yum/--mirror</span><br><span class="line">                                -dd/--image</span><br><span class="line">                                -a/-m</span><br><span class="line"> </span><br><span class="line"><span class="comment"># dist-name: 发行版本代号</span></span><br><span class="line"><span class="comment"># dist-version: 发行版本号</span></span><br><span class="line"><span class="comment"># -apt/-yum/--mirror : 使用定义镜像</span></span><br><span class="line"><span class="comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span></span><br></pre></td></tr></table></figure><p><strong>使用示例</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#使用默认镜像全自动安装</span><br><span class="line">bash InstallNET.sh -d 8 -v 64 -a</span><br><span class="line"> </span><br><span class="line">#使用自定义镜像全自动安装</span><br><span class="line">bash InstallNET.sh -c 6.9 -v 64 -a --mirror &apos;http://mirror.centos.org/centos&apos;</span><br><span class="line"></span><br><span class="line"># 以下示例中,将X.X.X.X替换为自己的网络参数.</span><br><span class="line"># --ip-addr :IP Address/IP地址</span><br><span class="line"># --ip-gate :Gateway   /网关</span><br><span class="line"># --ip-mask :Netmask   /子网掩码</span><br><span class="line"> </span><br><span class="line">#使用自定义镜像自定义网络参数全自动安装</span><br><span class="line">#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &apos;http://archive.ubuntu.com/ubuntu&apos;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &apos;https://moeclub.org/get-win7embx86-auto&apos;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像(调用文件ID的方式)</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/get-gdlink&apos;))&quot;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;https://drive.google.com/open?id=1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/get-gdlink&apos;))&quot;</span><br></pre></td></tr></table></figure><p><strong>一些可用镜像地址</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 推荐使用带有 /GoogleDrive/&lt;File_ID&gt; 链接, 速度更快.</span><br><span class="line"># 当然也可以使用自己GoogleDrive中储存的镜像,使用方式:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/&lt;File_ID&gt;</span><br><span class="line"> </span><br><span class="line"># win7emb_x86.tar.gz:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7</span><br><span class="line">  https://image.moeclub.org/win7emb_x86.tar.gz</span><br><span class="line"> </span><br><span class="line"># win8.1emb_x64.tar.gz:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J</span><br><span class="line">  https://image.moeclub.org/win8.1emb_x64.tar.gz</span><br></pre></td></tr></table></figure><hr><p><strong>一些提示</strong>:</p><p>特别注意:<br>萌咖提供的dd安装镜像<br>远程登陆账号为: Administrator<br>远程登陆密码为: Vicer<br>仅修改了主机名,可放心使用.(建议自己制作.)</p><p>在dd安装系统镜像时:<br>在你的机器上全新安装,如果你有VNC,可以看到全部过程.<br>在dd安装镜像的过程中,不会走进度条(进度条一直显示为0%).完成后将会自动重启.<br>分区界面标题一般显示为: “Starting up the partitioner“<br>使用谷歌网盘中储存的镜像: [无限制大小] 获取谷歌网盘文件临时直接下载链接</p><p>在全自动安装CentOS时:<br>如果看到 “Starting graphical installation” 或者类似表达,则表示正在安装.<br>正常情况下只需要耐心等待安装完成即可.<br>如果需要查看进度,使用VNC Viewer(或者其他VNC连接工具)<br>连接提示中的IP地址:端口进行连接.(端口一般为1或者5901)</p><hr><p>via:<a href="https://moeclub.org/2018/04/03/603/" target="_blank" rel="noopener">https://moeclub.org/2018/04/03/603/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> linux </tag>
            
            <tag> 一键重装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云 24元/月/1GB内存/香港/新加坡</title>
      <link href="/2018/11/29/115/"/>
      <url>/2018/11/29/115/</url>
      
        <content type="html"><![CDATA[<p>阿里云，特色是稳定，国内、香港、新加坡等线路均有，适合各种需求。最新推出了轻量应用服务器，即KVM VPS，其中有香港数据中心，而且给的30Mbps带宽，相当给力！每账户限5台！同时，每台服务器均可创建3个快照，每账户最多15个，这为备份和搬家提供了绝好功用。</p><a id="more"></a><hr><p><strong>最低套餐配置</strong></p><p>轻量 1GB<br>vCPU：1<br>内存：1 GB<br>空间：25 GB SSD（RAID 10）<br>流量：1 TB / 月（30 Mbps 端口）<br>IPv4：1<br>24元/月</p><p>轻量 2GB<br>vCPU：1<br>内存：2 GB<br>空间：40 GB SSD（RAID 10）<br>流量：2 TB / 月（30 Mbps 端口）<br>IPv4：1<br>34元/月</p><hr><p><strong>购买地址</strong></p><p>香港VPS：<a href="https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=cn-hongkong#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=cn-hongkong#/buy</a></p><p>新加坡VPS：<a href="https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=ap-southeast-1#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=ap-southeast-1#/buy</a></p><p>香港测试IP：149.129.85.xxx（xxx改为1-255之间的数字）</p><p>新加坡测评IP：149.129.49.xxx</p><hr><p><strong>其他链接</strong></p><p>轻量云服务器管理地址：<a href="https://swas.console.aliyun.com/#/servers" target="_blank" rel="noopener">https://swas.console.aliyun.com/#/servers</a></p><p>脚本一键重装纯净Linux或者dd安装Windows系统：<a href="https://moeclub.org/2018/04/03/603/" target="_blank" rel="noopener">https://moeclub.org/2018/04/03/603/</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> 香港 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的 onedrive 上传工具</title>
      <link href="/2018/11/19/114/"/>
      <url>/2018/11/19/114/</url>
      
        <content type="html"><![CDATA[<p>工具网址：<a href="https://github.com/0oVicero0/OneDrive" target="_blank" rel="noopener">https://github.com/0oVicero0/OneDrive</a></p><p>特性:<br>1.支持文件夹上传.<br>2.支持获取文件的匿名直链.<br>3.纯shell支持.</p><a id="more"></a><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO- <span class="string">"https://raw.githubusercontent.com/0oVicero0/OneDrive/master/OneDrive.sh"</span> |bash</span><br></pre></td></tr></table></figure><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onedrive -a</span><br></pre></td></tr></table></figure><p>复制授权链接到浏览器打开，确认授权以后，浏览器进入空白页面，复制地址栏 <code>code=</code> 后面的字符串粘贴到 shell 窗口并按 Enter。</p><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">onedrive --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#####################################################################</span></span><br><span class="line">Usage: onedrive [OPTIONS] file1 [file2...]</span><br><span class="line">       onedrive<span class="_">-d</span> folder</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -d, --debug        Enable debug mode</span><br><span class="line">  -a, --authorize    Run authorization process</span><br><span class="line">  -f, --folder       Upload files into this remote folder</span><br><span class="line">  -c, --creat        Creat remote folder.<span class="string">"</span></span><br><span class="line"><span class="string">                     Directory names are separated with a slash, e.g.</span></span><br><span class="line"><span class="string">                     rootFolder/subFolder</span></span><br><span class="line"><span class="string">                     Do NOT use a trailing slash!</span></span><br><span class="line"><span class="string">  -h, --help         Show this help</span></span><br><span class="line"><span class="string">  -r, --rename       Rename the files during upload</span></span><br><span class="line"><span class="string">                     For each file you specify you MUST also specify</span></span><br><span class="line"><span class="string">                     the remote filename as the subsequent parameter</span></span><br><span class="line"><span class="string">                     Be especially careful with globbing!</span></span><br><span class="line"><span class="string">  -s, --silent       Silent mode for use in crontab scripts.</span></span><br><span class="line"><span class="string">                     Return only exit code.</span></span><br><span class="line"><span class="string">  -ls,--list         Show the itmes in this directory.</span></span><br><span class="line"><span class="string">  -l, --link         Show the file share link.</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">#####################################################################</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> onedrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影片编码查询和规则说明</title>
      <link href="/2018/11/18/113/"/>
      <url>/2018/11/18/113/</url>
      
        <content type="html"><![CDATA[<p>影片编码查询网址：<a href="https://www.zgdypw.cn/#/film.html" target="_blank" rel="noopener">https://www.zgdypw.cn/#/film.html</a></p><p>每一部在中国大陆上映的电影必须经过审批，取得电影片公映许可证（俗称龙标）。影片编码即电影片公映许可证上的影片排次号。</p><p>此网站可以查询所有获得影片编码的电影，并导出数据。</p><a id="more"></a><hr><p>影片编码规则说明</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fxdln53ko7j20pw0zsjuv.jpg" alt=""><br><img src="https://wx3.sinaimg.cn/large/92253953gy1fxdlhp4hrpj20oq0q2793.jpg" alt=""><br><img src="https://wx4.sinaimg.cn/large/92253953gy1fxdlhp9hlqj20o40uktda.jpg" alt=""></p><p>电影片公映许可证示例</p><p><img src="https://wx2.sinaimg.cn/large/92253953gy1fxbkfgpqyyj20h80nxt9h.jpg" alt="电影片公映许可证"></p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影片编码 </tag>
            
            <tag> 龙标 </tag>
            
            <tag> 电影放映许可证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 配置启用 NFS 共享</title>
      <link href="/2018/11/16/112/"/>
      <url>/2018/11/16/112/</url>
      
        <content type="html"><![CDATA[<p>适用系统：Windows 7/10<br>软件：WinNFSd<br>软件发布地址：<a href="https://github.com/winnfsd/winnfsd/releases" target="_blank" rel="noopener">https://github.com/winnfsd/winnfsd/releases</a></p><p>文件共享服务常见的几种方法有：FTP、Samba、NFS 。Windows 家用版内置的共享功能是采用的 Samba，服务器版才内置有 nfs server，所以在家用电脑上开启 NFS 共享需要另外安装 NFS 服务端。<br>网络上常见的配置 nfs 共享教程均是使用 haneWIN NFS Server ，但这个软件是收费的，而且也长时间没更新。本文将介绍一款免费开源的软件 WinNFSd。</p><a id="more"></a><hr><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>从 GitHub 的发布地址下载 WinNFSd，新建一个文件夹，例如：<code>C:\winnfsd</code>,将 WinNFSd 放入其中。</p><h2 id="配置共享路径"><a href="#配置共享路径" class="headerlink" title="配置共享路径"></a>配置共享路径</h2><p>在 winnfsd 文件夹中新建文本 <code>exports.txt</code>，打开 exports ，填写需要共享的路径，例如：<code>F:\Videos</code>。（国外教程说路径要从第二行开始才有用，但我在 win10 上尝试在第一行写也有用，可能这个 bug 已经修复了。）</p><h2 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h2><p>在 winnfsd 文件夹中新建脚本 <code>nfsservice.bat</code>, 填写 <code>winnfsd.exe -id 0 0 -log off -pathFile &quot;C:\winnfsd\exports.txt&quot;</code> 并保存。右键 <code>nfsservice.bat</code> 发送快捷方式到桌面，然后将快捷方式移动到用户的启动路径内 <code>%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 。双击 nfsservice.bat 程序就会启动，或者重启电脑程序会开机启动。</p><hr><p>参考资料：</p><ul><li><a href="https://forum.kodi.tv/showthread.php?tid=329452" target="_blank" rel="noopener">Add NFS server capabilities to Windows (free)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PT-Gen 后端搭建</title>
      <link href="/2018/11/09/111/"/>
      <url>/2018/11/09/111/</url>
      
        <content type="html"><![CDATA[<p>服务器必备的软件环境：</p><ul><li>nginx</li><li>python3</li><li>pip3</li><li>uWSGI</li></ul><p>我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。</p><a id="more"></a><hr><h2 id="编译安装-python-3"><a href="#编译安装-python-3" class="headerlink" title="编译安装 python 3"></a>编译安装 python 3</h2><h3 id="下载-python-源码"><a href="#下载-python-源码" class="headerlink" title="下载 python 源码"></a>下载 python 源码</h3><p>用 wget 从官网下载源码，选择任意版本 python3，我选的当时最新的发行版 python3.6.4，其中安装包版本 Gzipped source tarball 即我们所需的源码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz</span><br></pre></td></tr></table></figure><h3 id="解压，配置"><a href="#解压，配置" class="headerlink" title="解压，配置"></a>解压，配置</h3><p>下载完成后解压，然后添加配置。在 configure 的选项中，–prefix 定义了安装位置，便于以后更新或删除 python；–enable-shared 指定安装共享库，共享库在使用其他需调用 python 的软件时会用到，比如使用 mod_wgsi 连接 Apache 与 python 时需要，最好填上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.6.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.6.4</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python3 --<span class="built_in">enable</span>-shared</span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/python3</span><br></pre></td></tr></table></figure><h3 id="编译，安装"><a href="#编译，安装" class="headerlink" title="编译，安装"></a>编译，安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>如果是多核cpu，make 替换为 <code>make -j</code> 可以加快编译速度。</p><h3 id="建立软链"><a href="#建立软链" class="headerlink" title="建立软链"></a>建立软链</h3><p>然后建立 python3 和 pip3 的软链。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>建立软链后输入 python3 即可进入 python3 解释器，同时你还可以输入 python 或 python2 进入 python2 解释器，二者可以共存。</p><hr><h2 id="下载-PT-Gen"><a href="#下载-PT-Gen" class="headerlink" title="下载 PT-Gen"></a>下载 PT-Gen</h2><p>lnmp 新建主机，设置网站根目录和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p>进入网站根目录并下载程序源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/api.example.com</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/BFDZ/PT-Gen.git</span><br><span class="line">mv PT-Gen/* ./</span><br></pre></td></tr></table></figure></p><p>安装依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirement.txt</span><br></pre></td></tr></table></figure><hr><h2 id="安装，配置-uWSGI"><a href="#安装，配置-uWSGI" class="headerlink" title="安装，配置 uWSGI"></a>安装，配置 uWSGI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3  install uwsgi</span><br></pre></td></tr></table></figure><p>新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini</span><br></pre></td></tr></table></figure><p>填入此配置文件内容并保存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[uwsgi]</span></span><br><span class="line"><span class="comment"># 采用sock方式通信，程序在启动时会自己创建这个文件</span></span><br><span class="line"><span class="string">socket</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.sock</span></span><br><span class="line"><span class="comment"># 指向网站目录</span></span><br><span class="line"><span class="string">chdir</span> <span class="string">=</span> <span class="string">/home/wwwroot/api.example.com</span></span><br><span class="line"><span class="comment"># python 启动程序文件</span></span><br><span class="line"><span class="string">wsgi-file</span> <span class="string">=</span> <span class="string">run.py</span></span><br><span class="line"><span class="comment"># python 程序内用以启动的 application 变量名</span></span><br><span class="line"><span class="string">callable</span> <span class="string">=</span> <span class="string">app</span></span><br><span class="line"><span class="comment"># 进程数，可按服务器配置和负载情况调高</span></span><br><span class="line"><span class="string">processes</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 线程数</span></span><br><span class="line"><span class="string">threads</span> <span class="string">=</span> <span class="number">8</span></span><br><span class="line"><span class="comment"># 开启master，程序会进入后台运行模式</span></span><br><span class="line"><span class="string">master</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大请求数，在指定数量的管理请求后重载worker</span></span><br><span class="line"><span class="string">max-requests</span> <span class="string">=</span> <span class="number">6000</span></span><br><span class="line"><span class="comment"># 指定启动用户</span></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 指定用户组</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line"><span class="string">daemonize</span> <span class="string">=</span> <span class="string">/var/log/uwsgi.log</span></span><br></pre></td></tr></table></figure><p>建议不要使用 root 用户启动 uwsgi，保持和 nginx 的启动用户一样。lnmp 中 nginx 进程是属于www ，所以 uwsgi 的 uid/gid 也要指定为 www 用户。</p><hr><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><p>修改 nginx 网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/vhost/api.example.com.conf</span><br></pre></td></tr></table></figure><p> <code>location /</code> 段添加 uwsgi 相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">    include      uwsgi_params;</span><br><span class="line">    uwsgi_pass   unix:/tmp/uwsgi.sock;</span><br><span class="line">    uwsgi_param UWSGI_CHDIR  /home/wwwroot/api.example.com;</span><br><span class="line">    uwsgi_param UWSGI_SCRIPT run:app;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx reload</span><br></pre></td></tr></table></figure><hr><h2 id="运行后端"><a href="#运行后端" class="headerlink" title="运行后端"></a>运行后端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi3 --ini config.ini</span><br></pre></td></tr></table></figure><p>这时访问 api 的域名，会出现提示 <code>Hello world~</code> ，表示程序已成功运行。</p><p>PT-Gen 的 api 的路径为 <code>api.example.com/movieinfo/gen</code> ,前端页面修改api的域名即可换用此api。浏览器不带参数访问此路径，默认跳转到工具介绍页面。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> pt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电影简介生成工具</title>
      <link href="/2018/10/31/110/"/>
      <url>/2018/10/31/110/</url>
      
        <content type="html"><![CDATA[<p>这几天 movieinfogen 因为流量超额，网站已经不能使用，所以给大家推荐一下其他的电影简介生成工具。</p><h2 id="PT-Gen"><a href="#PT-Gen" class="headerlink" title="PT-Gen"></a>PT-Gen</h2><ul><li><a href="https://rhilip.github.io/PT-help/ptgen" target="_blank" rel="noopener">https://rhilip.github.io/PT-help/ptgen</a></li><li><a href="https://www.bfdz.ink/tools/ptgen">https://www.bfdz.ink/tools/ptgen</a></li></ul><p>这是 Rhilip 开发的一个简介生成工具，网站界面和功能与 movieinfogen 相似。</p><a id="more"></a><h3 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h3><ul><li>支持使用Douban链接来生成电影、剧集简介（movieinfogen格式）</li><li>支持使用Bangumi链接来生成动漫信息（BYR推荐 Story、Staff、Cast格式）</li><li>支持使用Steam链接来生成游戏信息</li><li>豆瓣、Bangumi不用登陆（因此也导致部分资源不可查询）</li><li>支持在豆瓣上有imdb号的资源</li><li>支持豆瓣搜索</li></ul><h3 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h3><ul><li>豆瓣搜索</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/798501736.jpg" alt=""></p><ul><li>豆瓣信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/2176764395.jpg" alt=""></p><ul><li>Bangumi信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/318637092.jpg" alt=""></p><ul><li>Steam信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/4257925728.jpg" alt=""></p><hr><h2 id="豆瓣资源下载大师"><a href="#豆瓣资源下载大师" class="headerlink" title="豆瓣资源下载大师"></a>豆瓣资源下载大师</h2><ul><li><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/329484</a></li></ul><p>豆瓣资源下载大师是一个托管在Greasy Fork的浏览器脚本，除了搜索电影资源，还附带生成电影简介的功能。<br>安装以后豆瓣电影的信息页会出现一个生成信息按钮，点击可生成和 movieinfogen 相似的电影简介信息。</p><p><img src="https://i.loli.net/2018/10/31/5bd9998d3780b.png" alt=""><br><img src="https://i.loli.net/2018/10/31/5bd9998d2e72d.png" alt=""></p><hr><p>参考资料：<a href="https://blog.rhilip.info/archives/800/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/800/</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pt </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Analytics 加载优化</title>
      <link href="/2018/10/23/109/"/>
      <url>/2018/10/23/109/</url>
      
        <content type="html"><![CDATA[<p>最近给网站加上了 Google Analytics（大概两年前，我刚换到 Hexo 的时候，我就把统计撤了，看到 LWL 的群里在晒统计结果，心里痒痒又加上了）。但是直接使用 Google Analytics 有一点弊端：一是会被各种广告屏蔽软件屏蔽，导致统计结果不准确；二是在国内加载不稳定。</p><p>因此，我给 Google Analytics 加了一层代理，优化加载速度同时防止被屏蔽。</p><p><a href="https://github.com/giuem/ga-proxy" target="_blank" rel="noopener">GitHub Repo</a> （求 Star🌚</p><a id="more"></a><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>目前关于 Google Analytics 大致有两种方案，一种是本文使用介绍的，另一种是利用 Nginx 的 post_action。</p><p>前者需要多一次 HTTP 请求，后者有点麻烦，还要过滤搜索引擎 UA，不适用于使用 CDN 的网站。</p><p>本文所采用的方案是基于 <a href="https://stneng.com/google-analytics-%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%EF%BC%88%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%EF%BC%89/" target="_blank" rel="noopener">Google Analytics 异步请求（服务端请求）</a> 提供的代码修改的 Go 版本。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-使用我提供的服务"><a href="#1-使用我提供的服务" class="headerlink" title="1. 使用我提供的服务"></a>1. 使用我提供的服务</h3><p>将下面的代码加到你的网站的任意位置，同时修改 <code>&quot;UA-xxxx-x&quot;</code> 为你自己的跟踪代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">a,b,c,d,e</span>)</span>&#123;<span class="keyword">var</span> f=c.screen,g=<span class="built_in">encodeURIComponent</span>,h=[<span class="string">"ga="</span>+a,<span class="string">"dt="</span>+g(d.title),<span class="string">"dr="</span>+g(d.referrer),<span class="string">"ul="</span>+(e.language||e.browserLanguage||e.userLanguage),<span class="string">"sd="</span>+f.colorDepth+<span class="string">"-bit"</span>,<span class="string">"sr="</span>+f.width+<span class="string">"x"</span>+f.height,<span class="string">"vp="</span>+<span class="built_in">Math</span>.max(d.documentElement.clientWidth,c.innerWidth||<span class="number">0</span>)+<span class="string">"x"</span>+<span class="built_in">Math</span>.max(d.documentElement.clientHeight,c.innerHeight||<span class="number">0</span>),<span class="string">"z="</span>+ +<span class="keyword">new</span> <span class="built_in">Date</span>];c.__ga_img=<span class="keyword">new</span> Image,c.__ga_img.src=b+<span class="string">"?"</span>+h.join(<span class="string">"&amp;"</span>)&#125;(<span class="string">"UA-xxxx-x"</span>,<span class="string">"https://ga.giuem.com"</span>,<span class="built_in">window</span>,<span class="built_in">document</span>,navigator,location);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>目前已经部署海外线路（由 CloudFlare 提供），国内为腾讯云上海机房</strong></p><h3 id="2-自己部署服务"><a href="#2-自己部署服务" class="headerlink" title="2. 自己部署服务"></a>2. 自己部署服务</h3><ol><li>安装</li></ol><p>你可以选择自己 <a href="https://github.com/giuem/ga-proxy#build" target="_blank" rel="noopener">编译</a> 或者从 <a href="https://github.com/giuem/ga-proxy/releases/latest" target="_blank" rel="noopener">release</a> 下载我编译好的二进制文件。</p><ol start="2"><li>运行</li></ol><p>./ga_proxy [arguments]</p><p>-d, -debug 输出调试信息<br>-s, -skip_ssl 跳过 SSL 验证<br>-l, -listen 监听地址</p><p>要使用后台运行，你可以借助 <code>nohup</code> 或 <code>screen</code> 或 <code>Docker</code>。</p><ol start="3"><li>添加 JavaScript 代码</li></ol><p>把上面的那段代码里的 <code>&quot;https://ga.giuem.com&quot;</code> 改成你自己的地址就行了。</p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p>整个请求花费 33 ms, 156 B 流量可以说是非常快了。服务器的 Ping 值在 29 ms 左右，中间 4 ms 的损失主要花在 SSL 上了，速度还是挺不错的。</p><p>相比之下，原生的请求先加载了一个 12.3 KB 大小的 JS 文件，然后才发送统计，总耗时 300 ms，emmmmm 我就不作过多评价了。</p><hr><p>来源：<a href="https://www.giuem.com/google-analytics-loading-optimize/" target="_blank" rel="noopener">https://www.giuem.com/google-analytics-loading-optimize/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google Analytics </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare 下 Nginx 获取用户真实 IP 地址</title>
      <link href="/2018/10/23/108/"/>
      <url>/2018/10/23/108/</url>
      
        <content type="html"><![CDATA[<p>惯例性滴先Google了一下，发现了这篇文章</p><ul><li><a href="https://support.cloudflare.com/hc/en-us/articles/200170706-How-do-I-restore-original-visitor-IP-with-Nginx" target="_blank" rel="noopener">How do I restore original visitor IP with Nginx? – Cloudflare Support</a></li><li><a href="https://nginx.org/en/docs/http/ngx_http_realip_module.html" target="_blank" rel="noopener">Module ngx_http_realip_module - Nginx</a></li></ul><p>看起来挺简单的嘛，在nginx配置文件中加一段地址说明就好了的事。。<br>然而在重启时却发现，报错了。。。。。新添加的”set_real_ip_from”没有被认出来，导致新配置的文件不被认可就没能重启。。</p><a id="more"></a><p>于是认真的看了下说明。</p><blockquote><p>This module is not built by default, it should be enabled with the –with-http_realip_module configuration parameter.</p></blockquote><p>原来如此嘛，是当初安装的时候没有安装所需要的模块呀~</p><p>那就开始在已经配置好的nginx上添加未编译安装模块吧。</p><p>使用 lnmp.org 提供的一件包可以编辑lnmp.conf文件，添加nginx编译属性，然后使用upgrade.sh来无人值守升级避免下述问题。</p><p>1、看下编译安装nginx的时候，都编译安装的哪些模块。执行命令：<code>/usr/local/nginx/sbin/nginx -V</code>，得到一下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM src]<span class="comment"># /usr/local/nginx/sbin/nginx -V</span></span><br><span class="line">nginx version: nginx/1.10.0</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC)</span><br><span class="line">built with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --user=www --group=www --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module</span><br></pre></td></tr></table></figure><p>2、进入到nginx的安装目录，（这里吐槽下Virmach，果真是垃圾VPS提供商。母鸡的IPv6服务坏了快一个月都没能好）。我这里用的是当初我安装lnmp时候留下来的安装包。如果没有的话，可以用wget的方法从nginx官网上重新得到安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/lnmp1.3-full/src</span><br><span class="line">tar -xf nginx-1.10.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.10.0</span><br></pre></td></tr></table></figure><p>3、重新./configure ，添加所需要的模块后使用make编译。格式应该是这样的：”./configure “ + 第一步得到的configure arguments信息 + 你想要添加的模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module --with-http_realip_module</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># make</span></span><br></pre></td></tr></table></figure><p>千万要注意：到这里就可以了，千万不要make install，不然文件就会被覆盖了。</p><p>4、备份原先配置，杀掉nginx进程，然后替换nginx二进制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># killall nginx</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># killall nginx</span></span><br><span class="line">nginx: no process killed</span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># cp ./objs/nginx /usr/local/nginx/sbin/</span></span><br><span class="line">cp: overwrite `/usr/<span class="built_in">local</span>/nginx/sbin/nginx<span class="string">'? yes</span></span><br></pre></td></tr></table></figure><p>5、更改站点的nginx配置文件，在location / {} 中加入第一篇文章中提到的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">set_real_ip_from 103.21.244.0/22;</span><br><span class="line">set_real_ip_from 103.22.200.0/22;</span><br><span class="line">set_real_ip_from 103.31.4.0/22;</span><br><span class="line">set_real_ip_from 104.16.0.0/12;</span><br><span class="line">set_real_ip_from 108.162.192.0/18;</span><br><span class="line">set_real_ip_from 131.0.72.0/22;</span><br><span class="line">set_real_ip_from 141.101.64.0/18;</span><br><span class="line">set_real_ip_from 162.158.0.0/15;</span><br><span class="line">set_real_ip_from 172.64.0.0/13;</span><br><span class="line">set_real_ip_from 173.245.48.0/20;</span><br><span class="line">set_real_ip_from 188.114.96.0/20;</span><br><span class="line">set_real_ip_from 190.93.240.0/20;</span><br><span class="line">set_real_ip_from 197.234.240.0/22;</span><br><span class="line">set_real_ip_from 198.41.128.0/17;</span><br><span class="line">set_real_ip_from 199.27.128.0/21;</span><br><span class="line">set_real_ip_from 2400:cb00::/32;</span><br><span class="line">set_real_ip_from 2606:4700::/32;</span><br><span class="line">set_real_ip_from 2803:f800::/32;</span><br><span class="line">set_real_ip_from 2405:b500::/32;</span><br><span class="line">set_real_ip_from 2405:8100::/32;</span><br><span class="line">set_real_ip_from 2c0f:f248::/32;</span><br><span class="line">set_real_ip_from 2a06:98c0::/29;</span><br><span class="line"><span class="comment"># use any of the following two</span></span><br><span class="line">real_ip_header CF-Connecting-IP;</span><br><span class="line"><span class="comment">#real_ip_header X-Forwarded-For;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、重启nginx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx restart</span><br></pre></td></tr></table></figure><p>我这里用的是lnmp带的命令，你还可以使用下面的命令来重启并检查nginx运行情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># /usr/local/nginx/sbin/nginx</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># netstat -anpt | grep nginx</span></span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 23371/nginx</span><br></pre></td></tr></table></figure><p><strong>2018.01.01 更</strong></p><p>7、自动更新 cloudflare-real-ip 清单<br>如果你是使用lnmp.org提供的一键包来安装的，请参照进行。</p><p>在nginx配置目录创建cloudflare_ip.conf文件<br><code>touch /usr/local/nginx/conf/cloudflare_ip.conf</code></p><p>修改原有的vhost配置，将原来第五步配置的信息改为<br><code>include cloudflare_ip.conf;</code></p><p>创建自更新脚本update_cloudflare_ip.sh（假定该文件放在 /root 目录下），内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#Cloudflare"</span> &gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"set_real_ip_from <span class="variable">$i</span>;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"set_real_ip_from <span class="variable">$i</span>;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"# use any of the following two"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"real_ip_header CF-Connecting-IP;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#real_ip_header X-Forwarded-For;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br></pre></td></tr></table></figure><p>配置crontab</p><p><code>0 5 * * 1 /bin/bash /root/update_cloudflare_ip.sh</code></p><p>↑ 每周一的上午5点更新</p><hr><p>作者：Rhilip<br>链接：<a href="https://blog.rhilip.info/archives/256/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/256/</a><br>来源：<a href="https://blog.rhilip.info/" target="_blank" rel="noopener">https://blog.rhilip.info/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>江湖儿女</title>
      <link href="/2018/10/04/107/"/>
      <url>/2018/10/04/107/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/92253953gy1fvwj1p9q63j20f00l0q7l.jpg" alt=""></p><a id="more"></a><p>◎译　　名　Ash is Purest White / Les Eternels / Money &amp; Love / 灰烬是最洁白的 / 金钱与爱情<br>◎片　　名　江湖儿女<br>◎年　　代　2018<br>◎产　　地　中国大陆 / 法国 / 日本<br>◎类　　别　爱情 / 犯罪<br>◎语　　言　汉语普通话 / 山西方言 / 湖北方言 / 重庆方言<br>◎上映日期　2018-05-11(戛纳电影节) / 2018-09-21(中国大陆)<br>◎IMDb评分　6.9/10 from 478 users<br>◎IMDb链接　<a href="http://www.imdb.com/title/tt7298400" target="_blank" rel="noopener">http://www.imdb.com/title/tt7298400</a><br>◎豆瓣评分　7.7/10 from 90538 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26972258/" target="_blank" rel="noopener">https://movie.douban.com/subject/26972258/</a><br>◎片　　长　137分钟(中国大陆)<br>◎导　　演　贾樟柯 Zhangke Jia<br>◎编　　剧　贾樟柯 Zhangke Jia<br>◎主　　演　赵涛 Tao Zhao<br>　　　　　　廖凡 Fan Liao<br>　　　　　　徐峥 Zheng Xu<br>　　　　　　梁嘉艳 Casper Liang<br>　　　　　　刁亦男 Yi’nan Diao<br>　　　　　　张一白 Yibai Zhang<br>　　　　　　丁嘉丽 Jiali Ding<br>　　　　　　张译 Yi Zhang<br>　　　　　　董子健 Zijian Dong<br>　　　　　　李宣 Xuan Li<br>　　　　　　查娜 Chana<br>　　　　　　冯家妹 Jiamei Feng<br>　　　　　　康亢 Kang Kang<br>　　　　　　张晓军 Xiaojun Zhang<br>　　　　　　柳敏 Min Liu<br>　　　　　　王谭 Tan Wang<br>　　　　　　原文倩 Wenqian Yuan</p><p>◎标　　签　中国大陆 | 文艺 | 人性 | 社会 | 剧情 | 2018 | 爱情 | 犯罪</p><p>◎简　　介  </p><p>　　故事开始于2001年的山西大同，巧巧（赵涛 饰）和斌斌（廖凡 饰）相恋多年，巧巧一心希望能够和斌斌成家过安稳的生活，但斌斌身为当地的大佬，有着自己更高远的志向。一场意外中，斌斌遭人暗算危在旦夕，巧巧拿着斌斌私藏的手枪挺身而出救了斌斌，自己却因为非法持枪而被判处了五年的监禁。<br>一晃眼五年过去，出狱后的巧巧发现整个世界都发生了翻天覆地的变化，唯一不变的是她对斌斌真挚的感情。巧巧跋山涉水寻找斌斌的下落，但此时的斌斌早已经失去了往日的锋芒，而且身边已有了新的女友。身无分文的巧巧靠着自己的智慧摸爬滚打，终于为自己挣得了一片天地。</p><p>◎获奖情况  </p><p>　　第71届戛纳电影节(2018)<br>　　主竞赛单元 金棕榈奖(提名) 贾樟柯</p><p>　　第55届台北金马影展(2018)<br>　　金马奖 最佳女主角(提名) 赵涛</p><hr><blockquote><p>1080p 无水印 在线观看和下载<br>链接：<a href="https://pan.nas.ink/%E7%94%B5%E5%BD%B1/%E4%B8%AD%E5%9B%BD/%E6%B1%9F%E6%B9%96%E5%84%BF%E5%A5%B3.2018/" target="_blank" rel="noopener">https://pan.nas.ink/%E7%94%B5%E5%BD%B1/%E4%B8%AD%E5%9B%BD/%E6%B1%9F%E6%B9%96%E5%84%BF%E5%A5%B3.2018/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 江湖儿女 </tag>
            
            <tag> 贾樟柯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VapourSynthEditor 汉化版</title>
      <link href="/2018/08/31/106/"/>
      <url>/2018/08/31/106/</url>
      
        <content type="html"><![CDATA[<p>基于 VapourSynthEditor r18 64bit 汉化<br><a id="more"></a></p><hr><p><strong>注意</strong></p><p>如果有安装过 VapourSynthEditor r18 以外的版本，需先将用户路径下的 vsedit 配置文件删除。</p><blockquote><p>%USERPROFILE%\AppData\Local\vsedit.config</p></blockquote><hr><p><strong>预览</strong></p><p><img src="https://wx2.sinaimg.cn/mw690/92253953gy1fut905syj6j20nl0kxwej.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/mw690/92253953gy1fut905jg8hj20pz0j0h50.jpg" alt=""></p><hr><p><strong>下载</strong></p><blockquote><p>文件:VapourSynthEditor-r18-64bit-CN.zip<br>MD5: 566A349C11BC5EA40EE377D978B84694<br>SHA1: B35DB1E5A1AB7B6F47CABD22AA6315946E345BD7<br>SHA256: E253F0AD25009FD436846A34A4E35D6D2C66F8B9D70D444699529D22AC5691B6</p></blockquote><p>OneDrive: <a href="https://daye-my.sharepoint.com/:u:/g/personal/root_bfdz_ink/EQaf-2sfdH5Kt23BtBQslUwBwRrzcYA_AzGd3us_tCds7A?e=IsOdCJ" target="_blank" rel="noopener">VapourSynthEditor-r18-64bit-CN</a><br>STACK: <a href="https://bfdz.stackstorage.com/s/0mJVc0xnn1WBooG" target="_blank" rel="noopener">VapourSynthEditor-r18-64bit-CN</a><br>cargo: <a href="http://cargo.hyperay.cc/Encoder/tools/VapourSynthEditor-r18-64bit-CN.zip" target="_blank" rel="noopener">VapourSynthEditor-r18-64bit-CN</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vsedit </tag>
            
            <tag> VapourSynth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 获取数字许可证 批处理版</title>
      <link href="/2018/07/26/105/"/>
      <url>/2018/07/26/105/</url>
      
        <content type="html"><![CDATA[<p>直接获取Windows10 数字许可证,同一台电脑,即使重装系统,无需输入许可证密钥,只要联网就能自动永久获得授权.因为你的授权信息已经保存在微软服务器上了.<br>这是Windows10特有的方式,非KMS方式的180天循环授权.<br><a id="more"></a></p><hr><ul><li><strong>保留其他授权信息的操作</strong></li></ul><p>如果你同时有已授权的Office产品,而又不想失去其授权状态.<br>你可以做如下操作:</p><ol><li>备份系统激活信息.</li><li>初始化系统激活信息.</li><li>自动激活并获取数字激活许可证.</li><li>还原系统激活信息.</li><li>仅安装系统初始化密钥.</li><li>查看激活状态.</li></ol><ul><li><strong>注意</strong></li></ul><ol><li>激活时请保持电脑连网状态，否则无法顺利激活。</li><li>激活时请保持 Windows Update 服务为启动状态。</li><li>如果已使用密钥激活 Office 等产品，会丢失其激活状态。</li><li>如果自动激活闪退,请尝试先初始化系统激活信息。</li></ol><p>建议: <strong>备份激活信息后再操作</strong>。</p><ul><li><strong>功能列表</strong></li></ul><ol><li>自动激活并获取数字激活许可证。</li><li>删除(初始化)系统激活信息。</li><li>仅安装系统初始化密钥。</li><li>备份系统激活信息。</li><li>还原系统激活信息。</li><li>查看激活状态。</li><li>查看支持列表。</li></ol><ul><li><strong>使用须知</strong></li></ul><ol><li>获得的数字授权是基于硬件信息的永久授权,非KMS方式循环授权.</li><li><strong>该授权方式只适用于Windows10系统.</strong></li><li>获取授权时需要联网,重装后自动激活相同版本的系统.</li><li>此工具同时支持版本大于等于 Win7(Windows Server 2008) 系统的授权信息查询,备份,还原.</li></ol><ul><li><p><strong>支持的Windows10版本/初始化安装密钥</strong></p></li><li><p><strong>Windows 10 Cloud</strong></p><ul><li>V3WVW-N2PV2-CGWC3-34QGF-VMJ2C</li></ul></li><li><strong>Windows 10 CloudN</strong><ul><li>NH9J3-68WK7-6FB93-4K3DF-DJ4F6</li></ul></li><li><strong>Windows 10 Core</strong><ul><li>YTMG3-N6DKC-DKB77-7M9GH-8HVX7</li></ul></li><li><strong>Windows 10 CoreN</strong><ul><li>4CPRK-NM3K3-X6XXQ-RXX86-WXCHW</li></ul></li><li><strong>Windows 10 CoreCountrySpecific</strong><ul><li>N2434-X9D7W-8PF6X-8DV9T-8TYMD</li></ul></li><li><strong>Windows 10 CoreSingleLanguage</strong><ul><li>BT79Q-G7N6G-PGBYW-4YWX6-6F4BT</li></ul></li><li><strong>Windows 10 Education</strong><ul><li>YNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY</li></ul></li><li><strong>Windows 10 EducationN</strong><ul><li>84NGF-MHBT6-FXBX8-QWJK7-DRR8H</li></ul></li><li><strong>Windows 10 Enterprise</strong><ul><li>XGVPP-NMH47-7TTHJ-W3FW7-8HV2C</li></ul></li><li><strong>Windows 10 EnterpriseN</strong><ul><li>WGGHN-J84D6-QYCPR-T7PJ7-X766F</li></ul></li><li><strong>Windows 10 EnterpriseS / LTSB</strong><ul><li>NK96Y-D9CD8-W44CQ-R8YTK-DYJWX</li></ul></li><li><strong>Windows 10 EnterpriseSN / LTSBN</strong><ul><li>RW7WN-FMT44-KRGBK-G44WK-QV7YK</li></ul></li><li><strong>Windows 10 Professional</strong><ul><li>VK7JG-NPHTM-C97JM-9MPGT-3V66T</li></ul></li><li><strong>Windows 10 ProfessionalSingleLanguage</strong><ul><li>G3KNM-CHG6T-R36X3-9QDG6-8M8K9</li></ul></li><li><strong>Windows 10 ProfessionalN</strong><ul><li>2B87N-8KFHP-DKV6R-Y2C8J-PKCKT</li></ul></li><li><strong>Windows 10 ProfessionalEducation</strong><ul><li>8PTT6-RNW4C-6V7J2-C2D3X-MHBPB</li></ul></li><li><strong>Windows 10 ProfessionalEducationN</strong><ul><li>GJTYN-HDMQY-FRR76-HVGC7-QPF8P</li></ul></li><li><strong>Windows 10 ProfessionalWorkstation</strong><ul><li>DXG7C-N36C4-C4HTG-X4T3X-2YV77</li></ul></li><li><p><strong>Windows 10 ProfessionalWorkstationN</strong></p><ul><li>WYPNQ-8C467-V2W6J-TX4WX-WT2RQ</li></ul></li><li><p><strong>下载地址</strong></p></li><li><p><strong>批处理版</strong>: <a href="https://cargo.hyperay.cc/software/%E8%A3%85%E6%9C%BA%E5%B7%A5%E5%85%B7/Win10Activation.zip" target="_blank" rel="noopener">Win10Activation.zip</a></p></li></ul><p><em>SHA1: f15fbb6f96469a209875f2696dca0eacbf4c783d</em></p><ul><li><strong>批处理打包exe版</strong>: <a href="https://cargo.hyperay.cc/software/%E8%A3%85%E6%9C%BA%E5%B7%A5%E5%85%B7/Win10Activation.exe" target="_blank" rel="noopener">Win10Activation.exe</a></li></ul><p><em>SHA1: 44acecf24ad4d83090a10ec89fcd5e4bd53576c4</em></p><hr><p>来源：<a href="https://moeclub.org/2018/06/06/627/" target="_blank" rel="noopener">https://moeclub.org/2018/06/06/627/</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激活工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ListAssFonts - ass 字幕字体分析工具</title>
      <link href="/2018/07/24/104/"/>
      <url>/2018/07/24/104/</url>
      
        <content type="html"><![CDATA[<p>因為最近比較常看動畫，但每一套字幕用到的字型都不同<br>有時字型包裡又有缺漏，或是有些字型壓根就沒用到</p><p>於是自己寫了個小程式來判斷字幕檔裡到底用了哪些字型<br>(C# .NetFramework 4.5.2 環境)</p><a id="more"></a><hr><p><img src="https://wx2.sinaimg.cn/large/92253953gy1ftkvpzpgnvj20f60hn0sz.jpg" alt=""></p><p>主要功能</p><ol><li>列出.ass/.ssa字幕檔裡實際用到的字型，並以紅黑顏色來表示未安裝(紅/粉紅) 及已安裝字型(黑/藍)</li><li>列出系統裡已安裝的所有字型，包含英文/繁中/簡中/日文字型名</li><li>可選擇是否自動存成文字檔 (勾選右下 Save .txt)</li><li>可選擇是否導出字型文件 (勾選下方 Save Fonts)</li><li>按F12/Menu鍵可導出 debug 用的純文字文件，方便報錯/除錯</li><li>在繁中OS下，將可能缺字的字幕部分，另外生成 .NeedVerify.ass，方便字幕作者檢視</li></ol><p>操作方式</p><ol><li>可直接拖曳字幕檔案或目錄到其上，或用 Select 按鈕選目錄、或手動輸入目錄 enter 皆可</li><li>點 Installed Fonts 鈕，則列出系統已安裝字型</li><li>fonts.txt 會存於字幕目錄下，installedFonts.txt 則存於程式本身目錄下，若有勾選 Save Fonts，則會存到 字幕\Fonts\目錄下</li><li>字型會存到字幕目錄\Fonts\ 下，不管複製成功或失敗，結果都會顯示於字型後面，如最上面的圖　　copied 代表字型複製成功，not installed 代表系統未安裝此字幕，not found 代表在註冊表裡或系統字型文件夾裡找不到此字型</li></ol><p>截圖說明</p><p>截圖是以俺妹字幕為例，列出俺妹一二季全字幕檔實際用到的字型</p><p>目前除了黑色跟紅色，另外用藍色跟粉紅色來顯示特殊字型</p><p>黑色 - 已安裝字型<br>藍色 - 已安裝的特殊字型</p><p>紅色 - 未安裝字型<br>粉紅 - 未安裝的特殊字型</p><p>特殊字型的定義是，在 .ass/.ssa 裡正常定義也正常安裝，卻可能仍然沒有正常顯示出來的字型<br>發生的原因未知，如果有人知道原理，也請告知一下</p><p>例如</p><ol><li><p>日文字型 FOT-マティス Pro B (FOT-Matisse Pro B)<br>　在使用直式字型 @FOT-マティス Pro B 時，無法正常顯示，改成 @FOT-Matisse Pro B 則正常</p></li><li><p>華康中圓體(P) (DFPYuanMedium-B5)<br>　在使用 \fn華康中圓體(P) 時，無法正常顯示，改成 \fnDFPYuanMedium-B5 則正常</p></li><li><p>Noto 字型 (Google) + Style 行設定了錯誤的 encoding 時，如繁中 Windowns + 134(GB2313) 或簡中 Windows + 136(BIG5)</p></li><li><p>Source Hans/思源 字型 (Adobe) 跟 Noto 是一模一樣的字型 (只有字型名稱不同)<br>　思源黑體(Source Han Sans) = Noto Sans，思源宋體(Source Han Serif) = Noto Serif</p></li></ol><p>用特別的顏色來提醒使用者，這些字型可能要修改 .ass/.ssa 檔後才能正常顯示 (1/2/3)，或是避免重覆安裝 (4)</p><hr><p>更新日誌</p><p>v180623</p><ol><li>支援 騰祥、”BONX”、”Comic Runes” 字型</li><li>支援更多 “FOT”, “A-OTF”, “G-OTF” 字型</li><li>修正一些 “NeedVerify.ass” 遇到直式字幕的問題</li><li>修正 Win10 更新之後多了一些空行的問題</li></ol><p>下载</p><ul><li><a href="https://daye-my.sharepoint.com/:u:/g/personal/root_bfdz_ink/EWt6pVCHVk5MuTj24YnVPh8BiEWiK-CbKkr3X_J3sv9yqQ?e=K6063z" target="_blank" rel="noopener">OneDrive</a></li><li><a href="https://bfdz.stackstorage.com/s/qE12bUHbiwAGNph" target="_blank" rel="noopener">STACK</a></li><li><a href="https://cargo.hyperay.cc/?dir=software/%E5%AD%97%E5%B9%95%E5%B7%A5%E5%85%B7" target="_blank" rel="noopener">资源库</a></li></ul><hr><p>来源：<a href="http://bbs.vcb-s.com/thread-1894-1-1.html" target="_blank" rel="noopener">http://bbs.vcb-s.com/thread-1894-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ListAssFonts </tag>
            
            <tag> 字幕工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周浩作品集（第二版）</title>
      <link href="/2018/07/06/103/"/>
      <url>/2018/07/06/103/</url>
      
        <content type="html"><![CDATA[<p>更新了失效的百度网盘链接，全部替换为 OneDrive 分享链接。</p><p><strong>新增</strong></p><p>影片：</p><ul><li>7%</li><li>小彪和狗</li><li>日子</li><li>差馆II</li></ul><p>演讲：一席 周浩</p><p>访谈：真实与现实——《差馆 II》放映及周浩访谈</p><a id="more"></a><hr><h2 id="7-2017"><a href="#7-2017" class="headerlink" title="7% (2017)"></a>7% (2017)</h2><p>◎片　　名　7%<br>◎年　　代　2017<br>◎产　　地　中国大陆<br>◎类　　别　纪录片<br>◎豆瓣评分　6.2/10 from 108 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/27176021/" target="_blank" rel="noopener">https://movie.douban.com/subject/27176021/</a><br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　一部记录了腾讯“绝艺”诞生和夺冠全程的记录片10月12日在香港恒生管理学院首次试映，绝艺幕后团队在片中悉数亮相。一群技艺超群的IT工程师如何用电脑打败了其它机器人对手和超一流围棋选手？由曾蝉联第51届、52届金马奖最佳纪录片奖导演周浩执导的这部影片以贴身采访和翔实记录揭开其中的秘密。</p><blockquote><p>在线观看 <a href="https://v.qq.com/x/cover/li4gx4xjoqf9jk2/a0025stauhc.html" target="_blank" rel="noopener">腾讯视频</a><br>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EZrJeyLjVl9HsFZGpFSrIrABjoIikOnQSjAE48cldM6ZCg?e=ZAIKuE" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="大同（2015）"><a href="#大同（2015）" class="headerlink" title="大同（2015）"></a>大同（2015）</h2><p>◎译　　名　中国市长<br>◎片　　名　大同<br>◎年　　代　2015<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　山西大同方言<br>◎上映日期　2015-01(圣丹斯电影节)<br>◎IMDb评分  6.9/10 from 72 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt4056808/" target="_blank" rel="noopener">http://www.imdb.com/title/tt4056808/</a><br>◎豆瓣评分　8.8/10 from 783 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/26276498/" target="_blank" rel="noopener">http://movie.douban.com/subject/26276498/</a><br>◎片　　长　86分钟<br>◎导　　演　周浩 Hao Zhou<br>◎主　　演　耿彦波</p><p>◎简　　介</p><p>　　曾经繁华的中国都市大同市，如今屹立在一堆废墟的旁边。这座城市不仅污染严重，还因其陈旧的基础设施和摇摇欲坠的经济前景而濒临瘫痪。但大同市长想要改变这一切，他大胆地宣布了一项试图重塑昔日的辉煌的新计划，要知道这座城市的文明已经有1600年了。<br>　　然而，伴随着这项计划的是非常高的成本。数以千计的房屋被推倒，50万居民（占大同市总人口的百分之三十）将在他的打理下被重新安置。这位市长成功与否，完全取决于他是否能让愤怒的工人群体以及越来越忐忑的统治精英冷静下来。纪录片《中国市长》惊人地捕捉到了一个男人，甚至是一个国家疯狂跳跃着进入一个越来越动荡的未来的过程。</p><blockquote><p>BT种子 <a href="https://rarbg.to/download.php?id=ht9sij6&amp;f=Storyville%202015%20The%20Chinese%20Mayor%20576p%20x264%20HDTV%20%5BMVGroup%20org%5D-%5Brarbg.com%5D.torrent" target="_blank" rel="noopener">The.Chinese.Mayor.576p.HDTV.x264.AAC.MVGroup.org.mkv </a> 800MB<br>下载链接(含中文外挂字幕) <a href="https://daye-my.sharepoint.com/:f:/g/personal/root_bfdz_ink/Ehf65C4Ys_JFs4j64S7LdskBMguj7Q0VbOW-i-nK0Rdyaw?e=GfKQtD" target="_blank" rel="noopener">OneDirve</a></p></blockquote><hr><h2 id="小彪和狗-2015"><a href="#小彪和狗-2015" class="headerlink" title="小彪和狗 (2015)"></a>小彪和狗 (2015)</h2><p>◎片　　名　小彪和狗<br>◎年　　代　2015<br>◎产　　地　中国大陆<br>◎类　　别　纪录片/短片<br>◎豆瓣评分　/10 from 0 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26951921/" target="_blank" rel="noopener">https://movie.douban.com/subject/26951921/</a><br>◎片　　长　12min<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　两届金马奖最佳纪录片导演周浩在2015年拍摄了纪录短片《小彪和狗》。15岁的贵州初二学生小彪在片中向他的同学们谈到自己的狗。</p><blockquote><p>在线观看 <a href="https://v.youku.com/v_show/id_XMTUwNzY0NjM5Mg==.html" target="_blank" rel="noopener">优酷</a><br>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EQ3fusjmnKtEkOEJzcMWDMQBXO-ZJb1YNg16jdGYatTmzA?e=9KtOC7" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="急诊室-2013"><a href="#急诊室-2013" class="headerlink" title="急诊室 (2013)"></a>急诊室 (2013)</h2><p>◎译　　名　急诊/120的故事<br>◎片　　名　急诊室<br>◎年　　代　2013<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话/粤语<br>◎上映日期　2013<br>◎豆瓣评分　7.7/10 from 253 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/21340768/" target="_blank" rel="noopener">http://movie.douban.com/subject/21340768/</a><br>◎片　　长　99分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　这是导演有关中国社会公共空间系列纪录片的继续……<br>　　在中国南方的最大城市-广州一所医院的急诊室，摄制组在这前后呆十个月的时间。这是导演有关中国社会公共空间系列纪录片的继续……<br>　　在中国南方的最大城市–广州的一所医院的急诊室，摄制组在这前后呆了十个月的时间，他们跟随着日夜在市区内奔走的120急救车，用镜头去遭遇各种各样的急诊故事。<br>　　中国早已经是世界第二大经济体，但政府还是不得不承认自己是一个人口众多的发展中国家。随着城市化和工业化进程的加快，中国社会保障体系的建设远远落后于经济发展速度的矛盾日益呈现。<br>　　在急诊室，表面上离奇、荒诞的故事一一在镜头前“上演”。一方面，我们看到很多不懂得爱惜自己生命的人，另一方面，我们也表现出对一个健全有效的医疗保障体系渴望。<br>　　两千多年前，中国的哲人孟子已经提出，理想的“大同”社会应该是“老吾老以及人之老，幼吾幼以及人之幼”。近年，中国政府大张其鼓倡导的“和谐”社会似乎就是来源于此。社会理想的状况应该是让每个人都能有尊严活着，然后有尊严地死去。<br>　　最后，我们要特别感谢那些允许我们拍摄普通的中国人，成片时我们没法一一再联系到他们，并征求得他们的同意。是他们的故事让我们更加了解我们生存的社会，本片也将承诺不进行任何商业运作。</p><blockquote><p>在线观看 <a href="http://v.youku.com/v_show/id_XNTAxOTAwMjky.html?from=y1.2-2.4.22" target="_blank" rel="noopener">优酷</a></p></blockquote><hr><h2 id="棉花（2013）"><a href="#棉花（2013）" class="headerlink" title="棉花（2013）"></a>棉花（2013）</h2><p>◎片　　名　棉花<br>◎年　　代　2013<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎豆瓣评分　7.5/10 from 279 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/4195650/" target="_blank" rel="noopener">http://movie.douban.com/subject/4195650/</a><br>◎片　　长　93分钟<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　中国的一粒棉花籽最后如何成为美国零售店里的有一条牛仔裤？在这个过程里究竟有多少耐人寻味的故事？本片将跟随那些被紧紧捆绑在绵延5000公里长的棉纺产业链上的人们，以棉花为线索，讲述他们的故事、描述中国人完成“中国制造”的整个接力过程。<br>　　《棉花》前所未有地揭示了当代中国农民、企业工人、纺织品商人……也就是工贸链条上形形色色人群之间不同生活的内在联系。他们虽然生活在不同的地方，做着不同的工作，但都被紧紧捆绑在棉花的产业链上：这些棉花和被制成的衣服，将生活状态截然不同的人们联结到一起，本片通过深入直接的采访记录他们的日常生活，思索不同人们共同面对的生活命题, 展示中国经济各环节的真正面貌。</p><p>◎获奖情况</p><p>　　第51届台北金马影展 (2014)<br>　　金马奖 最佳纪录片</p><p>　　第19届釜山国际电影节 (2014)<br>　　最佳纪录片奖(提名)</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:f:/g/personal/root_bfdz_ink/Eh2NRgfH4jFImUmvNDrrw18BLRcw_XYDHYD7VVzaF2LUgg?e=y5Gbbb" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="日子-2011"><a href="#日子-2011" class="headerlink" title="日子 (2011)"></a>日子 (2011)</h2><p>◎译　　名　AVillageLife<br>◎片　　名　日子<br>◎年　　代　2011<br>◎产　　地　中国大陆<br>◎语　　言　汉语普通话<br>◎豆瓣评分　6.9/10 from 158 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/25955787/" target="_blank" rel="noopener">https://movie.douban.com/subject/25955787/</a><br>◎片　　长　51分钟<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　片长51分钟，只是记录了冬天四川达州农村，一对老夫妻家长里短的生活。 村里的年轻人都外出打工，这个村的人大都是到广东鲘门去打渔…… 2011年制作，法国剪辑。</p><blockquote><p>在线观看 <a href="https://v.youku.com/v_show/id_XNjcyMDA5MTgw.html" target="_blank" rel="noopener">优酷</a> 密码:0987651<br>在线观看 <a href="https://www.bilibili.com/video/av2716903/" target="_blank" rel="noopener">bilibili</a></p></blockquote><hr><h2 id="差馆Ⅱ-2011"><a href="#差馆Ⅱ-2011" class="headerlink" title="差馆Ⅱ (2011)"></a>差馆Ⅱ (2011)</h2><p>◎译　　名　差馆2<br>◎片　　名　差馆Ⅱ<br>◎年　　代　2011<br>◎产　　地　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎豆瓣评分　8.3/10 from 327 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/11528245/" target="_blank" rel="noopener">https://movie.douban.com/subject/11528245/</a><br>◎片　　长　70分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　第二年（2011）春运，我们一如既往回到这个派出所……<br>　　除了那几位老“差人”，上一部片中的“新疆人”、“来广州混的少年”、“忏悔的青年”……没有一位再次出现。<br>　　派出所，普通人一生也难得进去一次，可也有人一个春运要进去好几次。故事就从一些总要在这进进出出的人说起……<br>　　影片似乎仍然是没有重点，结构松散，主题混沌。<br>　　其实，人本身就是一矛盾体，由人组成的社会注定也是如此。</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EW9oFBy_VP9Li6N2MkqLEvoB51rvxVhb9eeE6QqAQc2t9Q?e=rfbGXy" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="差馆（2010）"><a href="#差馆（2010）" class="headerlink" title="差馆（2010）"></a>差馆（2010）</h2><p>◎片　　名　差馆<br>◎年　　代　2010<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎豆瓣评分　8.1/10 from 686 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/5343752/" target="_blank" rel="noopener">http://movie.douban.com/subject/5343752/</a><br>◎片　　长　67<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　广州火车站站前派出所，一个万象生的地方，在这里你能看到社会的各个折射面。</p><blockquote><p>在线观看 <a href="http://v.youku.com/v_show/id_XNTA4Mzc2MTU2.html" target="_blank" rel="noopener">优酷</a></p></blockquote><hr><h2 id="书记（2009）"><a href="#书记（2009）" class="headerlink" title="书记（2009）"></a>书记（2009）</h2><p>◎片　　名　书记<br>◎年　　代　2009<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　普通话/国语<br>◎上映日期　2009-03-28<br>◎IMDb评分  7.0/10 from 5 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt1859619/" target="_blank" rel="noopener">http://www.imdb.com/title/tt1859619/</a><br>◎豆瓣评分　8.5/10 from 1,042 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/3629230/" target="_blank" rel="noopener">http://movie.douban.com/subject/3629230/</a><br>◎片　　长　102分钟<br>◎导　　演　周浩 Hao Zhou<br>◎主　　演　郭永昌</p><p>◎简　　介</p><p>　　中国被划分为34个省级行政区域，它们是又由大约1500多个县组成。<br>　　近年来，中国内陆的官员，大都面临着两大问题：一是怎么吸引投资，促进地方经济的发展；二是要想尽一切办法去化解因社会发展而滋生出的各种社会矛盾。<br>　　本片讲述了一位即将离任的县委书记，在离任前三个月内发生的故事。</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EVQvSKWDYeJBpsPdPQByNRIBkLPLm0QiECmM_Yx1NHVOnw?e=gwmcTY" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="龙哥（2008）"><a href="#龙哥（2008）" class="headerlink" title="龙哥（2008）"></a>龙哥（2008）</h2><p>◎片　　名　龙哥<br>◎年　　代　2008<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　普通话/国语<br>◎IMDb评分  7.3/10 from 9 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt1677711/" target="_blank" rel="noopener">http://www.imdb.com/title/tt1677711/</a><br>◎豆瓣评分　8.3/10 from 607 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/3724118/" target="_blank" rel="noopener">http://movie.douban.com/subject/3724118/</a><br>◎片　　长　104分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　导演认识了两位“朋友”。他与他们之间的交往构成了这部片子。开始，他并没有一个明确的计划要制作一部纪录片，但随着时间的推移，他开始有目的和他们交“朋友”。“朋友”们奇迹般地允许导演进入他们的生活，他们吸毒也贩毒的生活。<br>　　纪录片的制作者和被拍者之间到底应该是一种什么样的关系，这部影片给出了它的解释。</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EUzNhwPqyDhFtsYN7r4hggABElIox8_proGIjFWn39htSA?e=zdf4Cc" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="高三（2005）"><a href="#高三（2005）" class="headerlink" title="高三（2005）"></a>高三（2005）</h2><p>◎片　　名　高三<br>◎年　　代　2005<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎上映日期　2005-11<br>◎IMDb评分  6.8/10 from 5 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt4276994/" target="_blank" rel="noopener">http://www.imdb.com/title/tt4276994/</a><br>◎豆瓣评分　8.4/10 from 23,618 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/1761854/" target="_blank" rel="noopener">http://movie.douban.com/subject/1761854/</a><br>◎片　　长　95分钟/138分钟(完整版)<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　本片纪录了中国福建省一所普通中学一个高三毕业班的真实生活。高三的生活日复一日，简单而又沉重，痛苦却也快乐。<br>　　善良严厉的班主任，紧张刻苦的尖子生，逃避生活的“差生”，执着爱情的“早恋生”，学生的父母，每个亲历高三的人都有各自的感悟和超越高三的期望。影片的纪录真实、直白，透过高三生活的纪录，让人感到的不仅仅是为理想执着拼搏的浪漫，更有一种如鲠在喉的悲哀。</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EWfyeZnnAzdBkqCqx4KHS_UB27aeHde0Z-4JtQQ8tbCtYg?e=PcN4Ds" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="厚街（2002）"><a href="#厚街（2002）" class="headerlink" title="厚街（2002）"></a>厚街（2002）</h2><p>◎片　　名　厚街<br>◎年　　代　2002<br>◎国　　家　中国<br>◎类　　别　纪录片<br>◎豆瓣评分　7.7/10 from 220 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/2136171/" target="_blank" rel="noopener">http://movie.douban.com/subject/2136171/</a><br>◎片　　长　91分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　厚街又名后街，是珠江口的一个小镇，距离省会广州 45公里，香港80公里。20世纪80年代初至今，来自台湾、香港的资本和中国内地的大量廉价劳动力使它从农业小镇迅速发展为一个劳动密集型的工业城镇。工厂里的工人是进城打工的农民，他们从中国内地最贫困地区来到广东的厚街镇。工厂附近的出租屋是农民们进入城市的第一个落脚点，也是他们远离故乡后在千里之处建起的另一个家。本片真实记录了这些在厚街打工农民鲜为人知的生活状况，它们成为中国城市化进程中不可忽视的重要组成部分。</p><blockquote><p>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/Eds-pf6pOsREqtp5Wq0fqBcBzYjZNWIkC3qYGilEWzNsPA?e=hLN5vF" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr><h2 id="演讲和访谈"><a href="#演讲和访谈" class="headerlink" title="演讲和访谈"></a>演讲和访谈</h2><ul><li>一席 周浩 《以纪录片之名》</li></ul><blockquote><p>在线观看 <a href="https://www.bilibili.com/video/av3289206" target="_blank" rel="noopener">bilibili</a>  <a href="http://v.qq.com/x/page/x0147kd2nna.html" target="_blank" rel="noopener">腾讯视频</a></p></blockquote><ul><li>【纽约文化沙龙】真实与现实——《差馆 II》放映及周浩访谈</li></ul><blockquote><p>在线观看 <a href="https://www.youtube.com/watch?v=uCe_vD9caiA" target="_blank" rel="noopener">YouTube</a><br>下载链接 <a href="https://daye-my.sharepoint.com/:v:/g/personal/root_bfdz_ink/EdnOxskRtXxAkDyr2B7faPkBW-sPI615WMGMI53FaN28Jw?e=X8IJ4C" target="_blank" rel="noopener">OneDrive</a></p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 纪录片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纪录片 </tag>
            
            <tag> 合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 7 分区表转换和 USB 3.0 驱动注入</title>
      <link href="/2018/06/28/102/"/>
      <url>/2018/06/28/102/</url>
      
        <content type="html"><![CDATA[<p>最近碰到一些机器只有 USB 3.0 的接口，同时设备还不支持 GPT 分区表。这导致了系统无法安装问题和安装 windows 7 系统后键盘、鼠标无法使用的问题。</p><a id="more"></a><hr><p><strong>用 diskpart 命令将硬盘转换成 MBR 分区表，解决分区表问题。</strong></p><p>当windows安装程序进行到选择分区的步骤时，按下SHIFT+F10调出命令提示符</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fsr8mez22ej20hu0dedhw.jpg" alt=""></p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fsr8mq7kahj20kw0g1gqr.jpg" alt=""></p><p>输入 diskpart 打开 diskpart 工具</p><ul><li>选择目标磁盘</li></ul><p>列出系统拥有的磁盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list disk</span><br></pre></td></tr></table></figure></p><p>选择0号磁盘，请根据磁盘大小，自行判断你的目标磁盘<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select disk 0</span><br></pre></td></tr></table></figure></p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fsr8myngiaj20kf0fxjw6.jpg" alt=""></p><ul><li>清空目标磁盘，并转换为 MBR 格式</li></ul><p>清除磁盘,该命令会抹去磁盘上所有数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean</span><br></pre></td></tr></table></figure></p><p>将磁盘分区表转换为 MBR 格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert mbr</span><br></pre></td></tr></table></figure></p><p>列出磁盘上的分区，因为我们刚转换成 MBR 格式，因此，分区为空<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list partition</span><br></pre></td></tr></table></figure></p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fsr8nosde4j20ki08u0vl.jpg" alt=""></p><ul><li>建立主分区</li></ul><p>建立主分区，大小为 60000M，请根据自己需求调整，该分区用来安装 win7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create partition primary size=60000</span><br></pre></td></tr></table></figure><hr><p><strong>使用 CeoMSX 给系统注入 USB 3.0 驱动</strong></p><p>我安装系统使用的是微 PE，先将 windows 7 镜像解压到机器的 D 盘，然后使用微 PE 内置的 windows 安装器将系统写入到 C 盘</p><p><img src="http://8.pic.pc6.com/thumb/up/2017-7/2017717165824487415856120_600_0.jpg" alt=""></p><p>安装完成后，不要重启系统，这时用 CeoMSX 给 C 盘的系统注入 USB 3.0 驱动。</p><p><img src="https://www.sysceo.com/forum/data/attachment/forum/201806/28/160112boeye2teu1ererur.png" alt=""></p><p>特别需要注意，要在系统写入 C 盘后，重启系统之前注入驱动。如果重启了系统，再注入驱动是没用的。</p><hr><p>参考资料：</p><ul><li><a href="https://jingyan.baidu.com/article/84b4f565c44ae760f6da32e4.html" target="_blank" rel="noopener">GPT转MBR分区</a></li><li><a href="https://blog.csdn.net/techzero/article/details/8921206" target="_blank" rel="noopener">GPT分区下安装Windows7 x64 完整教程</a></li><li><a href="https://www.sysceo.com/forum/thread-40272-1-1.html" target="_blank" rel="noopener">CeoMSX</a></li><li><a href="http://www.wepe.com.cn/" target="_blank" rel="noopener">微 PE 工具箱</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分区表 </tag>
            
            <tag> 驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字幕组网站签到脚本</title>
      <link href="/2018/06/24/101/"/>
      <url>/2018/06/24/101/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.zimuzu.tv" target="_blank" rel="noopener">字幕组网站</a>每天签到获得 1 积分，可用 100 积分升级金至尊会员。三个月未登录网站或者客户端的“金至尊会员”也会被降级到至尊会员。</p><a id="more"></a><hr><ul><li><p>脚本依赖 <code>curl</code> 和 <code>python</code>。</p></li><li><p>修改 <code>user</code> 和 <code>password</code> ，LOG 是脚本日志路径，再用 <code>crontab</code> 设个每天的定时任务即可。</p></li></ul><hr><p>源码：<a href="https://gist.github.com/a0167680e246f0be3248c9748b81d2ef.git" target="_blank" rel="noopener">zimuzu-sign.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">ACCOUNT=<span class="string">"user"</span></span><br><span class="line">PASSWORD=<span class="string">"password"</span></span><br><span class="line">LOG=/var/<span class="built_in">log</span>/zimuzu-sign.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#########################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">urlEncode</span></span>() &#123;</span><br><span class="line">    python -c <span class="string">"</span></span><br><span class="line"><span class="string">import urllib, commands, os;</span></span><br><span class="line"><span class="string">var = commands.getoutput('echo \'<span class="variable">$1</span>\'');</span></span><br><span class="line"><span class="string">var = urllib.quote_plus(var);</span></span><br><span class="line"><span class="string">os.system('echo ' + var);"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DOMAIN=<span class="string">"http://www.zimuzu.tv"</span></span><br><span class="line">COOKIE=<span class="string">"zimuzu.cookie"</span></span><br><span class="line">REMEMBER=<span class="string">"1"</span></span><br><span class="line">REDIRECT=<span class="string">"<span class="variable">$DOMAIN</span>/user/sign"</span></span><br><span class="line"></span><br><span class="line">ExpectedResponseText=<span class="string">'&#123;"status":0,"info":"","data":0&#125;'</span></span><br><span class="line">RetryCount=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">curl -d <span class="string">"account=<span class="variable">$(urlEncode $ACCOUNT)</span>&amp;password=<span class="variable">$(urlEncode $PASSWORD)</span>&amp;remember=<span class="variable">$(urlEncode $REMEMBER)</span>&amp;url_back=<span class="variable">$(urlEncode $REDIRECT)</span>"</span> \</span><br><span class="line">    -c <span class="string">"<span class="variable">$COOKIE</span>"</span> -s <span class="string">"<span class="variable">$DOMAIN</span>/User/Login/ajaxLogin"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'登录......'</span></span><br><span class="line"></span><br><span class="line">sleep 1</span><br><span class="line"><span class="comment"># 签到</span></span><br><span class="line">curl -s --cookie <span class="string">"<span class="variable">$COOKIE</span>"</span> <span class="string">"<span class="variable">$REDIRECT</span>"</span> &gt; /dev/null</span><br><span class="line">curl -s --cookie <span class="string">"<span class="variable">$COOKIE</span>"</span> <span class="string">"<span class="variable">$DOMAIN</span>/user/login/getCurUserTopInfo"</span> &gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'签到......'</span></span><br><span class="line"></span><br><span class="line">sleep 1</span><br><span class="line"><span class="comment"># 积分日志</span></span><br><span class="line">BONUS=$(curl -s --cookie <span class="string">"<span class="variable">$COOKIE</span>"</span> <span class="string">"<span class="variable">$DOMAIN</span>/user/user"</span> | grep <span class="string">'sp3"&gt;积分'</span> | awk -F<span class="string">'[&gt;&lt;]'</span> <span class="string">'&#123;print $5&#125;'</span>)</span><br><span class="line">DATE=$(date <span class="string">"+%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$DATE</span> 积分:<span class="variable">$BONUS</span> &gt;&gt; &amp;LOG</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字幕组 </tag>
            
            <tag> 签到 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高墙深度解析</title>
      <link href="/2018/06/24/100/"/>
      <url>/2018/06/24/100/</url>
      
        <content type="html"><![CDATA[<p>谈下自己根据实际经历写的一些关于被墙原因及深度解析↑(几年日常使用30+主机商200余台虚机/杜甫分布世界各地的经历。)以下全是大白话<br>这里可以首先基本肯定的是，高墙墙你不是根据你机子的历史行为，而是根据高墙在发作那一刻扫描出的结果来决定墙不墙你。后面写不下了，看图片吧</p><a id="more"></a><hr><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fsm6jlwc86j20xc0x8dmj.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fsm6jzv73hj20xc0ry0ww.jpg" alt=""></p><hr><p>via:<a href="https://twitter.com/wangzihao98/status/1009765408344137728" target="_blank" rel="noopener">https://twitter.com/wangzihao98/status/1009765408344137728</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络封锁 </tag>
            
            <tag> vps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCTV5 官方互联网直播渠道合集</title>
      <link href="/2018/06/16/99/"/>
      <url>/2018/06/16/99/</url>
      
        <content type="html"><![CDATA[<p>鉴于直播源很快就失效了，本人暂时不会再分享其他直播源。</p><p>整理一下官方的互联网全平台直播渠道，相比直播源，不用担心失效、不稳定之类的问题。</p><a id="more"></a><hr><p><strong>PC</strong></p><ul><li><p>央视网：<a href="http://tv.cctv.com/live/cctv5/" target="_blank" rel="noopener">http://tv.cctv.com/live/cctv5/</a></p></li><li><p>优酷直播：<a href="https://live.youku.com/" target="_blank" rel="noopener">https://live.youku.com/</a></p></li></ul><hr><p><strong>移动端</strong></p><ul><li><p>央视影音：<a href="http://app.cctv.com/appkhdxz/ydb/index.shtml" target="_blank" rel="noopener">http://app.cctv.com/appkhdxz/ydb/index.shtml</a></p></li><li><p>优酷：<a href="http://mobile.youku.com" target="_blank" rel="noopener">http://mobile.youku.com</a></p></li><li><p>咪咕直播：<a href="https://m.miguvideo.com" target="_blank" rel="noopener">https://m.miguvideo.com</a></p></li></ul><hr><p><strong>TV端/互联网机顶盒</strong></p><ul><li><p>CIBN酷喵影视</p></li><li><p>Bestv咪视通</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
            <tag> 高清直播 </tag>
            
            <tag> CCTV5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCTV5直播源合集</title>
      <link href="/2018/06/15/98/"/>
      <url>/2018/06/15/98/</url>
      
        <content type="html"><![CDATA[<p>Windows 平台可使用 PotPlayer 、VLC 打开链接，Android 平台可使用 MxPlayer 、VLC 打开链接。</p><p>自己尝试，总会有一个能用。</p><a id="more"></a><hr><ul><li><p>辽宁沈阳移动CCTV5</p><blockquote><p><a href="http://hwottcdn.ln.chinamobile.com/PLTV/88888890/224/3221225497/index.m3u8" target="_blank" rel="noopener">http://hwottcdn.ln.chinamobile.com/PLTV/88888890/224/3221225497/index.m3u8</a></p></blockquote></li><li><p>江苏南京移动CCTV5</p><blockquote><p><a href="http://223.110.243.157/PLTV/3/224/3221226324/index.m3u8" target="_blank" rel="noopener">http://223.110.243.157/PLTV/3/224/3221226324/index.m3u8</a></p></blockquote></li><li><p>江苏南京移动CCTV5</p><blockquote><p><a href="http://183.207.249.6/PLTV/3/224/3221226324/index.m3u8" target="_blank" rel="noopener">http://183.207.249.6/PLTV/3/224/3221226324/index.m3u8</a></p></blockquote></li><li><p>江苏南京移动CCTV5</p><blockquote><p><a href="http://223.110.243.136/PLTV/3/224/3221227166/index.m3u8" target="_blank" rel="noopener">http://223.110.243.136/PLTV/3/224/3221227166/index.m3u8</a></p></blockquote></li><li><p>江苏南京移动蓝光源CCTV-5蓝光</p><blockquote><p><a href="http://223.110.241.204:6610/gitv/live1/G_CCTV-5-CQ/G_CCTV-5-CQ/" target="_blank" rel="noopener">http://223.110.241.204:6610/gitv/live1/G_CCTV-5-CQ/G_CCTV-5-CQ/</a></p></blockquote></li><li><p>江苏南京移动蓝光源CCTV-5+蓝光</p><blockquote><p><a href="http://223.110.241.204:6610/gitv/live1/G_CCTV-5PLUS-CQ/G_CCTV-5PLUS-CQ/" target="_blank" rel="noopener">http://223.110.241.204:6610/gitv/live1/G_CCTV-5PLUS-CQ/G_CCTV-5PLUS-CQ/</a></p></blockquote></li><li><p>江西南昌移动CCTV5</p><blockquote><p><a href="http://223.82.250.72/ysten-business/live/cctv-5/index.m3u8" target="_blank" rel="noopener">http://223.82.250.72/ysten-business/live/cctv-5/index.m3u8</a></p></blockquote></li><li><p>重庆联通CCTV-5高清</p><blockquote><p>rtsp://123.147.113.84:554/04000001/01000000004000000000000000000304?AuthInfo=xxx&amp;userid=</p></blockquote></li><li><p>重庆联通CCTV-5标清</p><blockquote><p>rtsp://123.147.113.84:554/04000001/01000000004000000000000000000303?AuthInfo=xxx&amp;userid=</p></blockquote></li><li><p>重庆联通CCTV5＋高清</p><blockquote><p>rtsp://123.147.113.84:554/04000001/01000000004000000000000000000230?AuthInfo=xxx&amp;userid=</p></blockquote></li><li><p>宁夏银川电信CCTV-5HD</p><blockquote><p>rtsp://124.224.238.165:554/PLTV/88888888/224/3221225890/10000100000000060000000000725782_0.smil</p></blockquote></li><li><p>宁夏银川电信CCTV5＋HD</p><blockquote><p>rtsp://124.224.238.165:554/PLTV/88889012/224/3221225943/10000100000000060000000000758560_0.smil</p></blockquote></li><li><p>广电电信CCTV-5＋高清</p><blockquote><p>rtsp://183.59.32.147:554/PLTV/88888905/224/3221227192/10000100000000060000000000987131_0.smil</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
            <tag> potplayer </tag>
            
            <tag> 高清直播 </tag>
            
            <tag> CCTV5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>央视和各省市直播源</title>
      <link href="/2018/06/09/97/"/>
      <url>/2018/06/09/97/</url>
      
        <content type="html"><![CDATA[<p>覆盖央视高清频道、央视标清频道、各省卫视、部分地方台。使用 Potplayer 打开和播放。</p><a id="more"></a><hr><p><img src="http://bbs1.people.com.cn/postImages/Y0/E4/DC/FA/E2/1528553077474.jpg" alt="CCTV5高清"></p><p><img src="http://bbs1.people.com.cn/postImages/Y0/E4/DD/9B/70/1528553118576.jpg" alt="CCTV5高清"></p><p><img src="http://bbs1.people.com.cn/postImages/Y0/E4/DF/1F/37/1528553217847.jpg" alt="CCTV9高清"></p><p><img src="http://bbs1.people.com.cn/postImages/Y0/E4/DF/46/8E/1528553227918.jpg" alt="湖南卫视高清"></p><p><img src="http://bbs1.people.com.cn/postImages/Y0/E4/DF/72/EC/1528553239276.jpg" alt="东方卫视高清"></p><hr><ul><li>网盘：</li></ul><blockquote><p><a href="https://bfdz.stackstorage.com/s/rdOWrixrcQl9EzT" target="_blank" rel="noopener">直播源</a> 密码：BFDZ</p></blockquote><ul><li>OneDrive:</li></ul><blockquote><p><a href="https://daye-my.sharepoint.com/:f:/g/personal/root_bfdz_ink/EtnoxxJ2NglLictF0ck1PBABHQ0PAWvo3DD5M99hvYLcsw?e=KhdhRG" target="_blank" rel="noopener">直播源</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
            <tag> potplayer </tag>
            
            <tag> 高清直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tsukaeru 512MB内存 100M带宽 不限流量 日本KVM VPS测评</title>
      <link href="/2018/06/08/96/"/>
      <url>/2018/06/08/96/</url>
      
        <content type="html"><![CDATA[<p>tsukaeru VPS购买教程：<a href="https://www.bfdz.ink/2018/06/08/95/">tsukaeru日本100M不限流量KVM VPS购买、账号验证、VPS使用教程</a><br>每月18元，日本100M不限流量的KVM VPS，电信、联通直连，移动绕香港，性能、I/O、网络都很不错。<br><strong>关于折扣：为一次性折扣。</strong></p><a id="more"></a><hr><p><strong>欢迎到TeleGram群讨论</strong>（一般需要梯子）：<a href="https://t.me/zhujiwiki" target="_blank" rel="noopener">https://t.me/zhujiwiki</a></p><p><strong>1、系统信息、带宽、I/O测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">CPU model            : Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz</span><br><span class="line">Number of cores      : 1</span><br><span class="line">CPU frequency        : 2397.220 MHz</span><br><span class="line">Total size of Disk   : 18.2 GB (1.3 GB Used)</span><br><span class="line">Total amount of Mem  : 493 MB (71 MB Used)</span><br><span class="line">Total amount of Swap : 1906 MB (0 MB Used)</span><br><span class="line">System uptime        : 0 days 0 hour 1 min</span><br><span class="line">Load average         : 0.01, 0.01, 0.00</span><br><span class="line">OS                   : Debian GNU/Linux 7</span><br><span class="line">Arch                 : x86_64 (64 Bit)</span><br><span class="line">Kernel               : 3.2.0-5-amd64</span><br><span class="line">Virt                 : parallels</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">I/O speed( 32M )     : 555 MB/s</span><br><span class="line">I/O speed( 256M )    : 204 MB/s</span><br><span class="line">I/O speed( 2G )      : 887 MB/s</span><br><span class="line">Average I/O speed    : 548.7 MB/s</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Node Name         Upload Speed      Download Speed      Latency     </span><br><span class="line">Normal Node       81.03 Mbit/s      238.93 Mbit/s       42.912 ms  </span><br><span class="line">Xiangyang CT      82.60 Mbit/s      219.09 Mbit/s       66.338 ms  </span><br><span class="line">Shanghai  CT      37.61 Mbit/s      139.29 Mbit/s       44.054 ms  </span><br><span class="line">Chengdu   CT      50.23 Mbit/s      1.69 Mbit/s         000.000 ms </span><br><span class="line">Xi&apos;an     CU      56.41 Mbit/s      170.04 Mbit/s       101.091 ms </span><br><span class="line">Shanghai  CU      86.46 Mbit/s      258.93 Mbit/s       48.069 ms  </span><br><span class="line">Chongqing CU      78.34 Mbit/s      176.83 Mbit/s       64.392 ms  </span><br><span class="line">Xi&apos;an     CM      96.28 Mbit/s      259.48 Mbit/s       103.328 ms </span><br><span class="line">Shanghai  CM      2.02 Mbit/s       14.75 Mbit/s        99.037 ms  </span><br><span class="line">Chengdu   CM      12.97 Mbit/s      118.28 Mbit/s       279.422 ms </span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Total time   : 4 min 26 sec</span><br><span class="line">Current time : 2018-06-05 15:18:13</span><br><span class="line">Finished！</span><br></pre></td></tr></table></figure><p><strong>2、上传/下载带宽测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by CHINA UNICOM JIANGSU COMPANY (Nanjing) [117.08 km]: 42.539 ms</span><br><span class="line">Testing download speed...........................</span><br><span class="line">Download: 263.24 Mbit/s</span><br><span class="line">Testing upload speed.............................</span><br><span class="line">Upload: 88.56 Mbit/s</span><br></pre></td></tr></table></figure><p><strong>3、国内访问速度</strong><br><img src="https://zhujiwiki.com/usr/uploads/2018/06/3361139289.jpg" alt="tsukaeru-ping.jpg" title="tsukaeru-ping.jpg"></p><p><strong>4、硬盘 I/O 性能测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=test bs=64k count=4k oflag=dsync</span><br><span class="line">4096+0 records in</span><br><span class="line">4096+0 records out</span><br><span class="line">268435456 bytes (268 MB) copied, 55.2358 s, 4.9 MB/s</span><br></pre></td></tr></table></figure><p><strong>5、UnixBench跑分</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Benchmark Run: Tue Jun 05 2018 15:24:16 - 15:52:28</span><br><span class="line">1 CPU in system; running 1 parallel copy of tests</span><br><span class="line"></span><br><span class="line">Dhrystone 2 using register variables       30188120.3 lps   (10.0 s, 7 samples)</span><br><span class="line">Double-Precision Whetstone                     3599.4 MWIPS (9.8 s, 7 samples)</span><br><span class="line">Execl Throughput                               3508.9 lps   (29.7 s, 2 samples)</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks        762094.3 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 256 bufsize 500 maxblocks          211887.8 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks       1932912.1 KBps  (30.0 s, 2 samples)</span><br><span class="line">Pipe Throughput                             1168163.0 lps   (10.0 s, 7 samples)</span><br><span class="line">Pipe-based Context Switching                 160235.3 lps   (10.0 s, 7 samples)</span><br><span class="line">Process Creation                               9495.2 lps   (30.0 s, 2 samples)</span><br><span class="line">Shell Scripts (1 concurrent)                   6447.4 lpm   (60.0 s, 2 samples)</span><br><span class="line">Shell Scripts (8 concurrent)                    845.8 lpm   (60.0 s, 2 samples)</span><br><span class="line">System Call Overhead                         924254.8 lps   (10.0 s, 7 samples)</span><br><span class="line"></span><br><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   30188120.3   2586.8</span><br><span class="line">Double-Precision Whetstone                       55.0       3599.4    654.4</span><br><span class="line">Execl Throughput                                 43.0       3508.9    816.0</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0     762094.3   1924.5</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     211887.8   1280.3</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    1932912.1   3332.6</span><br><span class="line">Pipe Throughput                               12440.0    1168163.0    939.0</span><br><span class="line">Pipe-based Context Switching                   4000.0     160235.3    400.6</span><br><span class="line">Process Creation                                126.0       9495.2    753.6</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4       6447.4   1520.6</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0        845.8   1409.6</span><br><span class="line">System Call Overhead                          15000.0     924254.8    616.2</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        1128.1</span><br></pre></td></tr></table></figure><p><strong>6、丢包测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Ping from 192.168.0.29 to 121.50.xxx.xxx</span><br><span class="line">==============================================================================</span><br><span class="line">06/05 14:24:56.117         Ping to 121.50.xxx.xxx with 32 bytes of data and 32 of TTL:</span><br><span class="line">06/05 14:24:56.207 PingMin #1 Reply 32 bytes from 121.50.xxx.xxx: time=85ms TTL=49, ave=85.00ms</span><br><span class="line">06/05 14:24:57.196 PingMax #2 Reply 32 bytes from 121.50.xxx.xxx: time=86ms TTL=49, ave=85.50ms</span><br><span class="line">06/05 14:24:58.196 PingMin #3 Reply 32 bytes from 121.50.xxx.xxx: time=84ms TTL=49, ave=85.00ms</span><br><span class="line"></span><br><span class="line">06/05 14:25:02.218 PingMax #7 Reply 32 bytes from 121.50.xxx.xxx: time=104ms TTL=49, ave=87.43ms</span><br><span class="line"></span><br><span class="line">06/05 14:25:09.216 PingMax #14 Reply 32 bytes from 121.50.xxx.xxx: time=106ms TTL=49, ave=87.79ms</span><br><span class="line"></span><br><span class="line">06/05 14:25:17.257 PingMax #22 Reply 32 bytes from 121.50.xxx.xxx: time=144ms TTL=49, ave=90.45ms</span><br><span class="line"></span><br><span class="line">06/05 14:26:23.283 PingMax #88 Reply 32 bytes from 121.50.xxx.xxx: time=176ms TTL=49, ave=91.27ms</span><br><span class="line"></span><br><span class="line">06/05 14:26:35.197         === 100 有效发送,   100 接收,     0.00% 丢失, 91.33ms 平均值  ===</span><br><span class="line">--- 结果 &amp; 统计信息 ------------------------------------------------------</span><br><span class="line">开始时间:  2018/06/05 14:24:56</span><br><span class="line">经过时间:            000:01:39</span><br><span class="line">结束时间:  2018/06/05 14:26:35</span><br><span class="line">----------------</span><br><span class="line">    100 总计发送  </span><br><span class="line">    0 无效接收 (除了超时的其它错误)                </span><br><span class="line">----------------</span><br><span class="line">    100 有效发送  </span><br><span class="line">    100 有效接收      </span><br><span class="line">    0 timed out (0.00% 丢失)</span><br><span class="line">Ping 最小值  84ms, 最大值  176ms, 平均值  91.33ms</span><br></pre></td></tr></table></figure><p><strong>7、路由追踪</strong><br>电信<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2892742268.jpg" alt="tsukaeru-trac-dx.jpg" title="tsukaeru-trac-dx.jpg"></p><p>联通<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/1556836237.jpg" alt="tsukaeru-trac-lt.jpg" title="tsukaeru-trac-lt.jpg"></p><p>移动<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/1025457647.jpg" alt="tsukaeru-trac-yd-1.jpg" title="tsukaeru-trac-yd-1.jpg"><br><img src="https://zhujiwiki.com/usr/uploads/2018/06/1013703484.jpg" alt="tsukaeru-trac-yd-2.jpg" title="tsukaeru-trac-yd-2.jpg"></p><p><strong>8、Youtube速度测试</strong><br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2152286243.jpg" alt="tsukaeru-youtube.jpg" title="tsukaeru-youtube.jpg"></p><hr><p>via:<a href="https://zhujiwiki.com/13433.html" target="_blank" rel="noopener">tsukaeru 512MB内存 100M带宽 不限流量 日本KVM VPS测评</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> tsukaeru </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tsukaeru日本100M不限流量KVM VPS购买、账号验证、VPS使用教程</title>
      <link href="/2018/06/08/95/"/>
      <url>/2018/06/08/95/</url>
      
        <content type="html"><![CDATA[<p>tsukaeru，提供100M不限流量的日本VPS，三网直连，很不错。</p><p>tsukaeru VPS测评：<a href="https://www.bfdz.ink/2018/06/08/96/">tsukaeru 512MB内存 100M带宽 不限流量 日本KVM VPS测评</a></p><p><strong>一、购买tsukaeru KVM VPS</strong><br>1、进入官网：<a href="https://www.tsukaeru.net/" target="_blank" rel="noopener">www.tsukaeru.net</a><br><a id="more"></a></p><hr><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/3167642094.jpg" alt="tsukaeru-1.jpg" title="tsukaeru-1.jpg"></p><p>选择KVM，最好年付，因为是一次性折扣，而且有1000日元的安装费，月付很不划算。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/881861679.jpg" alt="tsukaeru-2.jpg" title="tsukaeru-2.jpg"></p><p>下面以512MB内的KVM VPS为例说明。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/4060159446.jpg" alt="tsukaeru-3.jpg" title="tsukaeru-3.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/1878689169.jpg" alt="tsukaeru-4.jpg" title="tsukaeru-4.jpg"></p><p>建议选择SSD硬盘的。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2464219040.jpg" alt="tsukaeru-5.jpg" title="tsukaeru-5.jpg"></p><p>建议选择年付及以上，其他不要选。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2449077414.jpg" alt="tsukaeru-6.jpg" title="tsukaeru-6.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/1916509014.jpg" alt="tsukaeru-7.jpg" title="tsukaeru-7.jpg"></p><p>2、注册账号，可以使用中文。名字、地址最好和身份证上的一样，这样会一次验证通过。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/3802064662.jpg" alt="tsukaeru-8.jpg" title="tsukaeru-8.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/2626608218.jpg" alt="tsukaeru-9.jpg" title="tsukaeru-9.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/175896993.jpg" alt="tsukaeru-10.jpg" title="tsukaeru-10.jpg"></p><p><strong><em>现在取消了验证！！</em></strong></p><p>3、付款<br>进入后台：<a href="https://cp.tsukaeru.ne.jp/" target="_blank" rel="noopener">https://cp.tsukaeru.ne.jp/</a><br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2478340823.jpg" alt="tsukaeru-11.jpg" title="tsukaeru-11.jpg"></p><p>选择自己的VPS，如果买了多个的话。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2796802700.jpg" alt="tsukaeru-12.jpg" title="tsukaeru-12.jpg"></p><p>进入付款页面。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/1518111661.jpg" alt="tsukaeru-13.jpg" title="tsukaeru-13.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/3734199030.jpg" alt="tsukaeru-14.jpg" title="tsukaeru-14.jpg"></p><p><img src="https://zhujiwiki.com/usr/uploads/2018/06/2028440531.jpg" alt="tsukaeru-15.jpg" title="tsukaeru-15.jpg"></p><p><strong>二、tsukaeru VPS的管理</strong><br>1、如图即可。<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/3210971539.jpg" alt="tsukaeru-20.jpg" title="tsukaeru-20.jpg"></p><p>下图就是放行所有端口（tcp和udp）<br><img src="https://zhujiwiki.com/usr/uploads/2018/06/2358901329.jpg" alt="tsukaeru-21.jpg" title="tsukaeru-21.jpg"></p><hr><p>via:<a href="https://zhujiwiki.com/13465.html" target="_blank" rel="noopener">tsukaeru日本100M不限流量KVM VPS购买、账号验证、VPS使用教程</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> tsukaeru </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PT站自动登陆及读取消息脚本</title>
      <link href="/2018/06/07/94/"/>
      <url>/2018/06/07/94/</url>
      
        <content type="html"><![CDATA[<ul><li>可供一般PT站自动登陆，已保留账号之用。</li><li>填写邮箱后可以接受登陆失败的信息和未读消息。</li><li>默认读取收件箱和系统收件箱，并标记为已读。</li><li>默认邮箱程序为 mailx，请自行配置，否则不要填写邮箱。</li><li>严禁作为商业用途，转载至个人网站/个人博客 需注明moeclub.org是作者。</li></ul><a id="more"></a><hr><p>使用方法</p><ul><li>以MT为例，将代码中的中文全部替换为自己的信息。</li><li>可使用 bash -x shell.sh 进行调试。</li><li>支持 MT,CHD,HDTime 等等。</li><li>MT需要设置 Decrypt=’0′; CHD,HDTime需要设置 Decrypt=’1′;其他站可自行测试。</li></ul><p>配置邮箱通知:<br>参考:<a href="https://moeclub.org/2017/04/27/154/" target="_blank" rel="noopener">在VPS上配置邮件通知</a></p><p>文件下载:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO chinese.sh <span class="string">'https://moeclub.org/attachment/LinuxShell/PT/Login/chinese.sh'</span></span><br></pre></td></tr></table></figure><p>也可参考:一些国外PT站自动登陆脚本<br>附上完整代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># User Data, You should modify it.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> TheHost=<span class="string">'https://tp.m-team.cc'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> Account=<span class="string">'username=用户名&amp;password=密码'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> MyeMail=<span class="string">'邮箱'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> Decrypt=<span class="string">'0'</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not modify the following.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HostUrl=<span class="string">"<span class="variable">$(echo "$&#123;TheHost&#125;" |awk -F '://|/' '&#123;print $2&#125;')</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> dirCookie=<span class="string">'/tmp/cookie.txt'</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">Request</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">URL=<span class="string">"<span class="variable">$&#123;1&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">DATA=<span class="string">"<span class="variable">$&#123;2:-&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">ItRef=<span class="string">"<span class="variable">$&#123;3:-login.php&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">[[ -z <span class="string">"<span class="variable">$(echo "$&#123;URL&#125;" |grep '://')</span>"</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">"Error! URL incorrect. "</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">[ -n <span class="string">"<span class="variable">$&#123;Decrypt&#125;</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$&#123;Decrypt&#125;</span>"</span> -eq <span class="string">'1'</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$&#123;ItRef&#125;</span>"</span> != <span class="string">'login.php'</span> ] &amp;&amp; &#123;</span><br><span class="line"></span><br><span class="line">curl -k --silent \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Host: '</span><span class="variable">$&#123;HostUrl&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept-Language: zh-CN,en-US;q=0.8,zh;q=0.5,en;q=0.3'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept-Encoding: gzip, deflate'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Referer: '</span><span class="variable">$&#123;TheHost&#125;</span><span class="string">'/'</span><span class="variable">$&#123;ItRef&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Connection: keep-alive'</span> \</span><br><span class="line"></span><br><span class="line">-b <span class="string">''</span><span class="variable">$&#123;dirCookie&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-c <span class="string">''</span><span class="variable">$&#123;dirCookie&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;DATA&#125;</span> <span class="string">''</span><span class="variable">$&#123;URL&#125;</span><span class="string">''</span> |gzip -dc </span><br><span class="line"></span><br><span class="line">&#125; || &#123;</span><br><span class="line"></span><br><span class="line">curl -k --silent \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Host: '</span><span class="variable">$&#123;HostUrl&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept-Language: zh-CN,en-US;q=0.8,zh;q=0.5,en;q=0.3'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Accept-Encoding: gzip, deflate'</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Referer: '</span><span class="variable">$&#123;TheHost&#125;</span><span class="string">'/'</span><span class="variable">$&#123;ItRef&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-H <span class="string">'Connection: keep-alive'</span> \</span><br><span class="line"></span><br><span class="line">-b <span class="string">''</span><span class="variable">$&#123;dirCookie&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line">-c <span class="string">''</span><span class="variable">$&#123;dirCookie&#125;</span><span class="string">''</span> \</span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;DATA&#125;</span> <span class="string">''</span><span class="variable">$&#123;URL&#125;</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">uMessages</span></span>()&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ReceiveBox=<span class="string">''</span><span class="variable">$&#123;1:-action=viewmailbox&amp;box=1&amp;unread=yes&#125;</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">[[ -z <span class="string">"<span class="variable">$(echo "$(Request ''$&#123;TheHost&#125;'/usercp.php' '-X GET' 'index.php')</span>"</span> |grep <span class="string">'messages.php'</span> |grep <span class="string">'embedded'</span>)<span class="string">" ]] &amp;&amp; export Unread='0' || export Unread='1'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ "</span><span class="variable">$&#123;Unread&#125;</span><span class="string">" -eq '1' ] &amp;&amp; ReadIt="</span>$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$(Request ''$&#123;TheHost&#125;'/messages.php?'$&#123;ReceiveBox&#125;'' '-X GET' 'messages.php')</span>"</span> |grep -A1 <span class="string">'unreadpm'</span> |grep <span class="string">'messages.php?action=viewmessage'</span>)<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ "</span><span class="variable">$&#123;Unread&#125;</span><span class="string">" -eq '1' ] &amp;&amp; [ -n "</span><span class="variable">$&#123;ReadIt&#125;</span><span class="string">" ] &amp;&amp; [ -n "</span>$(<span class="built_in">which</span> mailx)<span class="string">" ] &amp;&amp; TheMessage="</span>$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$(echo "$&#123;ReadIt&#125;" |awk -F '"' '&#123;print $2&#125;')</span>"</span> |head -n 1)<span class="string">" &amp;&amp; echo "</span>$(Request <span class="string">''</span><span class="variable">$&#123;TheHost&#125;</span><span class="string">'/'</span><span class="variable">$&#123;TheMessage&#125;</span><span class="string">''</span> <span class="string">'-X GET'</span> <span class="string">'messages.php'</span>)<span class="string">" &gt;/dev/null</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ "</span><span class="variable">$&#123;Unread&#125;</span><span class="string">" -eq '1' ] &amp;&amp; [ -n "</span><span class="variable">$&#123;ReadIt&#125;</span><span class="string">" ] &amp;&amp; [ -n "</span>$(<span class="built_in">which</span> mailx)<span class="string">" ] &amp;&amp; [ -n "</span><span class="variable">$&#123;TheMessage&#125;</span><span class="string">" ] &amp;&amp; echo -e "</span>New Message\n\n<span class="string">"<span class="variable">$(echo "$&#123;ReadIt&#125;" |awk -F '&lt;|&gt;' '&#123;print $5&#125;' |head -n 1)</span>"</span>\n<span class="string">"<span class="variable">$&#123;TheHost&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;TheMessage&#125;</span>"</span>\n<span class="string">" |mailx -s "</span>Notice <span class="keyword">for</span> <span class="variable">$&#123;HostUrl&#125;</span><span class="string">" "</span><span class="variable">$&#123;MyeMail&#125;</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ "</span><span class="variable">$&#123;Unread&#125;</span><span class="string">" -eq '0' ] || uMessages 'action=viewmailbox&amp;box=-2&amp;unread=yes'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Request ''<span class="variable">$&#123;TheHost&#125;</span>'/takelogin.php' '-X POST -d '<span class="variable">$&#123;Account&#125;</span>'' &gt;/dev/null</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[[ -n "</span>$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$(Request ''$&#123;TheHost&#125;'/usercp.php' '-X GET' 'index.php')</span>"</span> |grep <span class="string">'logout.php'</span>)<span class="string">" ]] &amp;&amp; Login='1' || Login='0'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[[ "</span><span class="variable">$&#123;Login&#125;</span><span class="string">" -eq '1' ]] &amp;&amp; &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo -e "</span><span class="comment">#$&#123;HostUrl&#125;#\nLogin Success! " </span></span><br><span class="line"></span><br><span class="line">[ -n <span class="string">"<span class="variable">$&#123;MyeMail&#125;</span>"</span> ] &amp;&amp; uMessages;</span><br><span class="line"></span><br><span class="line">rm -rf <span class="string">"<span class="variable">$&#123;dirCookie&#125;</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">&#125; || &#123;</span><br><span class="line"></span><br><span class="line">[ -n <span class="string">"<span class="variable">$&#123;MyeMail&#125;</span>"</span> ] &amp;&amp; [ -n <span class="string">"<span class="variable">$(which mailx)</span>"</span> ] &amp;&amp; <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$(date "+%F [%T]")</span>\nLogin Fail! "</span> |mailx -s <span class="string">"Notice for <span class="variable">$&#123;HostUrl&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;MyeMail&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"#<span class="variable">$&#123;HostUrl&#125;</span>#\nLogin Fail! "</span> &amp;&amp; rm -rf <span class="string">"<span class="variable">$&#123;dirCookie&#125;</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Pages 自定义域名正式支持 HTTPS</title>
      <link href="/2018/05/03/93/"/>
      <url>/2018/05/03/93/</url>
      
        <content type="html"><![CDATA[<p>来自 GitHub 的官方公告 <a href="https://blog.github.com/2018-05-01-github-pages-custom-domains-https/" target="_blank" rel="noopener">Custom domains on GitHub Pages gain support for HTTPS</a>，从 5 月 1 日开始，托管在 GitHub Pages 上面的网站，自定义域名也可以使用 HTTPS 了，之前只有 github.io 的三级域名支持 HTTPS。</p><a id="more"></a><hr><p>公告介绍了配置方法，在 Pages 项目仓库的设置中，先删掉以前绑定的自定义域名，然后重新添加域名来激活证书的颁发程序，再勾选 Enforce HTTPS。公告称证书颁发时间是一个小时内，我在配置后有很长时间博客都是处于证书错误阶段，证书显示来自 <code>*.github.com</code> ,所以实际证书颁发可能需要几个小时。</p><p>和 Coding Pages 相比，GitHub 的配置不够人性化。Coding 的配置中有证书颁发进度，有效期等提示，并且 Coding 早在去年 7 月就增加了支持自定义域名 HTTPS。但是 Github 优势在于其快速的全球 CDN，强大的防御能力。毕竟 Github 抗过全球最大峰值流量的 DDOS ，感觉稳定性应该是最好的。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Hexo </tag>
            
            <tag> GitHub Pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绅士站整理</title>
      <link href="/2018/05/01/92/"/>
      <url>/2018/05/01/92/</url>
      
        <content type="html"><![CDATA[<p>有些被认证了或者服务器在欧美，需自备富强工具访问。</p><a id="more"></a><hr><p><strong>种子</strong></p><p>1 . NYAA：全球最大的亚洲动漫站，分表站和里站，表站正经向，里站绅士向。</p><ul><li><a href="https://nyaa.si/" target="_blank" rel="noopener">表站</a></li><li><a href="https://sukebei.nyaa.si/" target="_blank" rel="noopener">里站</a></li></ul><p>2 . AniRena：最新动漫和种子</p><ul><li><a href="https://www.anirena.com/" target="_blank" rel="noopener">AniRena</a></li></ul><p>3 . Tokyo Toshokan：东京图书馆，专注日本资源</p><ul><li><a href="https://www.tokyotosho.info/" target="_blank" rel="noopener">Tokyo Toshokan</a></li></ul><p>4 . Mteam：玩 PT 的应该都知道，馒头的特色</p><ul><li><a href="https://tp.m-team.cc/" target="_blank" rel="noopener">Mteam</a></li></ul><hr><p><strong>本子</strong></p><p>1 . E站：里站有表站搜不到的萝莉和重口</p><ul><li><a href="https://e-hentai.org/" target="_blank" rel="noopener">表站</a></li><li><a href="https://exhentai.org/" target="_blank" rel="noopener">里站</a></li></ul><p>2 . 南+：曾经叫北+、魂+</p><ul><li><a href="https://www.south-plus.net/" target="_blank" rel="noopener">南+</a></li></ul><hr><p><strong>图站</strong></p><p>1 . P站：打开R18，就是一个新天地</p><ul><li><a href="https://www.pixiv.net/" target="_blank" rel="noopener">pixiv</a></li></ul><p>2 . K站：有了K站，再也不用担心找不到壁纸啦</p><ul><li><a href="http://konachan.com/" target="_blank" rel="noopener">konachan</a></li></ul><p>3 . Multi-service image search：一个图片搜索站</p><ul><li><a href="http://iqdb.org/" target="_blank" rel="noopener">Multi-service image search</a></li></ul><p>4 . Sankaku Complex：chan是二次元，idol是三次元</p><ul><li><a href="https://www.sankakucomplex.com/" target="_blank" rel="noopener">Sankaku Complex</a></li><li><a href="https://chan.sankakucomplex.com/" target="_blank" rel="noopener">chan</a></li><li><a href="https://idol.sankakucomplex.com/" target="_blank" rel="noopener">idol</a></li></ul><p>5 . nijie：需要注册，感觉是想要做成一个只有R18的Pixiv的样子</p><ul><li><a href="http://nijie.info/" target="_blank" rel="noopener">nijie</a></li></ul><p>6 . 桃色虹画像：没什么好说的，满天坠的小黄图</p><ul><li><a href="http://momoniji.com/" target="_blank" rel="noopener">桃色虹画像</a></li></ul><p>7 . 绝对领域：擦边向三次元福利</p><ul><li><a href="http://www.jdlingyu.fun/" target="_blank" rel="noopener">绝对领域</a></li></ul><hr><p><strong>博客</strong></p><p>1 . 琉璃神社</p><ul><li><a href="https://www.llss.pw/wp/" target="_blank" rel="noopener">琉璃神社</a></li><li><a href="https://www.llss.pw/" target="_blank" rel="noopener">llss</a></li><li><a href="https://www.hacg.wiki/" target="_blank" rel="noopener">hacg</a></li></ul><p>2 . 绅士仓库：右边友情链接的一堆网站才是重点</p><ul><li><a href="https://cangku.in/" target="_blank" rel="noopener">绅士仓库</a></li></ul><p>3 . 灵梦御所</p><ul><li><a href="https://blog.reimu.net/" target="_blank" rel="noopener">灵梦御所</a></li></ul><p>4 . 猫之仓库</p><ul><li><a href="https://www.catacg.com/" target="_blank" rel="noopener">猫の仓库</a></li></ul><p>5 . MyGalgame</p><ul><li><a href="https://www.mygalgame.com/" target="_blank" rel="noopener">MyGalgame</a></li></ul><p>6 . hentai4daily：体验不怎么样，很多链接是网赚网盘，其实这个站有的其他站也能找到</p><ul><li><a href="http://hentai4daily.com/" target="_blank" rel="noopener">hentai4daily</a></li></ul><hr><p><strong>论坛</strong></p><p>1 . Mikocon - 2DJGAME ：mikocon 是国际站，2djgame 是中文站，两个坛子资源一样的</p><ul><li><a href="http://bbs.mikocon.com/forum.php" target="_blank" rel="noopener">mikocon</a></li><li><a href="https://bbs4.2djgame.net/home/forum.php" target="_blank" rel="noopener">2djgame</a></li></ul><p>2 . ZodGame：找 I 社作品的好去处</p><ul><li><a href="https://www.zodgame.us/" target="_blank" rel="noopener">ZodGame</a></li></ul><p>3 . 绯月Galgame：2DFan 附属资源站</p><ul><li><a href="http://bbs.2dkf.com/" target="_blank" rel="noopener">绯月Galgame</a></li></ul><p>4 . HongFire：歪果仁开发了不少工具和模组</p><ul><li><a href="http://www.hongfire.com/forum/" target="_blank" rel="noopener">HongFire</a></li></ul><p>5 . 灵梦广场：灵梦御所附属论坛</p><ul><li><a href="https://acg.is/" target="_blank" rel="noopener">灵梦广场</a></li></ul><hr><p><strong>攻略/补丁</strong></p><p>1 . 2DFan：galgame 介绍、补丁、攻略</p><ul><li><a href="https://www.2dfan.com/" target="_blank" rel="noopener">2DFan</a></li></ul><p>2 . 誠也の部屋</p><ul><li><a href="http://seiya-saiga.com/" target="_blank" rel="noopener">誠也の部屋</a></li></ul><hr><p><strong>在线视频</strong></p><p>1 . FC2 Video：名站，无论是三次元还是二次元都有不少很棒的视频</p><ul><li><a href="https://video.fc2.com/en/" target="_blank" rel="noopener">FC2 Video</a></li></ul><p>2 . xvideos：全球最大的 xxx 视频站，东西方三次元和二次元的内容都有</p><ul><li><a href="http://www.xvideos.com/" target="_blank" rel="noopener">xvideos</a></li></ul><p>3 . Pronhub：类型和 xvideos 一样，甚至有很多重复内容</p><ul><li><a href="https://www.pornhub.com/" target="_blank" rel="noopener">Pronhub</a></li></ul><p>4 . vimeo：原以为vimeo是个很正经的网站，不过一搜MMD好像不少R18的样子</p><ul><li><a href="https://vimeo.com/" target="_blank" rel="noopener">vimeo</a></li></ul><hr><p>指路人：<a href="https://acg.is/d/47" target="_blank" rel="noopener">https://acg.is/d/47</a><br>在原文基础上有所增减。</p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acg </tag>
            
            <tag> galgame </tag>
            
            <tag> hgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg 常用命令</title>
      <link href="/2018/04/25/91/"/>
      <url>/2018/04/25/91/</url>
      
        <content type="html"><![CDATA[<p><strong>ffmepg是个神器，因此写一下自己平时使用过程中经常用到的命令</strong></p><a id="more"></a><hr><p>1.剪切视频</p><p>ffmpeg -ss xx:xx:xx -i URL\inputfile_name.format -vcodec copy -acodec copy -t xx:xx:xx outputfile_name.format</p><p>||-ss 开始时间 xx:xx:xx ；-t 持续时间 xx:xx:xx 时间可以具体到帧数，但是你要自己看清楚；format 常见有mp4\ts\mov\flv\f4v\avi||</p><p>eg：ffmpeg -ss 00:00:07.800 -i E:\test.ts -vcodec copy -acodec copy -t 00:00:19.640 test_new.ts</p><hr><p>2.加黑边<br>1、ffmpeg –i URL\inputfile_name.format –vcodec Codec_Type –s 1280<em>720 –an –f Codec_Type outputfile_name.format<br>||Codec_Type 常见有 h264\x264\f4v\Xvid；–s 强制分辨率,一般都是1280</em>720或是1920*1080 ||<br>2、-vf pad=1920:1080:0:140 w,h,x,y</p><p>eg1:ffmpeg -i F:\2_new.ts – vcodec h264 – s 1920*1080 – an –f h264 2_newget.ts<br>eg2:ffmpeg -i F:\01test.264 -vf pad=1920:1080:0:140 F:\01test2.264</p><hr><p>3.分离视频音频流<br>ffmpeg -i URL\input_file.format -vcodec copy -an output_file.video_format　　 //分离视频流<br>ffmpeg -i URL\input_file.format -acodec copy -vn output_file.audio_format　　 //分离音频流</p><p>eg:ffmpeg -i M:\test.ts -acodec copy -vn output_file.ac3</p><hr><p>4.指定音频转换码率<br>ffmpeg -i URL\input_file.format -acodec copy -ab bitrats -vn output_file.audio_format</p><p>eg:ffmpeg -i F:\test\test_file.flv -acodec aac -ab 127.55k -vn test_audio.m4a</p><p><em>-ab 127.55k输出是128kb/s,不知道为什么，需要进一步研究</em></p><hr><p>5.ts/flv/f4v/mp4无损互转<br>ffmpeg -i URL\input_file.format -vcodec copy -acodec copy URL\output_file.format<br>ffmpeg -i URL\input_file.format -c copy -bsf h264_mp4toannexb URL\output_file.format<br>ffmpeg -i URL\input_file.ts -c copy -bsf:a aac_adtstoasc URL\output_file.mp4</p><p>eg:ffmpeg -i F:\test.f4v -vcodec copy -acodec copy S05EP01.mp4<br>eg:ffmpeg -i F:\ls\P01.flv -c copy -bsf h264_mp4toannexb F:\ls2\P01.ts</p><hr><p>6.合并音频视频<br>ffmpeg -i URL\input_video_file.format -i URL\input_audio_file.format -vcodec copy -acodec copy output_file.format</p><hr><p>7.下载m3u8文件对应的视频<br>ffmpeg -i m3u8_links -acodec copy -vcodec copy -f mp4 output.mp4<br>ffmpeg -i m3u8_links -c copy -bsf:a aac_adtstoasc output.mp4</p><p>eg:ffmpeg -i D:\Downloads\test.ts -c copy -bsf:a aac_adtstoasc D:\Downloads\test_new.mp4</p><hr><p>8.导出序列图片<br>ffmpeg -i URL\input_video_file.format URL\example.%d.jpg<br>Ffmpeg –i F:\test\test.mp4 –r 25 –f image2 F:\test\jpg\image-%3d.jpg<br>eg:ffmpeg -i F:\test\test.mp4 F:\test\jpg\example.%d.jpg</p><hr><p>9.切黑边</p><p>ffmpeg -i F:\test\38.mp4 -vf “crop=1920:800:0:140” -b 6000k F:\38.mp4</p><hr><p>10.合并分段，输出单文件<br>Win系统：<br>ffmpeg -f concat -i E:\test\list.txt -c copy output.mp4<br>Linux系统：<br>ffmpeg -f concat -i <strong>list.txt</strong> -c copy output.mp4 （注：此时list要在运行ffmpg的，目录里）</p><p>ffmpeg -ss 00:00:00 -i</p><hr><p>Links:<br>1.Video codec<br><a href="https://en.wikipedia.org/wiki/Video_codec" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Video_codec</a><br>2.x264<br><a href="https://en.wikipedia.org/wiki/X264" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/X264</a></p><hr><p>via:<a href="https://www.web-dl.cc/?page_id=141" target="_blank" rel="noopener">https://www.web-dl.cc/?page_id=141</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paypal 链接-预核准付款/币种转换/汇率调整/美区/港区/国区注册等</title>
      <link href="/2018/04/25/90/"/>
      <url>/2018/04/25/90/</url>
      
        <content type="html"><![CDATA[<p>再也不怕找不到各种被 Payapl 隐藏的按钮了!</p><a id="more"></a><p><strong>注册:</strong></p><ul><li><a href="https://www.paypal.com/us/webapps/mpp/account-selection" target="_blank" rel="noopener">美区 Paypal</a></li><li><a href="https://www.paypal.com/hk/webapps/mpp/account-selection" target="_blank" rel="noopener">港区 Paypal</a></li><li><a href="https://www.paypal.com/c2/webapps/mpp/account-selection" target="_blank" rel="noopener">国区 Paypal</a></li></ul><p><strong>功能:</strong></p><ul><li>预核准付款:</li></ul><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_manage-paylist" target="_blank" rel="noopener">https://www.paypal.com/cgi-bin/webscr?cmd=_manage-paylist</a></p><ul><li>转账给朋友:</li></ul><p><a href="https://www.paypal.com/myaccount/transfer/fx/fees" target="_blank" rel="noopener">https://www.paypal.com/myaccount/transfer/fx/fees</a></p><ul><li>管理货币余额:</li></ul><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_profile-currencies" target="_blank" rel="noopener">https://www.paypal.com/cgi-bin/webscr?cmd=_profile-currencies</a></p><ul><li>调整汇率转换方式(兑换选项):</li></ul><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_profile-merchant-pull-funding" target="_blank" rel="noopener">https://www.paypal.com/cgi-bin/webscr?cmd=_profile-merchant-pull-funding</a></p><ul><li>查看账户限制:</li></ul><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_show-limits" target="_blank" rel="noopener">https://www.paypal.com/cgi-bin/webscr?cmd=_show-limits</a></p><ul><li>查看交易历史</li></ul><p><a href="https://history.paypal.com/cgi-bin/webscr?cmd=_history-details-from-hub" target="_blank" rel="noopener">https://history.paypal.com/cgi-bin/webscr?cmd=_history-details-from-hub</a></p><ul><li>查看冻结款项</li></ul><p><a href="https://history.paypal.com/cgi-bin/webscr?cmd=_history-release-cycle" target="_blank" rel="noopener">https://history.paypal.com/cgi-bin/webscr?cmd=_history-release-cycle</a></p><ul><li>货币转换计算器</li></ul><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_currency-calculator" target="_blank" rel="noopener">https://www.paypal.com/cgi-bin/webscr?cmd=_currency-calculator</a></p><ul><li>致电客户服务</li></ul><p><a href="https://www.paypal.com/smarthelp/contact-us" target="_blank" rel="noopener">https://www.paypal.com/smarthelp/contact-us</a></p><hr><p>via:<a href="https://moeclub.org/2017/10/28/452/?v=140" target="_blank" rel="noopener">https://moeclub.org/2017/10/28/452/?v=140</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Paypal </tag>
            
            <tag> 预核准付款 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索 bilibili 隐藏视频的方法</title>
      <link href="/2018/04/20/89/"/>
      <url>/2018/04/20/89/</url>
      
        <content type="html"><![CDATA[<p>这里说的隐藏视频是指： B 站的站内搜索结果中隐藏的视频。</p><p>例如 <a href="https://www.bilibili.com/video/av5486725/" target="_blank" rel="noopener">av5486725</a> ，这个高清版的 《角逐超高空》就在 B 站的搜索结果中被隐藏了。</p><a id="more"></a><p><img src="https://i.loli.net/2018/04/20/5ad9ea4e35890.jpg" alt="B 站搜索"></p><p>后来发现谷歌的搜索结果会有 B 站的视频，于是尝试谷歌的视频搜索，第一个搜索结果就是被隐藏的视频。</p><p><img src="https://i.loli.net/2018/04/20/5ad9eb5547711.jpg" alt="谷歌搜索"></p><p>这个方法用其他影片也可以得到验证。</p><hr><p>由此可以得知，B 站出于某些原因在搜索结果中隐藏了视频，而谷歌爬取了 B 站后，没有对搜索结果做出隐藏处理。</p><p>那么，如果用国内的搜索引擎呢？</p><ul><li>搜狗</li></ul><p>搜狗视频 搜索</p><p><a href="https://imgchr.com/i/CKInYQ" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKInYQ.jpg" alt="搜狗视频"></a></p><p>搜狗网址 搜索：通过指定网址搜索</p><p><a href="https://imgchr.com/i/CKImFg" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKImFg.jpg" alt="搜狗网址"></a></p><ul><li>百度</li></ul><p>百度视频 搜索</p><p><a href="https://imgchr.com/i/CKIVw8" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKIVw8.jpg" alt="百度视频.jpg"></a></p><p>百度网址 搜索</p><p><a href="https://imgchr.com/i/CKIZTS" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKIZTS.jpg" alt="百度网址.jpg"></a></p><p>360影视 搜索</p><p><a href="https://imgchr.com/i/CKIkOP" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKIkOP.jpg" alt="360影视.jpg"></a></p><p>360网址 搜索</p><p><a href="https://imgchr.com/i/CKIEef" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/04/20/CKIEef.jpg" alt="360网址.jpg"></a></p><hr><p>国内各大搜索引擎的视频搜索来源都没有 B 站。而在网址搜索中有 B 站，并且能和谷歌一样搜出被隐藏的视频。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
            <tag> B站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公共图床收集和对比</title>
      <link href="/2018/04/14/88/"/>
      <url>/2018/04/14/88/</url>
      
        <content type="html"><![CDATA[<p>收集了一些公共图床，并进行功能上的对比。</p><p>对比项说明：</p><ul><li>注册帐号：上传图片是否需要先注册帐号</li><li>HTTPS：图片外链是否支持 HTTPS</li><li>PNG 格式：是否支持上传 PNG 格式的图片</li><li>图片大小上限：上传图片的最大体积</li><li>强制压缩：图片是否会被网站压缩</li><li>自定义缩略图：是否支持超过三种尺寸的缩略图</li><li>国内平均响应：使用 ipip 的国内 ping 得出结果，作为图床速度的参考</li></ul><a id="more"></a><p>谷歌表格：<a href="https://docs.google.com/spreadsheets/d/19mRufenjbzFcCPPnqxBG1I_Iip9zIyFnz56Z7A9Lf1Y/edit?usp=sharing" target="_blank" rel="noopener">图床收集</a></p><p>公共图床</p><p><img src="https://i.loli.net/2018/04/14/5ad18eea702b1.jpg" alt="公共图床.jpg"></p><p>非常规：利用非图床网站实现的图片外链</p><p><img src="https://i.loli.net/2018/04/14/5ad18f8cc8e42.jpg" alt="非常规图床.jpg"></p><p>不推荐：服务不稳定，网站或图片外链无法访问的图床</p><p><img src="https://i.loli.net/2018/04/14/5ad18f8cc3c20.jpg" alt="不推荐.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ss-panel 魔改版搭建踩坑记</title>
      <link href="/2018/04/09/87/"/>
      <url>/2018/04/09/87/</url>
      
        <content type="html"><![CDATA[<p>版本和环境：</p><ul><li>Debian 8</li><li>ss-panel v4</li><li>lnmp 1.4</li></ul><p>ss-panel v4 魔改版改动不大，可直接套用 sspanel v3 魔改版的教程。详细的搭建过程见参考资料，本文主要记录各种教程没提到的问题和解决方法。</p><a id="more"></a><hr><h2 id="网站报错-ERROR-500"><a href="#网站报错-ERROR-500" class="headerlink" title="网站报错 ERROR 500"></a>网站报错 ERROR 500</h2><p>起因是PHP基于 <code>open_basedir</code> 设置，来限制 PHP 程序跨目录访问的安全策略，其使用 <a href="https://secure.php.net/manual/zh/configuration.file.per-user.php" target="_blank" rel="noopener">.user.ini</a> 文件和 <code>nginx</code> 来配合（作用和 .htaccess 文件相同，这个是基于 Apache httpd 服务器）。</p><blockquote><p><code>lnmp1.4</code> 一键安装对其配置是存在于 <code>/usr/local/nginx/conf/fastcgi.conf</code> 文件 <code>fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</code>，个人感觉这个设计有点别扭，这个配置对所有站点都写死了不灵活。</p></blockquote><p>对于详细错误的解释：由于我们在站点配置文件（<code>/usr/local/nginx/conf/vhost/{WEB_SITE}.conf</code>），网站根目录配置 <code>root /home/wwwroot/{WEB_SITE_NAME};</code> 这一行进行修改（修改成了 <code>root /home/wwwroot/{WEB_SITE_NAME}\public;</code> ），因此 <code>open_basedir=$document_root/...</code> 中 <code>$document_root</code> 指的是网站的 <code>public</code> 目录，而非 <code>/home/wwwroot/{WEB_SITE_NAME}</code>，在读取 <code>bootstrap.php</code> 文件（而该文件正好位于 <code>/home/wwwroot/{WEB_SITE_NAME}</code> 目录下，在 <code>public</code> 目录上一层）时出错，受跨目录访问安全限制。</p><p>主要有两种解决方案：</p><ol><li><p>直接注释掉 <code>fastcgi.conf</code> 文件中的 <code>fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</code> 这一行，一棒子打死了目录访问安全策略</p></li><li><p>在 <code>fastcgi.conf</code> 文件中，修改 <code>fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</code> ，以 <code>test.com</code> 为例（此域名为添加vhost时输入的域名），修改内容如下：（这样做的坏处时每次添加vhost时都需要手动添加⊙﹏⊙）</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/nginx/conf/fastcgi.conf</span><br><span class="line">fastcgi_param PHP_ADMIN_VALUE <span class="string">"open_basedir=/home/wwwroot/test.com/:/tmp/:/proc/"</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="setuptools-版本过低"><a href="#setuptools-版本过低" class="headerlink" title="setuptools 版本过低"></a>setuptools 版本过低</h2><p>搭建后端 shadowsocks-manyuser ，安装 python 依赖时报 setuptools 版本过低的错误。</p><p>因为 Debian 的 pip 软件包太老了，用 python 官方提供的方法安装 setuptools 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/ez_setup.py -O - | python</span><br></pre></td></tr></table></figure><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://lala.im/88.html" target="_blank" rel="noopener">详细安装ss-panel-v3魔改版前端+后端教程</a></li><li><a href="https://github.com/iMeiji/shadowsocks_install/wiki/%E6%90%AD%E5%BB%BA-sspanel-v3-%E9%AD%94%E6%94%B9%E7%89%88%E8%AE%B0%E5%BD%95" target="_blank" rel="noopener">搭建 sspanel v3 魔改版记录</a></li><li><a href="http://smallcheck.net/2017/06/09/lnmp-ss-more/#%E8%AE%BF%E9%97%AE%E5%89%8D%E7%AB%AF%E7%BD%91%E7%AB%99-ss-panel-v3-mod-%E7%9B%B4%E6%8E%A5%E6%8A%A5%E9%94%99ERROR-500" target="_blank" rel="noopener">lnmp &amp; ss的那些事</a></li><li><a href="https://pypi.python.org/pypi/setuptools/18.5" target="_blank" rel="noopener">setuptools 18.5</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
            <tag> ss-panel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 检测 IP 端口连接是否正常</title>
      <link href="/2018/04/01/86/"/>
      <url>/2018/04/01/86/</url>
      
        <content type="html"><![CDATA[<p>使用 socket 库检测端口连接</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding:utf8</span></span><br><span class="line"><span class="comment">#author: linuxhub.org</span></span><br><span class="line"><span class="comment">#Python检测IP端口连接是否正常</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_open</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">              s= socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">              <span class="keyword">try</span>:</span><br><span class="line">                            s.connect((ip,int(port)))</span><br><span class="line">                            s.shutdown(<span class="number">2</span>)</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">              <span class="keyword">except</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: </span><br><span class="line"> </span><br><span class="line">            host = <span class="string">'192.168.0.202'</span></span><br><span class="line">            port = <span class="string">'6379'</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> is_open(host, port):</span><br><span class="line">                            <span class="keyword">print</span> <span class="string">"OK"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                            <span class="keyword">print</span> <span class="string">"NO"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频压制教程资源合集</title>
      <link href="/2018/03/31/85/"/>
      <url>/2018/03/31/85/</url>
      
        <content type="html"><![CDATA[<p>曾经出于兴趣，自学压制。到处搜罗教程，糟粕和精华都读了不少。学习过程中经常刚爬出一个坑，又撞上一堵墙。如今初入门槛，整理一份目前网络上优质的视频压制教程资源合集，供各位同好学习，免走弯路。</p><a id="more"></a><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>下载网址：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EufFxeGzbxRGkQlKqs0b9ZQBTLHSWmgOyYO-rvbKg_ZWbQ?e=RxO2Rs" target="_blank" rel="noopener">OneDrive</a></p><p>推荐教程：</p><ul><li>VCB-Studio 教程</li><li>x264视频压制教程 综合稳定版</li><li>小白哔哩哔哩免二压完全压制手册</li><li>压制入门教程(未完成 11_30更新)</li></ul><p>供参考的教程或说明:</p><ul><li>AVS全面学习</li><li>x264参数说明</li><li>压制教程 by LittlePox</li><li>MaskTools入门教程</li><li>x264_options_analysis_08</li></ul><p>新手入门，建议学习 VCB-Studio 教程即可，其他教程可作为辅助资料。</p><hr><h2 id="相关论坛和群组"><a href="#相关论坛和群组" class="headerlink" title="相关论坛和群组"></a>相关论坛和群组</h2><ul><li><a href="https://www.nmm-hd.org/newbbs/index.php" target="_blank" rel="noopener">NMM-HD</a></li><li><a href="https://tieba.baidu.com/f?kw=megui" target="_blank" rel="noopener">Megui 吧</a></li><li><a href="https://tieba.baidu.com/f?kw=dwing" target="_blank" rel="noopener">Dwing 吧</a></li><li><a href="http://42.96.168.211:8088/" target="_blank" rel="noopener">小丸之家</a></li><li>小丸工具箱交流群: 234289875</li></ul><hr><h2 id="工具和资料网站"><a href="#工具和资料网站" class="headerlink" title="工具和资料网站"></a>工具和资料网站</h2><ul><li><a href="https://www.nmm-hd.org/doc/" target="_blank" rel="noopener">NMM DOC</a>：NMM-HD 论坛建立的资料库</li><li><a href="https://www.videohelp.com/software" target="_blank" rel="noopener">VideoHelp</a>：视频工具软件库</li><li><a href="http://avisynth.nl/index.php/Main_Page" target="_blank" rel="noopener">AviSynth</a>：AviSynth 官网</li></ul>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频压制 </tag>
            
            <tag> megui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建自己的 Telegram RSS 机器人</title>
      <link href="/2018/03/31/84/"/>
      <url>/2018/03/31/84/</url>
      
        <content type="html"><![CDATA[<h2 id="创建机器人"><a href="#创建机器人" class="headerlink" title="创建机器人"></a>创建机器人</h2><p>在 Telegram 与机器人 <a href="https://telegram.me/BotFather" target="_blank" rel="noopener">BotFather</a> 对话，创建一个机器人，可获取到对应的 HTTP API。</p><a id="more"></a><h2 id="部署服务端"><a href="#部署服务端" class="headerlink" title="部署服务端"></a>部署服务端</h2><p>Rss 机器人服务端使用的是 <a href="https://github.com/iovxw/rssbot" target="_blank" rel="noopener">iovxw/rssbot</a> 这个项目。</p><p>从 <a href="https://github.com/iovxw/rssbot/releases" target="_blank" rel="noopener">releases</a> 下载预编译的程序, Linux 版本为 <em>musl</em> 静态链接, 无需其他依赖。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rssbot DATAFILE TELEGRAM-BOT-TOKEN</span><br></pre></td></tr></table></figure><p><code>DATAFILE</code> 为数据库保存路径(其实就是一个 json 文件, 不需要手动创建), <code>TELEGRAM-BOT-TOKEN</code> （即申请的机器人 HTTP API）</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rssbot data.json 12345:djslcisdkfljg</span><br></pre></td></tr></table></figure></p><p>如果要放到后台运行，可以用 <code>nohup</code> 。</p><h2 id="编辑机器人"><a href="#编辑机器人" class="headerlink" title="编辑机器人"></a>编辑机器人</h2><p>与 <a href="https://telegram.me/BotFather" target="_blank" rel="noopener">BotFather</a> 进行对话可以修改机器人名字、关于等信息。</p><p>例如修改  Commands：选择 Edit Bot，Edit Commands，输入你的指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rss       - 显示当前订阅的 RSS 列表，加 raw 参数显示链接</span><br><span class="line">sub       - 订阅一个 RSS: /sub http://example.com/feed.xml</span><br><span class="line">unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml</span><br><span class="line">unsubthis - 使用此命令回复想要退订的 RSS 消息即可退订, 不支持 Channel</span><br><span class="line">export    - 导出为 OPML</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Telegram </tag>
            
            <tag> rss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinMTR 显IP版</title>
      <link href="/2018/03/19/83/"/>
      <url>/2018/03/19/83/</url>
      
        <content type="html"><![CDATA[<p>站长朋友都很熟悉的工具，不多介绍了。此版是根据oott123提供的中国特别版修改而来，原版只能发7次包，这里改为无限制，并加入纯真IP库。</p><p>注：需要 .NET Framework支持。</p><a id="more"></a><p><img src="https://www.opdev.me/wp-content/uploads/2016/10/winmtr.png#shadow" alt=""></p><ul><li>Hostname：到目的服务器要经过的每个主机IP或名称</li><li>Nr：经过节点的数量；以上图百度为例子：一共要经过10个节点，其中第一个是出口的路由器</li><li>Loss%：ping 数据包回复失败的百分比；藉此判断，那个节点（线路）出现故障，是服务器所在机房还是国际路由干路</li><li>Sent：已传送的数据包数量</li><li>Recv：成功接收的数据包数量</li><li>Best：回应时间的最小值</li><li>Avrg：平均回应时间</li><li>Worst：回应时间的最大值</li><li>Last：最后一个数据包的回应时间</li></ul><p>百度云下载：<a href="http://pan.baidu.com/s/1hr4aJEs" target="_blank" rel="noopener">http://pan.baidu.com/s/1hr4aJEs</a></p><hr><p>via:<a href="https://www.opdev.me/archives/winmtr-with-ip.html" target="_blank" rel="noopener">https://www.opdev.me/archives/winmtr-with-ip.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎</title>
      <link href="/2018/03/17/82/"/>
      <url>/2018/03/17/82/</url>
      
        <content type="html"><![CDATA[<p><a href="http://pt.bfdz.ink/" target="_blank" rel="noopener">http://pt.bfdz.ink/</a></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> torrent </tag>
            
            <tag> 种子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scene Pre&#39;s 搜索站列表</title>
      <link href="/2018/03/16/81/"/>
      <url>/2018/03/16/81/</url>
      
        <content type="html"><![CDATA[<p>目前可用的网站：</p><a id="more"></a><p><a href="https://predb.pw/p2p.php" target="_blank" rel="noopener">https://predb.pw/p2p.php</a><br><a href="https://layer13.net/" target="_blank" rel="noopener">https://layer13.net/</a><br><a href="http://pre.c-burns.co.uk/index.php" target="_blank" rel="noopener">http://pre.c-burns.co.uk/index.php</a><br><a href="https://predb.me/" target="_blank" rel="noopener">https://predb.me/</a><br><a href="https://predb.pw/" target="_blank" rel="noopener">https://predb.pw/</a><br><a href="http://m2v.ru/" target="_blank" rel="noopener">http://m2v.ru/</a><br><a href="https://www.srrdb.com/" target="_blank" rel="noopener">https://www.srrdb.com/</a><br><a href="https://predb.org/" target="_blank" rel="noopener">https://predb.org/</a><br><a href="https://www.prescene.tk/" target="_blank" rel="noopener">https://www.prescene.tk/</a><br><a href="http://trace.corrupt-net.org/live.php" target="_blank" rel="noopener">http://trace.corrupt-net.org/live.php</a></p><hr><p>这些网站可以当作最新 0day 资源的搜索引擎，用于了解各大 0day 站的最新资源发布情况，聚合搜索各站种子。</p><hr><p>pre 即某小组成员把制作好的资源上传到 topsite 后（首先上传到小组内部目录），把资源转移到大家都可以下载的目录，这时候脚本也会自动在该 TS 的 IRC 上发布该 release 的相关信息。这个过程叫 “preing” 而这段时间既是所谓的 pretime，此后这一个 release 状态变成 pre‘d（如果不出错，出错的话会被 nuked。其他小组再发布一样的资源会被 dupe，除非某个小组制作的时更好的，这时候资源会标注 tag proper）。</p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scene </tag>
            
            <tag> pre </tag>
            
            <tag> pretime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度云高速上传的姿势</title>
      <link href="/2018/03/11/80/"/>
      <url>/2018/03/11/80/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前提是你有公网ip</p></blockquote><p>本来用bypy上传1.55G的文件到百度云，奈何上传速度实在太慢！！！</p><p>突然想起来：<strong>Python可以实现一个简单文件分享功能！</strong></p><p>命令很简单，只需要在要分享的目录下输入命令：</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">39555</span></span><br></pre></td></tr></table></figure><p>然后访问：<strong><a href="http://ip:39555" target="_blank" rel="noopener">http://ip:39555</a></strong> 就可以打开看到目录下的文件</p><p>复制 <a href="http://ip:39555/91zp.zip" target="_blank" rel="noopener">http://ip:39555/91zp.zip</a> 到百度云离线下载去了</p><p><img src="https://i.loli.net/2018/03/08/5aa0c7baacb51.png" alt=""><br><img src="https://i.loli.net/2018/03/08/5aa0c4cc33438.png" alt=""></p><hr><p>via:<a href="http://www.hostloc.com/thread-433979-1-1.html" target="_blank" rel="noopener">http://www.hostloc.com/thread-433979-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度云如何高速下载详细教程</title>
      <link href="/2018/03/11/79/"/>
      <url>/2018/03/11/79/</url>
      
        <content type="html"><![CDATA[<p>目前，百度网盘加快了升级频率，并特意修改第三方接口，百度网盘疑似大规模封号，据说主要与用户大量使用第三方网盘下载工具PanDownload/双霖度盘下载器以及雷云等相关工具有关，在这里劝大家谨慎使用第三方网盘下载工具为好，避免封号而导致重要文件丢失，建议使用油猴脚本配合下载工具实现高速下载。</p><a id="more"></a><h4 id="一、需要工具："><a href="#一、需要工具：" class="headerlink" title="一、需要工具："></a>一、需要工具：</h4><p>1、Google浏览器或Google内核浏览器<br>推荐：百分浏览器（优点：支持flash、不提示插件不能安装）<br><a href="http://static.centbrowser.cn/installer_64/centbrowser_3.2.4.23_x64_portable.exe" target="_blank" rel="noopener">http://static.centbrowser.cn/installer_64/centbrowser_3.2.4.23_x64_portable.exe</a> </p><p>2、油猴脚本 Tampermonkey 九族云： <a href="https://cloud.zhulianjiuzu.com/Google/Tampermonkey_v4.5%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C%E6%94%AF%E6%8C%81%E5%BA%93.crx" target="_blank" rel="noopener">https://cloud.zhulianjiuzu.com/Google/Tampermonkey_v4.5脚本运行支持库.crx</a><br>360浏览器应用市场：<a href="https://download.se.360.cn/ext/Tampermonkey_4.5_dhdgffkkebhmkfjojejmpbldmpobfkfo.crx" target="_blank" rel="noopener">https://download.se.360.cn/ext/Tampermonkey_4.5_dhdgffkkebhmkfjojejmpbldmpobfkfo.crx</a> </p><p>3、百度网盘破解直接下载助手2018.03.08修复版<br><a href="https://greasyfork.org/zh-CN/scripts/38682" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/38682</a></p><p>注：如不显示下载助手按钮请更新油猴扩展版本！</p><p>2018/03/08</p><ul><li>改名为百度网盘高速下载助手；</li><li>增加获取单个文件直接查看高速下载链接 (任何文件非会员不限速下载)；</li><li>修复大文件/单个文件/多个文件/目录直接下载调用百度网盘客户端现象；</li><li>移除多余的代码；</li></ul><p><strong> 我的网盘内和分享链接页面内显示下载助手按钮；</strong><br><strong> 我的网盘内下载助手支持获取所有直接下载外链；</strong><br><strong> 大文件/单个文件/多个文件/目录直接下载，免调用百度网盘客户端；</strong><br><strong> 支持获取单个文件的直接高速下载链接(任何文件非会员不限速下载)!</strong><br><strong> 获取的单个文件直接高速下载链接支持IDM/迅雷挂机稳定全速下载！</strong></p><p><img src="https://i.loli.net/2018/02/21/5a8cb32abfa55.gif" alt=""></p><hr><p>via:<a href="https://www.wogaosuni.com/thread-375.htm" target="_blank" rel="noopener">https://www.wogaosuni.com/thread-375.htm</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rtorrent 的 XML-RPC 存在可利用漏洞</title>
      <link href="/2018/03/04/78/"/>
      <url>/2018/03/04/78/</url>
      
        <content type="html"><![CDATA[<p>国外网站 arstechnica 发表了一篇文章，称有黑客利用 rtorrent 的漏洞，在受害者服务器上安装挖矿工具，赚了3900美元。</p><p>这个漏洞和最近 uTorrent、Transmission 爆出的漏洞类似。rtorrent 使用了 XML-RPC 这个软件来实现 web-ui 服务，而使用 TCP sockets 方式配置的 RPC，不需要任何验证就可以执行 shell 命令。<br><a id="more"></a></p><p>这个漏洞比 uTorrent 和 Transmission 的更严重，因为不用像 uTorrent 那样必须和用户产生交互。</p><hr><p>XML-RPC 的配置有两种常见的方法: TCP sockets 和 UNIX sockets</p><p>1.</p><ul><li><p>TCP sockets：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">httpd.conf:  SCGIMount /RPC2 127.0.0.1:5000</span><br><span class="line">rtorrent.rc: scgi_port = localhost:5000</span><br></pre></td></tr></table></figure></li><li><p>TCP sockets 方式在 Nginx 的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location /RPC2 &#123;</span><br><span class="line">  scgi_pass   127.0.0.1:5000;</span><br><span class="line">  include     scgi_vars;</span><br><span class="line">  scgi_var    SCRIPT_NAME  /RPC2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>2.</p><ul><li><p>UNIX sockets:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scgi_local = /tmp/rpc.socket</span><br></pre></td></tr></table></figure></li><li><p>UNIX sockets 方式在 Nginx 的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /RPC2 &#123;</span><br><span class="line">    include scgi_params;</span><br><span class="line">    scgi_pass unix:///tmp/rpc.socket;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p>其实在很早以前 rtorrent 官网的配置说明中就不推荐使用 TCP sockets 的方法，在 rtorrent 的 wiki 和 archlinux 的 wiki 也都注明了漏洞的相关警告。</p><p>但是目前网上还有很多教程在配置 Nginx 时使用的是 TCP sockets。如果你是按照网络教程安装的 rtorrent ，可检查 Nginx 或其他web服务程序的配置文件，以及观察服务器 CPU 使用率是否异常。</p><p>如果你需要把 Nginx 的 RPC 配置改成 UNIX sockets 方式，可以参考这篇文章：<a href="https://blog.wangyan.org/bt-rtorrent-rutorrent/" target="_blank" rel="noopener">rTorrent + ruTorrent 安装和配置</a></p><p>还有一部分人可能用的是 github 上面的一键脚本 <a href="https://github.com/arakasi72/rtinst" target="_blank" rel="noopener">arakasi72/rtinst</a>，这个脚本默认使用 rutorrent 的 RPC Plugin 来和 rtorrent 通信，并且启用了 Nginx 的登录验证，目前不会受到此漏洞影响。</p><hr><p>参考资料：</p><ul><li><a href="https://arstechnica.com/information-technology/2018/03/hackers-exploiting-rtorrent-to-install-unix-coin-miner-have-netted-4k-so-far/" target="_blank" rel="noopener">Hackers exploiting rTorrent to install Unix coin miner have netted $4k so far</a></li><li><a href="https://github.com/Novik/ruTorrent/wiki/PluginRPC" target="_blank" rel="noopener">PluginRPC</a></li><li><a href="https://web.archive.org/web/20140218135229/http://libtorrent.rakshasa.no:80/wiki/RTorrentXMLRPCGuide" target="_blank" rel="noopener">Using XMLRPC with rtorrent</a></li><li><a href="https://github.com/rakshasa/rtorrent/wiki/RPC-Setup-XMLRPC" target="_blank" rel="noopener">RPC-Setup-XMLRPC - rtorrent wiki</a> </li><li><a href="https://wiki.archlinux.org/index.php/RTorrent/RuTorrent" target="_blank" rel="noopener">RuTorrent - archlinux wiki</a> </li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> rTorrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uTorrent 被禁后的解决方法</title>
      <link href="/2018/03/01/77/"/>
      <url>/2018/03/01/77/</url>
      
        <content type="html"><![CDATA[<p>uTorrent 最近被爆出漏洞后，PT站 AB 封禁了所有版本的 ut，PTP 、U2、 TTG 封禁了 3.x 版本的 ut。</p><p>目前关于替代软件的方案：</p><a id="more"></a><hr><blockquote><p>下面的内容转载自TTG站内论坛</p></blockquote><p>有大量种子需要保留、不希望有太高迁移成本</p><p>1、没有单种1t以上的情况，可以从ut3.x版本降级到ut2.2.1或更低版本</p><p>具体操作办法也相对简单，下载得到旧版ut后将主程序直接替换即可。相关任务、设置等均可继承。<br>低版本ut下载地址: <a href="http://www.oldversion.com/windows/utorrent/" target="_blank" rel="noopener">http://www.oldversion.com/windows/utorrent/</a></p><p>2、迁移至qb，适用单种1t以上的情况</p><p>qBittorrent 是开源软件，简洁易用无广告，而且跨平台 Linux, Mac OS X, Windows都能用。<br>选项-高级中可以关闭更新检测，不会像 UT 强制更新，而且跟 deluge 相同内核，性能强劲。</p><p>qBittorrent 我选择的是3.3.11，支持馒头 <img src="https://totheglory.im/pic/smilies/w00t.gif" alt=":w00t:"> 其他版本我没实验过，自行验证。<br>可以在sourceforge上下到这个版本，sourceforge 的可信度请自行考证。</p><p>qBittorrent 论坛有人写了个小工具，可以简单快速的将种子从 uTorrent 迁移到 qBittorrent 。<br>首先当然是暂停 uTorrent 中的所有种子，确认全停了之后，然后退出uTorrent，qB 也要关闭。</p><p>下载ut2gt.exe（地址在下面），然后打开CMD，先将程序拖到命令行窗口。<br>会自动填写路径 例：  C:\Users\你的用户名\Desktop\ut2gt.exe<br>然后一个空格，将 uTorrent 的 resume.dat 拖入窗口。<br>再接一个空格，将 qBittorrent 的 BT_backup 文件夹拖入窗口。<br>WIN10路径 C:\Users\你的用户名\AppData\Local\qBittorrent\BT_backup</p><p>例：C:\Users\你的用户名\Desktop\ut2gt.exe  D:\uTorrent\resume.dat  C:\Users\你的用户名\AppData\Local\qBittorrent\BT_backup<br>然后按下回车等就OK了，会自动备份一次 resume.dat ，不信任的也可以手动备份。</p><p>原帖地址  <a href="https://qbforums.shiki.hu/index.php?topic=3224.0" target="_blank" rel="noopener">Migrate from uTorrent to qBittorrent easily</a><br>A compiled version can be downloaded here: <a href="https://totheglory.im/192.121.166.244/ut2qt_20150911.7z" target="_blank" rel="noopener">192.121.166.244/ut2qt_20150911.7z</a>, so you don‘t have to install all the Ruby stuff yourself.<br>选择这个链接下载就行。</p><p>PS: qBittorrent 左侧的分类跟 UT 不同，是多次筛选！<br>只有状态 、分类、tracker 3项都选全部时才会显示全部的种子。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uTorrent </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 中设置和同步时间</title>
      <link href="/2018/02/26/76/"/>
      <url>/2018/02/26/76/</url>
      
        <content type="html"><![CDATA[<p>准确的系统时间是稳定服务的基础，本文介绍与时间相关的Linux命令，以及如何为自己的Linux服务器维护准确的时间。</p><a id="more"></a><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>一台Linux服务器有两个时间源，一个是硬件时间，即服务器硬件CMOS维护的时间，还有一个是软件时间，即操作系统维护的时间，前者通过hwclock命令来访问，后者则主要通过date命令来访问。</p><p>date是最常用的时间相关的命令，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 获取当前时间</span><br><span class="line">$ date</span><br><span class="line">Fri Jan 23 15:22:16 CST 2015</span><br><span class="line"></span><br><span class="line"># 以特定格式输出当前时间，格式字符串前以&quot;+&quot;开头，例如获得当前时间的epoch</span><br><span class="line">$ date +%s</span><br><span class="line">1421998051</span><br><span class="line"></span><br><span class="line"># 设置当前时间</span><br><span class="line">$ sudo date -s &quot;2015-01-22 00:00:00&quot;</span><br><span class="line">Thu Jan 22 00:00:00 CST 2015</span><br></pre></td></tr></table></figure><p>需要注意的是设置时间需要root的权限。</p><p>hwclock命令用于访问服务器的硬件CMOS时间，无论读取还是设置都需要root权限，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 获取系统硬件时间</span><br><span class="line">$ sudo hwclock</span><br><span class="line">Fri 23 Jan 2015 03:33:17 PM CST  -0.567492 seconds</span><br><span class="line"></span><br><span class="line"># 设置操作系统的软件时间，与系统硬件时间同步</span><br><span class="line">$ sudo hwclock -s</span><br><span class="line"></span><br><span class="line"># 设置系统硬件时间，与操作系统的软件时间同步</span><br><span class="line">$ sudo hwclock -w</span><br></pre></td></tr></table></figure><p>主机的硬件时间实际上是宿主机的操作系统时间。由于宿主机时间通过NTP服务做了时间同步，相对准确。如果发现云主机的操作系统时间不对，可以执行hwclock -s来校正时间。</p><h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><p>Linux操作系统维护的软件时间随着服务器的长时间运行会出现漂移，最终会越来越不准确。不准确的系统时间会对依赖时间的服务带来影响，例如数据库，认证等，因此需要维持一个相对准确的服务器时间。</p><p>目前，一般通过ntp服务来将本地时间和线上的时间服务保持同步，维护一个相对准确的系统时间。</p><p>CentOS下安装配置ntp服务的步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 安装ntp服务的软件包</span><br><span class="line">sudo yum install ntp</span><br><span class="line"></span><br><span class="line"># 将ntp服务设置为缺省启动</span><br><span class="line">sudo chkconfig ntp on</span><br><span class="line"></span><br><span class="line"># 修改启动参数，增加-g -x参数，允许ntp服务在系统时间误差较大时也能正常工作</span><br><span class="line">sudo vi /etc/sysconfig/ntpd</span><br><span class="line"></span><br><span class="line"># 启动ntp服务</span><br><span class="line">sudo service ntpd restart</span><br></pre></td></tr></table></figure><p>Ubuntu/Debian下安装配置ntp服务的步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装ntp服务的软件包</span><br><span class="line">sudo apt-get install ntp</span><br><span class="line"></span><br><span class="line"># 修改启动参数，增加-g -x参数，允许ntp服务在系统时间误差较大时也能正常工作</span><br><span class="line">sudo vi /etc/default/ntp</span><br><span class="line"></span><br><span class="line"># 启动ntp服务</span><br><span class="line">sudo service ntp restart</span><br></pre></td></tr></table></figure><p>ntp服务运行后，可以通过如下命令查看与上游时间服务器的同步情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">+dns.sjtu.edu.cn 15.179.156.248   3 u    8   64  335   24.860  6905.79 137.521</span><br><span class="line">*dns1.synet.edu. 202.118.1.46     2 u    2   64  377   37.229  6949.50  76.682</span><br><span class="line">+gus.buptnet.edu 202.112.31.197   3 u    1   64  377   24.884  6915.00  93.832</span><br><span class="line">+juniperberry.ca 193.79.237.14    2 u   65   64  377  341.343  6865.43 151.539</span><br></pre></td></tr></table></figure><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><p>时区也是一个比较重要的时间参数，设置正确的时区能为我们的工作提供方便，避免困扰。目前主机设置的时区都是中国标准时间(CST)，通过下面方式更改云主机的时区配置。</p><p>对于大部分Linux系统，各个时区设置文件放在/usr/share/zoneinfo/中，将/etc/localtime通过文件链接指向欲设置的时区配置文件即可。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将系统时区改为上海时间 (亦即CST时区)</span><br><span class="line">$ ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>以上就是Linux系统时间相关的一些基础知识。</p><hr><p>via:<a href="https://www.mtyun.com/library/all-about-time" target="_blank" rel="noopener">Linux中设置和同步时间</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 网络时间同步 </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Danted Socks5 一键安装脚本</title>
      <link href="/2018/02/24/75/"/>
      <url>/2018/02/24/75/</url>
      
        <content type="html"><![CDATA[<p>之前有发过DANTE的安装教程，但显得麻烦，为了方便telegram看老司机们开车，就去github找了个一键脚本，telegram的车再也不会错过了。</p><a id="more"></a><h2 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O install.sh</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install.sh  --port=端口 --user=自己设置用户名 --passwd=设置密码</span><br></pre></td></tr></table></figure><h2 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">成功后会出现：Dante Server Install Successfuly!</span><br></pre></td></tr></table></figure><p>最后，就可以到 TELEGRAM 里填上 IP,用户名和密码，愉快的享受吧！</p><p>上次教程地址：<a href="https://yhome.pw/58.html" target="_blank" rel="noopener">https://yhome.pw/58.html</a></p><hr><p>via:<a href="https://yhome.pw/107.html" target="_blank" rel="noopener">https://yhome.pw/107.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Danted </tag>
            
            <tag> Socks5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyTorrents  打包发布全站种子</title>
      <link href="/2018/02/24/74/"/>
      <url>/2018/02/24/74/</url>
      
        <content type="html"><![CDATA[<p>SkyTorrents 因为无法承担网站服务器费用而关站，站长已将全站种子打包发布在网络上，供大家下载。</p><p><a href="http://46.166.187.105:8080/" target="_blank" rel="noopener">http://46.166.187.105:8080/</a></p>]]></content>
      
      
      <categories>
          
          <category> BT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT </tag>
            
            <tag> torrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uTorrent 客户端受多个严重漏洞影响</title>
      <link href="/2018/02/24/73/"/>
      <url>/2018/02/24/73/</url>
      
        <content type="html"><![CDATA[<p><strong>谷歌 Project Zero 安全研究员 Tavis Ormandy 发现 uTorrent的 web 和桌面客户端受多个漏洞影响，可导致攻击者通过恶意软件感染受害者或者收集用户的下载历史数据。</strong></p><p>这些漏洞影响 uTorrent BitTorrent 客户端的 web 新版本 uTorrent Web，以及为多数人所知的 uTorrent 客户端 uTorrent Classic。<br><a id="more"></a></p><hr><h2 id="通过诱骗受害者访问恶意网站发动攻击"><a href="#通过诱骗受害者访问恶意网站发动攻击" class="headerlink" title="通过诱骗受害者访问恶意网站发动攻击"></a>通过诱骗受害者访问恶意网站发动攻击</h2><p>Ormandy 表示，这两个 uTorrent 客户端暴露了端口 10000 (uTorrent Classic) 和端口 19575 (uTorrent Web) 上的 RPC 服务器。</p><p>Ormandy 指出，攻击者能够将命令隐藏在与这个开放 RPC 服务器交互的网页中。攻击者只需诱骗易受攻击的 uTorrent 客户端上的用户访问一个恶意网页即可。</p><p>另外，uTorrent 客户端也易受 DNS 重新绑定攻击，即攻击者能将自己向 RPC 服务器的请求合法化。</p><h2 id="uTorrent-Web-遭受的影响最大"><a href="#uTorrent-Web-遭受的影响最大" class="headerlink" title="uTorrent  Web 遭受的影响最大"></a>uTorrent  Web 遭受的影响最大</h2><p>遭受这些缺陷影响最大的是 uTorrent Web。Ormandy 指出，攻击者能够：</p><ul><li>经由 uTorrent Web 服务器获取 RPC 服务器的“验证机密”以“完全控制 RPC 服务”。</li><li>将恶意软件下载到用户的计算机上。</li><li>更改默认的下载文件夹位置（例如更改为 /Startup 文件夹，这样攻击者下载的东西就会在下次启动时自动执行）。</li></ul><p>Ormandy 还表示能从 uTorrent Web 客户端上检索其它数据，不过由于他从一开始就完全攻陷了这个客户端，因此他并未开展进一步调查。</p><p>而 uTorrent Classic 客户端并未遭同样程度的暴露，Ormandy 仅能获取下载历史清单，并且能够选择从用户计算机中检索之前下载的文件，前提是这些文件还位于磁盘中。</p><p>Ormandy 为 uTorrent Web 和 uTorrent Classic 提供了演示页面，作为 PoC 成果。</p><h2 id="部分补丁已发布"><a href="#部分补丁已发布" class="headerlink" title="部分补丁已发布"></a>部分补丁已发布</h2><p>uTorrent 的所属公司 BitTorrent 公司已经为 uTorrent Classic 发布了 3.5.3 Beta 版本解决这些问题，稳定版本将在这几天内发布。uTorrent Web 也已经得到更新，修复后的版本是v0.12.0.502。</p><p>Ormandy 此前也曾在 BitTorrent 公司的其它应用中发现过问题。他曾在 Transmission 客户端中找到一个类似的 RPC 服务器和 DNS 重新绑定缺陷。</p><hr><p>via:<a href="https://www.anquanke.com/post/id/98643" target="_blank" rel="noopener">uTorrent客户端受多个严重漏洞影响</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uTorrent </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BT 种子添加有效 tracker 的方法</title>
      <link href="/2018/02/04/72/"/>
      <url>/2018/02/04/72/</url>
      
        <content type="html"><![CDATA[<p> 最近 rarbg 的种子无法正常下载，原因是种子 tracker 无法连接，并且使用代理也无法解决。因为 BT 种子会有很多其他网站转载，所以可以利用其他的有效 tracker 来连接上 BT 网络的做种者。</p><a id="more"></a><hr><h3 id="寻找-tracker"><a href="#寻找-tracker" class="headerlink" title="寻找 tracker"></a>寻找 tracker</h3><p>如果你搜索一下就可以发现，网络上已经有一些网站或博客会提供收集的 tracker。这里我们使用 github 上面一个收集 tracker 的项目：</p><p><a href="https://github.com/ngosang/trackerslist" target="_blank" rel="noopener">trackerslist</a></p><h3 id="添加-tracker"><a href="#添加-tracker" class="headerlink" title="添加 tracker"></a>添加 tracker</h3><p>复制 </p><p><a href="https://github.com/ngosang/trackerslist/blob/master/trackers_all.txt" target="_blank" rel="noopener">https://github.com/ngosang/trackerslist/blob/master/trackers_all.txt</a></p><p>里面的内容，添加到种子的 tracker 里面。</p><p>下载客户端以 utorrent 为例：</p><p>选择种子，右键，属性</p><p><img src="http://bbs1.people.com.cn/postImages/Y0/61/21/F5/59/1517753070937.jpg" alt=""></p><p>添加 tracker</p><p><img src="http://bbs1.people.com.cn/postImages/Y0/61/21/F7/2E/1517753071406.jpg" alt=""></p><p>成功连接上 BT 网络，开始正常下载</p><p><img src="http://bbs1.people.com.cn/postImages/Y0/61/22/19/D1/1517753080273.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> BT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 种子 </tag>
            
            <tag> tracker </tag>
            
            <tag> rarbg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 中批量替换文件名</title>
      <link href="/2018/01/15/71/"/>
      <url>/2018/01/15/71/</url>
      
        <content type="html"><![CDATA[<p>在 Linux 系统中修改文件名可以用 <code>mv</code> 命令，但是它只能对单个文件进行操作，如要要批量执行还要写 shell 脚本，用 <code>for</code> 语句迭代执行，不过 Linux 中另外一个命令支持批量替换文件名，它是 <code>rename</code>，<code>rename</code> 支持正则表达式匹配。需要注意的是，<code>rename</code> 命令在不同的 Linux 发行版语法格式不一样。</p><a id="more"></a><hr><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>在 Debian 或者 Ubuntu 环境下使用的语法是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="string">'s/stringx/stringy/'</span> files</span><br></pre></td></tr></table></figure><p>而在 CentOS 下或者 RedHat 下是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename stringx stringy files</span><br></pre></td></tr></table></figure><p>rename 的参数分为三部分：</p><ul><li>stringx ： 被替换字符串</li><li>stringy ：替换字符串</li><li>files ：匹配的文件列表</li></ul><h3 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h3><p>例如有如下文件，想把所有文件中的 <code>@</code> 符号去掉，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uodong_pic@2x.png</span><br><span class="line">eixin_pic@2x.png</span><br><span class="line">inkehu_pic@2x.png</span><br><span class="line">anting_pic-@2x.png</span><br><span class="line">huanfa_pic@2x.png</span><br></pre></td></tr></table></figure><p>CentOS这么写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename \@2x.png 2x.png *.png</span><br></pre></td></tr></table></figure><p>Ubuntu这么写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="string">'s/\@2x/2x/'</span> *.png</span><br></pre></td></tr></table></figure><hr><p>via:<a href="https://foofish.net/linux-rename.html" target="_blank" rel="noopener">Linux中批量替换文件名</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> rename </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 年十大热门 BT 站</title>
      <link href="/2018/01/10/70/"/>
      <url>/2018/01/10/70/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章的信息已经过时，最新榜单请查看<a href="https://www.bfdz.ink/2019/01/08/120/">2019 年十大热门 BT 站</a></p></blockquote><p>根据去年的统计， “海盗湾” 仍然稳居领先地位。由于最近一些 BT 站已经关闭，今年的榜单也出现了一些新的网站，比如 Idope 和 Zooqle。</p><p>去年的亚军 Extratorrent 已经关闭。并且 TorrentProject 、isohunt.to 也消失无踪。</p><p>去年的最高新人 Torrentz2.eu 是 Torrentz 的仿站。目前该站所有的种子下载链接都被删除，索引页面的列表也被删除。</p><p>尽管如此，我们仍然决定将该站纳入榜单，因为它仍然有可能通过网站找到种子的哈希。由于 Torrentz2 的未来是不确定的，我们增加了一个额外的网站（10.1）作为补偿。</p><p>最后，提一下俄罗斯最大的 BT 站 <a href="https://rutracker.org/" target="_blank" rel="noopener">RuTracker.org</a>。该站的流量巨大，足以入选榜单，但因为排行榜主要针对英语用户的网站，所以未收录此站。</p><p>以下是新年伊始访问量最大的 BT 站的榜单。该排行榜基于 Alexa 流量数据进行排名。</p><a id="more"></a><hr><h2 id="1、海盗湾"><a href="#1、海盗湾" class="headerlink" title="1、海盗湾"></a>1、海盗湾</h2><p>网址：<a href="http://thepiratebay.org/" target="_blank" rel="noopener">http://thepiratebay.org/</a></p><p>海盗湾号称 BT 界“种子之王”，是这个榜单里最古老的 BT 站。在互联网上，该站可谓臭名昭彰，同时其名声也远播海内外。</p><h2 id="2、RARBG"><a href="#2、RARBG" class="headerlink" title="2、RARBG"></a>2、RARBG</h2><p>网址：<a href="http://rarbg.to/" target="_blank" rel="noopener">http://rarbg.to/</a></p><p>RARBG 是一个保加利亚的 BT 站，成立于2008年。该站在新电影和电视剧方面更新速度较快。</p><h2 id="3、1337X"><a href="#3、1337X" class="headerlink" title="3、1337X"></a>3、1337X</h2><p>网址：<a href="http://1337x.to/" target="_blank" rel="noopener">http://1337x.to/</a></p><p>从去年开始，该站的流量大幅增加。</p><h2 id="4、Torrentz2"><a href="#4、Torrentz2" class="headerlink" title="4、Torrentz2"></a>4、Torrentz2</h2><p>网址：<a href="https://torrentz2.eu/" target="_blank" rel="noopener">https://torrentz2.eu/</a></p><p>Torrentz2 是 Torrentz.eu 的仿站，于2016年自愿关闭。在撰写本文时，该站不再提供任何外部 BT 站的链接，仅列出种子的哈希值。虽然有些浏览器插件可以恢复网站的功能，但该站的未来是不确定的。</p><h2 id="5、YTS-AG"><a href="#5、YTS-AG" class="headerlink" title="5、YTS.AG"></a>5、YTS.AG</h2><p>网址: <a href="http://yts.am/" target="_blank" rel="noopener">http://yts.am/</a></p><p>这个网站是原 YTS/YIFY 的非官方继任者。</p><h2 id="6、EZTV-AG"><a href="#6、EZTV-AG" class="headerlink" title="6、EZTV.AG"></a>6、EZTV.AG</h2><p>网址：<a href="http://eztv.ag/" target="_blank" rel="noopener">http://eztv.ag/</a></p><p>网站内容主要是英美剧资源。域名换了很多次，目前网站运营团队不知是不是原来的。</p><h2 id="7、Limetorrents"><a href="#7、Limetorrents" class="headerlink" title="7、Limetorrents"></a>7、Limetorrents</h2><p>网址：<a href="https://www.limetorrents.cc/" target="_blank" rel="noopener">https://www.limetorrents.cc/</a></p><p>Limetorrents 是一个建站时间超过五年的 BT 站。该站是一个种子搜索引擎，网站不存储种子，使用来自其他站的搜索结果和磁力链接。</p><h2 id="8、NYAA-SI"><a href="#8、NYAA-SI" class="headerlink" title="8、NYAA.SI"></a>8、NYAA.SI</h2><p>网址：<a href="https://nyaa.si/" target="_blank" rel="noopener">https://nyaa.si/</a></p><p>NYAA.si 是去年关闭的动漫站 NYAA 的重生后的网站。以前我们把动画类的网站排除在名单之外，现在我们决定收录更多类型的站点。</p><h2 id="9、TORRENTS-ME"><a href="#9、TORRENTS-ME" class="headerlink" title="9、TORRENTS.ME"></a>9、TORRENTS.ME</h2><p>网址：<a href="https://torrents.me/" target="_blank" rel="noopener">https://torrents.me/</a></p><p>Torrents.me 是今年新兴的 BT 站。该站是一个种子搜索引擎，可以搜索来自其他 BT 站的种子文件和磁力链接。</p><h2 id="10、ZOOQLE"><a href="#10、ZOOQLE" class="headerlink" title="10、ZOOQLE"></a>10、ZOOQLE</h2><p>网址：<a href="https://zooqle.com/" target="_blank" rel="noopener">https://zooqle.com/</a></p><p>Zooqle 拥有近三百万个种子，该站今年首次进入前十名。</p><h2 id="10-1、IDOPE"><a href="#10-1、IDOPE" class="headerlink" title="10.1、IDOPE"></a>10.1、IDOPE</h2><p>网址：<a href="https://idope.se/" target="_blank" rel="noopener">https://idope.se/</a></p><p>该站创建于 2016 年，相对来说是个新站。该站种子数在过去一年里稳步增长，目前网站流量、种子数与 ZOOQLE 差不多。</p><hr><p>via:<a href="https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2018-180107/" target="_blank" rel="noopener">Top 10 Most Popular Torrent Sites of 2018</a></p>]]></content>
      
      
      <categories>
          
          <category> BT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT </tag>
            
            <tag> torrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嘉年华</title>
      <link href="/2017/12/21/69/"/>
      <url>/2017/12/21/69/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2017/12/21/5a3bd222ef7f4.jpg" alt="嘉年华"></p><a id="more"></a><hr><p>◎译　　名　AngelsWearWhite<br>◎片　　名　嘉年华<br>◎年　　代　2017<br>◎产　　地　中国大陆/法国<br>◎类　　别　剧情<br>◎语　　言　汉语普通话<br>◎上映日期　2017-09-07(威尼斯电影节)/2017-11-24(中国大陆)<br>◎IMDb评分  7.4/10 from 297 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt7205208/" target="_blank" rel="noopener">http://www.imdb.com/title/tt7205208/</a><br>◎豆瓣评分　8.5/10 from 45,846 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/27019527/" target="_blank" rel="noopener">https://movie.douban.com/subject/27019527/</a><br>◎片　　长　107分钟<br>◎导　　演　文晏 Vivian Qu<br>◎主　　演　文淇 Qi Wen<br>　　　　　　周美君 Meijun Zhou<br>　　　　　　史可 Ke Shi<br>　　　　　　耿乐 Le Geng<br>　　　　　　刘威葳 Vieven Liu<br>　　　　　　彭静 Jing Peng<br>　　　　　　王栎鑫 Yuexin Wang<br>　　　　　　李梦男 Mengnan Li<br>　　　　　　陈竹昇 Chu-sheng Chen</p><p>◎简　　介</p><p>　　深夜，小学生小文（周美君 饰）和同学被一个中年男人带至酒店，这一切被在酒店打黑工的未成年少女小米（文淇 饰）拍下。事件逐渐演化成一个全城议论的性侵女童案，权力在握的犯罪嫌疑人浮出水面，受害者家中也风暴渐起。<br>　　女律师郝洁（史可 饰）对案件展开调查，逐渐发现突破点在小米身上 。而掌握关键证据的小米，却将它作为在这个海滨城市生存下来的救命稻草。等待她的，是她意想不到的黑暗。<br>　　女律师的努力最终让小米做出了新的选择，也获得了警方的初步认可。但在真相即将大白、正义即将伸张的的时刻，嫌疑人却继续展现他超乎寻常的能量，案件再生波折。小文和小米，是否还可以继续拥有她们的嘉年华？</p><hr><ul><li>在线观看（优酷）: <a href="http://v.youku.com/v_show/id_XMzIyODQ3NjE3Mg==.html?spm=a2hww.20027244.m_250239.5~5~5~5!2~5~5~A" target="_blank" rel="noopener">嘉年华</a></li><li>下载（Hyperay）: <a href="https://www.hyperay.org/details.php?id=14261" target="_blank" rel="noopener">Angels Wear White 2017 WEB-DL 1080p H264 AAC 2.0-PureTV</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嘉年华 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 监听 IPv6 地址的配置方法</title>
      <link href="/2017/12/03/68/"/>
      <url>/2017/12/03/68/</url>
      
        <content type="html"><![CDATA[<p>先在终端下输入指令 <code>nginx -V</code> ，看看输出结果有没有–with-ipv6，没有的话就需要重新编译带有ipv6支持的nginx了。</p><p>编译nginx就不在这里说了，下面讲一下正确地配置nginx让其同时监听IPv4和IPv6的端口（包括http协议的80和https协议的443端口），同时介绍一下只监听IPv6和特定IPv6地址的方法。</p><a id="more"></a><hr><h3 id="同时监听IPv4和IPv6地址"><a href="#同时监听IPv4和IPv6地址" class="headerlink" title="同时监听IPv4和IPv6地址"></a>同时监听IPv4和IPv6地址</h3><p>从 Nginx 1.3 的某个版本起，默认 ipv6only 是打开的。虽然 Linux 系统默认是监听 IPv6 的某个端口会同时监听对应的 IPv4 的端口，但是 FreeBSD 是默认分开 IPv6和 IPv4 的。所以为了一致性的考虑（新版本 Nginx 必须推荐这样做），请使用分开监听的方法。</p><p>编辑网站的配置文件 <code>/etc/nginx/conf.d/default.conf</code>，将 <code>server</code> 段的 <code>listen</code> 语句改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen 80;</span><br><span class="line">listen [::]:80;</span><br></pre></td></tr></table></figure><p>如果开启了 ssl 和 http2 ，可以改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl http2;</span><br><span class="line">listen [::]:443 ssl http2;</span><br></pre></td></tr></table></figure><hr><h3 id="只监听-IPv6-地址，不监听-IPv4-地址"><a href="#只监听-IPv6-地址，不监听-IPv4-地址" class="headerlink" title="只监听 IPv6 地址，不监听 IPv4 地址"></a>只监听 IPv6 地址，不监听 IPv4 地址</h3><p>没问题，将 listen 写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen [::]:80 default ipv6only=on;</span><br></pre></td></tr></table></figure><hr><h3 id="监听一个指定的IPv6地址"><a href="#监听一个指定的IPv6地址" class="headerlink" title="监听一个指定的IPv6地址"></a>监听一个指定的IPv6地址</h3><p>和 IPv4 指定地址一样，就在 listen 里写上完整的地址就 OK 了！以一个 IPv6 地址为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen [2607:f0d0:1002:51::4]:80;</span><br></pre></td></tr></table></figure><hr><p>修改完成后，必须重启nginx服务（reload是不行的）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><hr><p>参考资料：<a href="https://www.librehat.com/the-right-way-to-setup-nginx-monitor-ipv6-address-port/" target="_blank" rel="noopener">Nginx监听IPv6地址端口的正确操作方法</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu/Debian 配置 IPv6 地址</title>
      <link href="/2017/12/03/67/"/>
      <url>/2017/12/03/67/</url>
      
        <content type="html"><![CDATA[<h2 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h2><p>使用命令 <code>ifconfig</code> 查看网卡中 ipv6 地址的配置，一般看到如下结果，ipv6 是无效的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qlen 1000</span><br><span class="line">        inet6 fe80::601:1cff:fe11:5b01/64 scope link </span><br><span class="line">           valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>ping 谷歌搜索的 ipv6 地址来测试服务器能否连接 ipv6 公网。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping6 ipv6.google.com</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h2 id="配置-IPv6"><a href="#配置-IPv6" class="headerlink" title="配置 IPv6"></a>配置 IPv6</h2><p>修改服务器的网络配置文件来写入 IPV6 地址。</p><p>Ubuntu/Debian下，编辑 <code>/etc/network/interfaces</code> 文件，将下面的内容添加到文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iface eth0 inet6 static</span><br><span class="line">        address YOUR_PUBLIC_IPV6_ADDRESS</span><br><span class="line">        netmask 64</span><br><span class="line">        gateway YOUR_PUBLIC_PIV6_GATEWAY</span><br><span class="line">        autoconf 0</span><br><span class="line">        dns-nameservers 2001:4860:4860::8844 2001:4860:4860::8888 209.244.0.3</span><br></pre></td></tr></table></figure><p><strong>注意：上面的 <code>YOUR_PUBLIC_IPV6_ADDRESS</code> 最后没有 <code>/64</code></strong></p><p>重启服务器后即生效。</p><hr><p>参考资料：<a href="https://www.polarxiong.com/archives/DigitalOcean-VPS%E6%89%93%E5%BC%80IPv6-%E5%8F%8A%E8%A7%A3%E5%86%B3IPv6%E5%9C%B0%E5%9D%80Ping%E4%B8%8D%E9%80%9A%E9%97%AE%E9%A2%98.html" target="_blank" rel="noopener">DigitalOcean VPS打开IPv6，及解决IPv6地址Ping不通问题</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ipv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盒子剩余空间检测脚本</title>
      <link href="/2017/11/21/66/"/>
      <url>/2017/11/21/66/</url>
      
        <content type="html"><![CDATA[<p>这个脚本主要用来检测盒子（seedbox）或者 linux 服务器的剩余空间。当已使用空间大于等于指定值时，会禁止指定目录的写入权限，并发送告警邮件。删掉种子或删除文件后，已使用空间小于指定值时，相关目录会自动恢复写入权限。</p><a id="more"></a><hr><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>limit 硬盘空间的使用百分比。92 指硬盘使用空间大于等于 92% 时，指定目录会被禁止写入，并发送告警邮件。</li><li>dir 被禁止写入的目录，需要修改成自己盒子的下载目录。</li><li>v_mail 收告警邮件的邮箱，需要修改成自己的邮箱。</li><li>log 日志的存放位置。</li><li>sleep 脚本循环执行的时间，30 指每过 30s 执行一次。</li></ul><p>需要在盒子上提前搭建好邮件发送服务器，脚本才能自动发邮件。相关教程：<a href="https://www.bfdz.ink/2017/11/21/65/">Linux 搭建 SMTP 发送邮件服务器</a></p><p>当使用空间超过限制的空间使用百分比后，只会使盒子无法添加新种子，正在下载的种子还是会继续下载。如果想让正在下载的种子也停止下载，需要修改脚本中 <code>chmod 555 $dir</code> 和 <code>chmod 775 $dir</code> ，分别改成 <code>chmod -R 555 $dir</code> 和 <code>chmod -R 775 $dir</code> 。</p><p>盒子发出的邮件一般会被 QQ 邮箱、163 邮箱等扔到垃圾箱，所以要把盒子的邮件地址添加到收件邮箱的白名单。</p><p><img src="https://public.lightpic.info/image/D5F3_5A1446A00.jpg" alt="告警邮件"></p><hr><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>运行脚本</strong></p><p>在 root 用户环境下，使用命令 <code>nohup</code> 命令运行脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup /home/bfdz/rtorrent/check_size.sh &amp;</span><br></pre></td></tr></table></figure><p><strong>结束脚本</strong></p><p>使用命令 <code>ps aux | grep check</code> 找出进程，然后 <code>kill</code>  进程 ID。</p><p><img src="https://public.lightpic.info/image/EE26_5A1442C60.jpg" alt=""></p><hr><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>Gist: <a href="https://gist.github.com/BFDZ/e3bb50b5f54e22761260c0ef4f977ef0" target="_blank" rel="noopener">check_size.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">limit</span>=92</span><br><span class="line">dir=/home/bfdz/rtorrent/downloads/</span><br><span class="line">v_mail=123@qq.com</span><br><span class="line"><span class="built_in">log</span>=/var/<span class="built_in">log</span>/check_size.log</span><br><span class="line"></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">while</span> [ 1 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   v_size=$(df / | grep / | awk <span class="string">'&#123;print $5&#125;'</span> | cut -d <span class="string">'%'</span> -f 1)</span><br><span class="line">   <span class="keyword">if</span> [ <span class="variable">$v_size</span> -ge <span class="variable">$limit</span> ] &amp;&amp; [ <span class="variable">$flag</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">      chmod 555 <span class="variable">$dir</span></span><br><span class="line">      <span class="built_in">echo</span> Lock_the_directory:<span class="variable">$dir</span> &gt;&gt; <span class="variable">$log</span> &amp;&amp; date &gt;&gt; <span class="variable">$log</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"盒子的使用空间超过 <span class="variable">$limit</span>%,目录 <span class="variable">$dir</span> 已禁止写入."</span> | mail -s <span class="string">"=?UTF-8?B?`echo 盒子剩余空间不足 | base64`?="</span> <span class="variable">$v_mail</span></span><br><span class="line">      flag=1</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="keyword">if</span> [ <span class="variable">$v_size</span> -lt <span class="variable">$limit</span> ] &amp;&amp; [ <span class="variable">$flag</span> -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">      chmod 775 <span class="variable">$dir</span></span><br><span class="line">      flag=0</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   sleep 30</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> seedbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 搭建 SMTP 发送邮件服务器</title>
      <link href="/2017/11/21/65/"/>
      <url>/2017/11/21/65/</url>
      
        <content type="html"><![CDATA[<p>该例子使用的是 debian 系统作为 SMTP 邮件服务器</p><p>其他的Linux发行版配置基本一样，只是命令会有些不同。</p><p>需要有一个自己的域名，作为邮箱的域名。</p><a id="more"></a><h3 id="安装-postfix"><a href="#安装-postfix" class="headerlink" title="安装 postfix"></a>安装 postfix</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install postfix</span><br></pre></td></tr></table></figure><h3 id="修改-postfix-配置文件"><a href="#修改-postfix-配置文件" class="headerlink" title="修改 postfix 配置文件"></a>修改 postfix 配置文件</h3><p>文件位置：<code>/etc/postfix/main.cf</code><br>修改以下参数,将 xxx.com 换成你的域名，如果参数前面有#注释，记得去掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myhostname = mail.xxx.com</span><br><span class="line">mydomain = xxx.com</span><br><span class="line">myorigin = $mydomain</span><br><span class="line">inet_interfaces = all</span><br><span class="line">inet_protocols = ipv4</span><br></pre></td></tr></table></figure><p>修改完成后运行 postifx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postfix start</span><br></pre></td></tr></table></figure><h3 id="设置域名DNS"><a href="#设置域名DNS" class="headerlink" title="设置域名DNS"></a>设置域名DNS</h3><p>添加一条 A 记录指向 mail.xxx.com</p><p>记录类型：A ， 主机记录：mail ，记录值：（127.x.x.x）填写你服务器IP</p><h3 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h3><p>使用 mail 组件进行发送邮件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install mailx</span><br></pre></td></tr></table></figure><p>发送邮件到 QQ 或 163 邮箱测试效果，将(<a href="mailto:ewomail@163.com" target="_blank" rel="noopener">ewomail@163.com</a>)改成你要发送的邮件地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;content&quot; | mail -s &quot;title&quot; ewomail@163.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>适合联通用户的捷克 vps</title>
      <link href="/2017/11/19/64/"/>
      <url>/2017/11/19/64/</url>
      
        <content type="html"><![CDATA[<p>最近一个月联通到美国西部的线路，晚上时不时会炸。于是考虑找个欧洲线路的 vps。</p><p>发现 Arubacloud 的捷克 vps 非常适合国内联通用户，最低月付仅 1 欧元，性价比也高。</p><a id="more"></a><p>Aruba S.p.A 是意大利主机商，成立于1994年，历史悠久。Aruba Cloud 是 Aruba S.p.A 专门面向为欧洲市场的品牌。ArubaCloud 2011 年开始提供云主机服务，在欧洲拥有 8 个数据中心，其中捷克数据中心（DC3/CZ1）到国内联通的线路质量不错。</p><p>官网：<a href="https://www.arubacloud.com/" target="_blank" rel="noopener">https://www.arubacloud.com/</a></p><p>最低 VPS 配置:<br>虚拟化架构：VMware<br>CPU：1 Core Intel® Xeon® E5-2650L v4<br>内存：1 GB<br>空间：20 GB SSD<br>流量：2 TB / 月<br>IPv4：1<br>€1/月</p><p><strong>在控制面板上创建 vps 时需要注意，只有意大利数据中心(DC1/IT1)和捷克数据中心(DC3/CZ1)是 €1/月</strong></p><hr><h2 id="SuperBench-sh-一键测试"><a href="#SuperBench-sh-一键测试" class="headerlink" title="SuperBench.sh 一键测试"></a>SuperBench.sh 一键测试</h2><p>可以看到 vps 带宽是G口</p><p><img src="https://public.lightpic.info/image/65DD_5A106C670.jpg" alt=""></p><p><strong>测试时已经安装了锐速，到国内的速度是加速后的结果</strong></p><h2 id="路由跟踪"><a href="#路由跟踪" class="headerlink" title="路由跟踪"></a>路由跟踪</h2><p>这里只看联通的路由，电信和移动都不怎么样，就不贴图了。</p><p>测试ip：81.2.236.64</p><p>去程</p><p><img src="https://public.lightpic.info/image/7736_5A106F770.jpg" alt=""></p><p>回程</p><p><img src="https://public.lightpic.info/image/CBA9_5A106F770.jpg" alt=""></p><p><strong>回程图中的出现美国应该是 ip 位置数据错误，从 ping 值看，回程是原路返回的。</strong></p><h2 id="ping-测试"><a href="#ping-测试" class="headerlink" title="ping 测试"></a>ping 测试</h2><p><img src="https://public.lightpic.info/image/78EA_5A1072E60.jpg" alt=""></p><p>联通本地 ping</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ping 统计信息:</span><br><span class="line">数据包: 已发送 = 10，已接收 = 10，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">最短 = 278ms，最长 = 283ms，平均 = 279ms</span><br></pre></td></tr></table></figure><h2 id="油管速度"><a href="#油管速度" class="headerlink" title="油管速度"></a>油管速度</h2><p><img src="https://public.lightpic.info/image/BDA9_5A1075B80.jpg" alt=""></p><p>1080p 可以流畅观看，4k 看不了。</p><h2 id="本地测速"><a href="#本地测速" class="headerlink" title="本地测速"></a>本地测速</h2><p><img src="https://public.lightpic.info/image/1D03_5A10775D0.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> Arubacloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian添加开机启动项</title>
      <link href="/2017/11/15/63/"/>
      <url>/2017/11/15/63/</url>
      
        <content type="html"><![CDATA[<p>Linux系统设置开机启动有很多方法，网上也有许多详细教程。本文只关注用 <code>update-rc.d</code> 命令给 <code>Debian</code> 添加开机启动。</p><a id="more"></a><p>例如：将test.sh脚本添加到开机自启。</p><h2 id="1-将-test-sh-脚本放到-etc-init-d-目录下"><a href="#1-将-test-sh-脚本放到-etc-init-d-目录下" class="headerlink" title="1.将 test.sh 脚本放到 /etc/init.d/ 目录下"></a>1.将 test.sh 脚本放到 /etc/init.d/ 目录下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp test.sh /etc/init.d/  </span><br><span class="line"><span class="built_in">cd</span> /etc/init.d/  </span><br><span class="line">chmod +x  test.sh</span><br></pre></td></tr></table></figure><h2 id="2-设置开机自启"><a href="#2-设置开机自启" class="headerlink" title="2.设置开机自启"></a>2.设置开机自启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d test.sh defaults</span><br></pre></td></tr></table></figure><p>运行 <code>update-rc.d</code> 很可能会出现错误提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insserv: warning: script <span class="string">'test.sh'</span> missing LSB tags and overrides</span><br></pre></td></tr></table></figure><p>这是因为 <code>test.sh</code> 不符合 <code>debian</code> 开机自启文件的内容规范，<code>debian</code> 要求文件头部有启动信息。参考同目录下的 <code>/etc/init.d/skeleton</code> 文件头，把以下内容复制到 <code>test.sh</code> 再运行 <code>update-rc.d test.sh defaults</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:          test</span><br><span class="line"># Required-Start: $local_fs $remote_fs</span><br><span class="line"># Required-Stop: $local_fs $remote_fs</span><br><span class="line"># Should-Start: $network</span><br><span class="line"># Should-Stop: $network</span><br><span class="line"># Default-Start:        2 3 4 5</span><br><span class="line"># Default-Stop:         0 1 6</span><br><span class="line"># Short-Description: test</span><br><span class="line"># Description: test</span><br><span class="line">### END INIT INFO</span><br></pre></td></tr></table></figure><p>3.删除开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d -f test.sh remove</span><br></pre></td></tr></table></figure><hr><p>via:<a href="https://www.denpe.com/debian-autorun/" target="_blank" rel="noopener">用update-rc.d命令给Debian添加开机启动项</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开机启动 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMS 服务器的配置与使用</title>
      <link href="/2017/11/14/62/"/>
      <url>/2017/11/14/62/</url>
      
        <content type="html"><![CDATA[<h2 id="知识科普"><a href="#知识科普" class="headerlink" title="知识科普"></a>知识科普</h2><p>vlmcsd 是由 C 语言编写的一款 KMS 模拟器，它可以运行在几乎任何系统中，比如：Linux、Android、FreeBSD、Solaris、Minix、Mac OS、iOS、Windows。</p><a id="more"></a><h2 id="战前准备"><a href="#战前准备" class="headerlink" title="战前准备"></a>战前准备</h2><ul><li>一台 CentOS 7 64位的服务器（这里是因为我只有这个设备所以用这个为例子）</li><li>服务器需要放通 KMS 默认的 1688 激活端口</li><li>vlmcsd 源文件：<a href="https://github.com/Wind4/vlmcsd" target="_blank" rel="noopener">https://github.com/Wind4/vlmcsd</a></li><li>充满智慧的大脑  <img src="https://www.vtrois.com/wp-content/themes/Ravenclaw/images/smilies/razz.png" alt=":razz:"></li></ul><h2 id="战斗开始"><a href="#战斗开始" class="headerlink" title="战斗开始"></a>战斗开始</h2><p>1.首先根据使用的设备选择相应的程序，这里我使用的 CentOS 7 64位服务器，所以找到 <code>binaries\Linux\intel\glibc</code> 目录中的 <code>vlmcsd-x64-glibc</code>。</p><p>注意：这里的 x86 和 x64 一定要根据机器的配置来选择。</p><p><img src="https://www.vtrois.com/wp-content/uploads/kms-1.png" alt=""></p><p>2.将 <code>vlmcsd-x64-glibc</code> 上传到机器的 <code>/data</code> 目录下，并改名为 <code>vlmcsd</code> ，再使用下面命令给 <code>vlmcsd</code> 加执行权限，然后尝试执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod  u+x  vlmcsd</span><br><span class="line">./vlmcsd</span><br></pre></td></tr></table></figure><p>如果执行 <code>vlmcsd</code> 显示类似下面的结果，那么 <code>1688</code> 端口可能被占用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning:  [::]:1688:  Address already <span class="keyword">in</span>  use</span><br><span class="line">Warning:  0.0.0.0:1688:  Address already <span class="keyword">in</span>  use</span><br><span class="line">Fatal:  Could not  listen on any socket.</span><br></pre></td></tr></table></figure><p>3.使用 <code>ps</code> 命令来查看执行的进程，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps  aux|grep  vlmcsd</span><br></pre></td></tr></table></figure><p>如果显示类似下面的结果，即为正常运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root 16336  0.0  0.0 8624 120  ?        Ss 11:01 0:00  ./vlmcsd</span><br><span class="line">root 16390  0.0  0.0  112660 976  pts/0    R+ 11:03 0:00  grep  --color=auto vlmcsd</span><br></pre></td></tr></table></figure><p>4.将 <code>vlmcsd</code> 添加到开机启动并记录相关日志，使用到的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>  <span class="string">"/data/vlmcsd -l /var/log/vlmcsd.log &gt; /dev/null 2&gt;&amp;1"</span>  &gt;&gt;  /etc/rc.local  </span><br><span class="line">chmod  +x  /etc/rc.local</span><br></pre></td></tr></table></figure><p><em>注意：<code>/data/vlmcsd</code> 为 vlmcsd 的位置，<code>/var/log/vlmcsd.log</code> 为日志保存的位置。</em></p><p>5.至此 vlmcsd 已经搭建完成，重启服务器测试一下 vlmcsd 进程是否启动即可。</p><p>6.如果在 Windows 环境下可以使用客户端测试，在 <code>binaries\Windows\intel</code> 目录找到 <code>vlmcs-Windows-x64.exe</code> 文件，将其拖到 <code>CDM</code> 命令行中，并添加以下命令测试：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v  -l  1  kms.bfdz.ink</span><br></pre></td></tr></table></figure></p><p>注意：<code>-v</code> 是输出详细信息，<code>-l 1</code>表示发送 <code>Windows 10 Enterprise G</code> 的激活请求，<code>kms.bfdz.ink</code> 是我搭建好的 KMS 服务器绑定的网址。</p><p>如果返回类似下面内容，则表示 KMS 服务器搭建成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Request Parameters</span><br><span class="line">==================</span><br><span class="line"></span><br><span class="line">Protocol version                : 6.0</span><br><span class="line">Client is a virtual machine     : No</span><br><span class="line">Licensing status                : 2 (OOB grace)</span><br><span class="line">Remaining time (0 = forever)    : 43200 minutes</span><br><span class="line">Application ID                  : 55c92734-d682-4d71-983e-d6ec3f16059f (Windows)</span><br><span class="line">SKU ID (aka Activation ID)      : e0b2d383-d112-413f-8a80-97f373a5820c (Windows 10 Enterprise G)</span><br><span class="line">KMS ID (aka KMS counted ID)     : 7ba0bf23-d0f5-4072-91d9-d55af5a481b6 (Windows 10 China Government)</span><br><span class="line">Client machine ID               : b979c2cb-3a81-45fc-b38a-995556160dd7</span><br><span class="line">Previous client machine ID      : 00000000-0000-0000-0000-000000000000</span><br><span class="line">Client request timestamp (UTC)  : 2017-11-04 03:25:27</span><br><span class="line">Workstation name                : www.amazon.org</span><br><span class="line">N count policy (minimum clients): 25</span><br><span class="line"></span><br><span class="line">Connecting to :1688 ... successful</span><br><span class="line"></span><br><span class="line">Performing RPC <span class="built_in">bind</span> ...</span><br><span class="line">... NDR64 ... BTFN ... NDR32 ... successful</span><br><span class="line">Sending activation request (KMS V6) 1 of 1</span><br><span class="line"></span><br><span class="line">Response from KMS server</span><br><span class="line">========================</span><br><span class="line"></span><br><span class="line">Size of KMS Response            : 260 (0x104)</span><br><span class="line">Protocol version                : 6.0</span><br><span class="line">KMS host extended PID           : 05426-03858-014-927327-03-1068-9200.0000-3502016</span><br><span class="line">KMS host Hardware ID            : 3A1C049600B60076</span><br><span class="line">Client machine ID               : b979c2cb-3a81-45fc-b38a-995556160dd7</span><br><span class="line">Client request timestamp (UTC)  : 2017-11-04 03:25:27</span><br><span class="line">KMS host current active clients : 50</span><br><span class="line">Renewal interval policy         : 10080</span><br><span class="line">Activation interval policy      : 120</span><br></pre></td></tr></table></figure><p><img src="https://www.vtrois.com/wp-content/uploads/kms-6.png" alt=""></p><p>7.使用 KMS 服务器一键激活，使用管理员模式命令提示符（可以右击左下角徽标找到）执行下面的命令即可自动激活：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slmgr  /skms kms.bfdz.ink</span><br><span class="line">slmgr  /ato</span><br></pre></td></tr></table></figure></p><p>如果无法自动激活，需要首先到微软官网 <a href="https://technet.microsoft.com/en-us/library/jj612867.aspx" target="_blank" rel="noopener">KMS Client Setup Keys</a> 获取对应版本的 KEY，然后执行下面命令激活：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr  /skms kms.bfdz.ink</span><br><span class="line">slmgr  /ipk xxxxx-xxxxx-xxxxx-xxxxx</span><br><span class="line">slmgr  /ato</span><br></pre></td></tr></table></figure></p><p><em>注意：<code>xxxxx-xxxxx-xxxxx-xxxxx</code> 是在微软官网获取的 <code>KEY</code> ，如果微软官网没有找到要激活的版本，那么 KMS 服务器将无法激活该版本，如果提示 <code>0x80070005</code> 错误，那么是由于命令不是在 <code>管理员模式命令提示符</code> 下运行导致，<code>kms.bfdz.ink</code> 是我搭建好的 KMS 服务器绑定的网址。</em></p><p>如果不知道自己的系统是什么版本，可以使用以下命令查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic os get  caption</span><br></pre></td></tr></table></figure><p><img src="https://www.vtrois.com/wp-content/uploads/kms-8.png" alt=""></p><p>8.为了方便激活，我这边准备了一个一键激活的批处理工具，只要保存下面的代码为 <code>activate.bat</code>并以管理员身份运行即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">ver &gt; C:\ver.txt</span><br><span class="line">findstr <span class="string">"6."</span> C:\ver.txt &gt;nul</span><br><span class="line"><span class="keyword">if</span> %ERRORLEVEL% == 0 (</span><br><span class="line">    cscript /nologo %windir%/system32/slmgr.vbs -skms kms.vtrois.com:1688</span><br><span class="line">    sc query w32time | findstr RUNNING &gt;null</span><br><span class="line">    <span class="keyword">if</span> %ERRORLEVEL% == 0 ( net start w32time )</span><br><span class="line">    w32tm /config /syncfromflags:manual /manualpeerlist:<span class="string">"ntp.vtrois.com"</span></span><br><span class="line">    net stop w32time</span><br><span class="line">    net start w32time</span><br><span class="line">    <span class="keyword">for</span> /l %%i <span class="keyword">in</span> (1,1,10) <span class="keyword">do</span> (</span><br><span class="line">      w32tm /resync | findstr successfully &gt;null</span><br><span class="line">      <span class="keyword">if</span> %ERRORLEVEL% == 1 ( goto _break ) <span class="keyword">else</span> ( C:\Windows\system32\timeout.exe /t 1 /nobreak &gt;null )</span><br><span class="line">      cscript /nologo %windir%/system32/slmgr.vbs -ato</span><br><span class="line">      <span class="keyword">if</span> %ERRORLEVEL% == 0 ( goto _break )</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line">:_break</span><br><span class="line">del C:\ver.txt</span><br></pre></td></tr></table></figure><p><em>注意：这个批处理中有一个时间同步的功能，如果时间不同步，可能导致激活失败。</em></p><hr><p>作者：<a href="https://www.vtrois.com/" target="_blank" rel="noopener">Vtrois</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rutorrent 辅种技巧</title>
      <link href="/2017/10/31/61/"/>
      <url>/2017/10/31/61/</url>
      
        <content type="html"><![CDATA[<p>有时会碰到一些转载的种子和原种的文件夹名字不一样，这种情况会导致种子在下载时不会自动校验，所以辅种就会比较麻烦。之前以为这种情况在 rutorrent 中是无法辅种的，经过尝试，发现在 rutorrent 中也是可以的。</p><a id="more"></a><h2 id="添加种子"><a href="#添加种子" class="headerlink" title="添加种子"></a>添加种子</h2><p>添加种子时目录选做种文件的路径，勾选<code>不要添加 Torrent 的名称到目录</code>，这样被改过名的种子就不会去创建错误的目录。不要自动开始下载这一项如果勾选了，种子在添加后需要强制重新检查，如果没勾选，就会自动开始检查。</p><p><img src="https://public.lightpic.info/image/2534_59F869010.jpg" alt=""></p><h2 id="已添加的种子"><a href="#已添加的种子" class="headerlink" title="已添加的种子"></a>已添加的种子</h2><p>已添加的种子，右键选择<code>保存到...</code>。</p><p><img src="https://public.lightpic.info/image/84B9_59F86AC60.jpg" alt=""></p><p>选择做种文件的路径，勾选不要添加<code>不要添加 Torrent 的名称到目录</code>，然后强制重新检查。</p><p><img src="https://public.lightpic.info/image/6500_59F86AC60.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rutorrent </tag>
            
            <tag> 盒子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客添加评论系统</title>
      <link href="/2017/10/29/60/"/>
      <url>/2017/10/29/60/</url>
      
        <content type="html"><![CDATA[<p>自从多说停止运营以后，我尝试过使用 Disqus ，但因为 Disqus 影响网页加载速度而弃用。之后一段时间一直没找到称心的评论系统，索性关了评论。前几天遇到了名为  Valine 的评论系统，支持静态博客，看起来还不错。自己改了一下博客主题的代码，替换了原来的多说和 Disqus 。</p><a id="more"></a><hr><h2 id="部署-Valine"><a href="#部署-Valine" class="headerlink" title="部署 Valine"></a>部署 Valine</h2><p>Valine 的安装和使用可以参考这篇文章 <a href="https://panjunwen.com/diy-a-comment-system/" target="_blank" rel="noopener">Valine: 独立博客评论系统解决方案</a> 。</p><h2 id="替换代码"><a href="#替换代码" class="headerlink" title="替换代码"></a>替换代码</h2><p>主要是修改主题 landscape-plus 的这三个文件：</p><ul><li>\themes\landscape-plus_config.yml</li><li>\themes\landscape-plus\layout_partial\after-footer.ejs</li><li>\themes\landscape-plus\layout_partial\article.ejs</li></ul><p><code>_config.yml</code> 内添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#valine</span></span><br><span class="line"><span class="attr">valine_shortname:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>valine_shortname 在这里是个布尔值，用来控制评论的开关。</p><p>修改 <code>after-footer.ejs</code> ，删除下面的代码（第 4 至 32 行）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (config.duoshuo_shortname || theme.duoshuo_shortname)&#123; %&gt;</span><br><span class="line">&lt;!-- 多说公共js代码 start --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">"&lt;%= config.duoshuo_shortname || theme.duoshuo_shortname %&gt;"</span>&#125;;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">    ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">    ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]</span><br><span class="line">     || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">  &#125;)();</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 多说公共js代码 end --&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; else if (config.disqus_shortname || theme.disqus_shortname)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  var disqus_shortname = '&lt;%= config.disqus_shortname || theme.disqus_shortname %&gt;';</span></span><br><span class="line"><span class="regexp">  &lt;% if (page.permalink)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">  var disqus_url = '&lt;%= page.permalink %&gt;';</span></span><br><span class="line"><span class="regexp">  &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp">  (function()&#123;</span></span><br><span class="line"><span class="regexp">    var dsq = document.createElement('script');</span></span><br><span class="line"><span class="regexp">    dsq.type = 'text/</span>javascript<span class="string">';</span></span><br><span class="line"><span class="string">    dsq.async = true;</span></span><br><span class="line"><span class="string">    dsq.src = '</span><span class="comment">//' + disqus_shortname + '.disqus.com/&lt;% if (page.comments) &#123; %&gt;embed.js&lt;% &#125; else &#123; %&gt;count.js&lt;% &#125; %&gt;';</span></span><br><span class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(dsq);</span><br><span class="line">  &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>在原来的代码位置添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (config.valine_shortname || theme.valine_shortname)&#123; %&gt;</span><br><span class="line">&lt;!--载入js，在&lt;<span class="regexp">/body&gt;之前插入即可--&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!--Leancloud 操作库:--&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="/</span><span class="regexp">/cdn1.lncld.net/</span><span class="keyword">static</span>/js/<span class="number">3.0</span><span class="number">.4</span>/av-min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;!--Valine 的核心代码库--&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>/js/Valine.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        new Valine(&#123;</span></span><br><span class="line"><span class="string">            av: AV, </span></span><br><span class="line"><span class="string">            el: '.comment',</span></span><br><span class="line"><span class="string">            app_id: '',</span></span><br><span class="line"><span class="string">            app_key: '',</span></span><br><span class="line"><span class="string">            placeholder: 'ヾﾉ≧∀≦)o来啊，快活啊!',</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>将 Valine.min.js 放到 <code>\themes\landscape-plus\source\js</code> 文件夹内，此文件可以从我的博客下载 <a href="https://www.bfdz.ink/js/Valine.min.js">https://www.bfdz.ink/js/Valine.min.js</a></p><p><code>app_id</code> 和 <code>app_key</code> 分别填写你自己的 id 和 key。</p><p>修改 <code>article.ejs</code> ，删除下面的代码（第 32 至 36 行）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (post.comments &amp;&amp; (config.duoshuo_shortname || theme.duoshuo_shortname))&#123; %&gt;</span><br><span class="line">    &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#ds-thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;&lt;%= __('comments') %&gt;&lt;/a&gt;</span><br><span class="line">  &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (post.comments &amp;&amp; (config.disqus_shortname || theme.disqus_shortname))&#123; %&gt;</span><br><span class="line">    &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#disqus_thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;&lt;%= __('comments') %&gt;&lt;/a&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>在原来的第 36 行位置添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (post.comments &amp;&amp; (config.valine_shortname || theme.valine_shortname))&#123; %&gt;</span><br><span class="line">  &lt;a href=<span class="string">"&lt;%- post.permalink %&gt;#valine_thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-comment-link"</span>&gt;&lt;%= __('comments') %&gt;&lt;/a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>删除（第 46 至 56 行）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; (config.duoshuo_shortname || theme.duoshuo_shortname))&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"ds-thread"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"&lt;%= post.path %&gt;"</span> data-title=<span class="string">"&lt;%= post.title %&gt;"</span> data-url=<span class="string">"&lt;%= post.permalink %&gt;"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;<span class="regexp">/section&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; else if (!index &amp;&amp; post.comments &amp;&amp; (config.disqus_shortname || theme.disqus_shortname))&#123; %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;section id="comments"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="disqus_thread"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;noscript&gt;Please enable JavaScript to view the &lt;a href="/</span><span class="regexp">/disqus.com/</span>?ref_noscript<span class="string">"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/section&gt;</span></span><br><span class="line"><span class="string">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>在原来的第 46 行位置添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; (config.valine_shortname || theme.valine_shortname))&#123; %&gt;</span><br><span class="line">  &lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"valine_thread"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"comment"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><hr><p>改好后重新生成静态文件即可。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评论系统 </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 设置系统语言环境</title>
      <link href="/2017/10/29/59/"/>
      <url>/2017/10/29/59/</url>
      
        <content type="html"><![CDATA[<p>最近发现在 linux 系统里面，文件名带日文的文件使用命令删除不了，也无法创建带日文的文件夹。想了一下可能是系统语言环境的问题，使用命令 <code>dpkg-reconfigure locales</code> 给系统增加日语的语言包，成功解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络连接的封锁与反封锁</title>
      <link href="/2017/10/29/58/"/>
      <url>/2017/10/29/58/</url>
      
        <content type="html"><![CDATA[<p>最近一段时间，针对网络连接的战争愈演愈烈，双方都在尝试不同的策略。以至于对于新人来说，很难理解哪些已经发生过，哪些还在尝试中。于是我打算写篇文章来简单介绍一下整个故事的来龙去脉。</p><a id="more"></a><h2 id="史前时代"><a href="#史前时代" class="headerlink" title="史前时代"></a>史前时代</h2><p>最早的封锁大约是 DNS 投毒和 IP 黑名单。具体细节这里不表，简单来说就是 1) 对于特定域名比如 google.com，你的浏览器解析不到正确的 IP 地址； 2) 即使碰巧解析到了正确的 IP 地址，由于 Google 在亚洲地区的 IP 地址就那么几个，发往这几个 IP 地址的数据包被全部丢弃（或 TCP Reset），也就导致了用户死活访问不到 google.com。</p><h2 id="攻防战-1-0"><a href="#攻防战-1-0" class="headerlink" title="攻防战 1.0"></a>攻防战 1.0</h2><p>由于被封的 IP 依然是少数，而 Google 在全球的 IP 数量庞大，于是网友们很快想到了解决方案，就是使用 hosts 文件指定 IP 地址。虽然亚洲地区的 IP 被封了，但美国、欧洲甚至是南美洲依然有可以访问的地址，速度慢是慢了点，但总比上不去的好。于是 hosts 文件这个方案流行了那么一段时间。</p><p>后来封锁升级了，不是针对 IP 地址的了，而是针对每一个网络连接。受限于为数不多的几个出入境节点，网民的每一个出境网络连接实际上都被扫描过一遍。于是网络协议最初设计时，并未考虑封锁这回事，无论是 HTTP 还是 HTTPS，只需要扫描每个连接的前几十个字节，就可以得到其目标地址（域名）。HTTP 是通过其 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host" target="_blank" rel="noopener">Host 头</a>，而 HTTPS 是通过 <a href="https://en.wikipedia.org/wiki/Server_Name_Indication" target="_blank" rel="noopener">SNI</a>。</p><p>至此，针对域名，没有封不掉的，只有不想封的。</p><p>在直线连接几乎不可能的之后，那就只能绕路了，也就是代理。代理的主要三种模式是 Socks、HTTP 和 VPN。三种模式各有利弊：</p><ul><li>Socks 可以代理 TCP 和 UDP 连接，但其数据包是明文的，依然逃不过上述检测；</li><li>HTTP 可以有 TLS 加持，但只能代理 TCP 连接，对 UDP 无效；</li><li>VPN 可以代理包含 TCP / UDP 在内的各种连接，但 VPN 会转发几乎所有的数据，在可以访问 Google 的同时，可能就不能访问优酷了（地区限制）。</li></ul><p>然后 Shadowsocks 横空出世。</p><p>Shadowsocks 本质上是 Socks 的加密版本，可选择多种加密方式。一旦加了密，其传输的数据就无法被第三方检测了。并且 Shadowsocks 在转发数据之前，可以对其目的地进行判断，比如可以只转发去往 Google 的流量，而优酷的流量依然直连。在经常一段时间的优化之后，Shadowsocks 可以达到一个全局较快的连接速度，比上述的几个代理方式都要好。</p><p>由于 Shadowsocks 太过火爆，其作者被公安机关约谈，勒令不得继续参于相关项目的开发。</p><h2 id="攻防战-2-0"><a href="#攻防战-2-0" class="headerlink" title="攻防战 2.0"></a>攻防战 2.0</h2><p>中国那么多人，要把相关人员一一找出来喝茶，也不是一件容易的事。封锁这事，还得从网络连接着手。</p><p>对于一台国内的机器往一个国外的服务器发送数据的网络连接，有两种检测方式，被动式和主动式。</p><p>被动式是指检测方只观察连接中传输的内容，当内容符合某种模式（比如关键字）的时候，就把连接中断，或者服务器 IP 列入黑名单。上述的所有封锁方式均为被动式。</p><p>而主动式指的是，当观察到一个不可识别的连接时，检测方主动发起一个去往服务器的连接，通过一些编造的数据，探测出服务器是不是一台代理服务器。</p><p>Shadowsocks 协议曾被指出一个<a href="https://breakwa11.blogspot.ch/2016/09/shadowsocks.html" target="_blank" rel="noopener">严重的安全性问题</a>。只需要不到 16 次主动探测，就可以 100% 断定服务器是否在运行 Shadowsocks。具体来说，初版 Shadowsocks 协议依赖于连接头部的某一个字节来读取目标地址，这个字节的取值只有三种。当这个字节的取值不合法时，Shadowsocks 会快速中断连接，否则继续读取剩下的内容。于是这一特征可被用于探测一个服务器是否为 Shadowsocks 代理。</p><p>为了应对这一探测方式，Shadowsocks 对其加密方式升级了两次。目前看来这一漏洞，以及其它可能的主动探测方式，都被避免了。</p><p>同时期还有多个流行的翻墙工具，其原理和 Shadowsocks 大同小异，这里略过。</p><h2 id="攻防战-3-0"><a href="#攻防战-3-0" class="headerlink" title="攻防战 3.0"></a>攻防战 3.0</h2><p>从信息学的角度来说，Shadowsocks 协议是一个近乎完美的协议。它的数据完全随机，无法 100% 确定这个网络连接是否为 Shadowsocks。但从另一方面来说，网络数据并不是均匀分布的，保守来说，HTTP 和 HTTPS 流量占据了 70% 以上。而如果一个服务器接收的流量 90% 是杂乱无章的，那么它就很可疑了。虽然检测方不能严格证明那就是 Shadowsocks，但秀才遇到兵啊……</p><p>既然随机数据可疑，那我们就把数据伪装成 HTTP 或者 HTTPS 好了。由于 HTTPS 是大势所趋，并且 HTTPS 传输的内容天生不可能被破解，把代理数据伪装成 HTTPS 也是一个比较合理的选择。</p><p>由于检测方无法判断一个 HTTPS 连接是正常的网站流量，还是代理。如果封锁所有的 HTTPS 流量，那无疑是一个杀敌五百，自损一千的昏招。当然急病乱投医也是有可能的……</p><h2 id="第二战场-1-0"><a href="#第二战场-1-0" class="headerlink" title="第二战场 1.0"></a>第二战场 1.0</h2><p>所有的代理工具都不是系统自带的，用户使用代理工具之前，需要先下载和安装。于是封锁下载途径也是一种封锁。Apple 就按要求移除了所有 VPN 应用。此战场防御方完败 😂</p><p><strong>目前明面上的攻防到此为止，接下来说说一些想法和揣测</strong></p><h2 id="攻防战-4-0"><a href="#攻防战-4-0" class="headerlink" title="攻防战 4.0"></a>攻防战 4.0</h2><p>虽然流量经过了加密，但加密的只是内容，不能排除还有其它的特征。比如 TLS (HTTPS 所用的加密协议）的握手环节，客户端和服务器互相发送的数据是有规律的。比如握手三次，每一次的数据量大致是固定的。如果有一个连接，也有三次握手，每一次的数据量和 TLS 相当，但是内容是混乱的，那么这个连接是不是 Shadowsocks 连接呢？当然 Shadowsocks 有一些额外的数据，这个另说。</p><p>目前翻墙圈在这一问题上有很大的争论。对于检测方是否足够强的技术做类似的检测，以及是否有足够的把握只封代理都存在疑惑。但毫无疑问，这将是下一个值得研究的领域。</p><p>另一个热点是分布式或者P2P。</p><p>这一领域已经被 Tor 证明为成功或者失败了（取决于你怎么看待 Tor）。我个人不喜欢 Tor 因为它速度太慢。虽然 P2P 这一术语最近很热，听上去也很有希望，但实际上它并不适用于翻墙。翻墙的过程需要【墙内的P】2【墙外的P】，并不是任意两个 P 都可以自由组合的。</p><p>目前对翻墙 P2P 的研究和应用都比较少，前景不明朗，观望中。</p><p>以上是对翻墙历史的简单总结，希望对新人有帮助。</p><hr><p>via:<a href="https://cnsteem.com/cn/@v2ray/6knmmb" target="_blank" rel="noopener">简单介绍一下网络连接的封锁与反封锁</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络封锁 </tag>
            
            <tag> 反封锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDC 机房网络质量监控（三网）</title>
      <link href="/2017/10/21/57/"/>
      <url>/2017/10/21/57/</url>
      
        <content type="html"><![CDATA[<p>Ping Cat 是一款基于 Python 开发的用于检测 IDC 机房 ping 值的在线工具，尤其在想要购买 VPS 的时候，可以使用该工具来检测 IDC 商家的线路是否稳定，通过长期观察后可对购买起到参考作用。</p><p>网址：<a href="http://ping.cat" target="_blank" rel="noopener">http://ping.cat</a></p><a id="more"></a><hr><p>图表说明：<br>1，X轴表示时间，Y轴表示ping的时间值。<br>2，阴影部分表示有抖动，20个测试数据包里有部分时间值高，但不丢包，阴影块越大，说明ping值波动越大。<br>3，曲线上不同的颜色表示丢包数不同，对应图表下方的图示。</p><p>以 Bandwagonhost 的洛杉矶 C3 机房为例。图表中：广州电信与广州移动的平均 ping 值小、较稳定，平均丢包也比较低。上海联通的平均 ping 值较大，波动明显，平均丢包也较高，说明联通到这个机房的网络质量较差。</p><p><img src="https://public.lightpic.info/image/8A88_59EA14670.jpg" alt="Bandwagonhost_US"></p><p>对比 Rectified 的 sharktech 机房。图表中：广州电信、上海联通、广州移动的平均 ping 值较低，平均丢包也都很小，并且 ping 值几乎无波动。这说明 sharktech 机房的网络质量是比较好的。</p><p><img src="https://public.lightpic.info/image/92EB_59EA14660.jpg" alt="Rectified"></p><hr><p>除了用来长期观察网络质量以外，还可以在自己的 vps 无法连接时，查看对应机房的实时网络状态，以此来排查问题。</p><p>如下图中，ping 值突然增至 500ms + ，并伴随大量丢包，这种情况就会导致与 vps 的通信中断。</p><p><img src="https://public.lightpic.info/image/B8B3_59EA1D250.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 实用网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> IDC </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>potplayer 电视直播源</title>
      <link href="/2017/10/19/56/"/>
      <url>/2017/10/19/56/</url>
      
        <content type="html"><![CDATA[<p>这份直播源囊括： CCTV 1-15 频道、国内各省卫视、各省地方台、乐视、New TV、 CHC、战旗、港澳台、部分国外电视台。</p><p>在不同的运营商网络环境下有些源会无法播放，需自行找出列表中的可用源。</p><a id="more"></a><hr><p><a href="https://lightpic.info/image/detail/624F_59E8C57F0" target="_blank" rel="noopener"><img src="https://public.lightpic.info/image/624F_59E8C57F0.jpg" border="0"></a><br><a href="https://lightpic.info/image/detail/4224_59E8C57F0" target="_blank" rel="noopener"><img src="https://public.lightpic.info/image/4224_59E8C57F0.jpg" border="0"></a><br></p><hr><p>链接：<a href="http://pan.baidu.com/s/1o7AVe90" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7AVe90</a> 密码：jqi6</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
            <tag> potplayer </tag>
            
            <tag> 高清直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阻止vps回源国内的iptables规则</title>
      <link href="/2017/10/18/55/"/>
      <url>/2017/10/18/55/</url>
      
        <content type="html"><![CDATA[<p>当阻止 vps 回源国内后，vps 将不能 ping 通，也不能直接连 ssh，但 ss 服务是可以正常使用的。这样可以减少代理服务器的特征，降低被发现的几率。</p><blockquote><p>本文内的命令仅适用于 Debian 系的 Linux 发行版。</p></blockquote><a id="more"></a><hr><h2 id="添加-iptables-的-geoip-模块"><a href="#添加-iptables-的-geoip-模块" class="headerlink" title="添加 iptables 的 geoip 模块"></a>添加 iptables 的 geoip 模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install xtables-addons-common xtables-addons-dkms libtext-csv-xs-perl</span><br><span class="line">/usr/lib/xtables-addons/xt_geoip_dl</span><br><span class="line">mkdir /usr/share/xt_geoip</span><br><span class="line">/usr/lib/xtables-addons/xt_geoip_build -D /usr/share/xt_geoip GeoIPCountryWhois.csv GeoIPv6.csv</span><br></pre></td></tr></table></figure><h2 id="添加-iptables-的阻止回源国内规则"><a href="#添加-iptables-的阻止回源国内规则" class="headerlink" title="添加 iptables 的阻止回源国内规则"></a>添加 iptables 的阻止回源国内规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A OUTPUT -m geoip --dst-cc CN  -j REJECT</span><br></pre></td></tr></table></figure><hr><h2 id="保存和恢复-iptables-规则"><a href="#保存和恢复-iptables-规则" class="headerlink" title="保存和恢复 iptables 规则"></a>保存和恢复 iptables 规则</h2><p>iptables 的规则会在 vps 重启后清空，所以需要手动保存和恢复。</p><p><strong>保存</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-save &gt; /etc/iptables/rules.v4</span><br></pre></td></tr></table></figure><p><strong>恢复</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-restore &lt; /etc/iptables/rules.v4</span><br></pre></td></tr></table></figure><h2 id="自动保存和恢复-iptables-规则的包"><a href="#自动保存和恢复-iptables-规则的包" class="headerlink" title="自动保存和恢复 iptables 规则的包"></a>自动保存和恢复 iptables 规则的包</h2><p>从 Ubuntu 10.04 LTS (Lucid) 和 Debian 6.0 (Squeeze) 版本开始，可以通过安装一个名为 “iptables-persistent” 的包，安装后它以守护进程的方式来运行，系统重启后可以自动将保存的内容加载到iptables中。当然前提也是需要先保存规则。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install iptables-persistent</span><br></pre></td></tr></table></figure><h3 id="保存规则"><a href="#保存规则" class="headerlink" title="保存规则"></a>保存规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service  iptables-persistent save</span><br></pre></td></tr></table></figure><p><em>在 Debian 7 中安装完后会自动提示是否保存规则。</em></p><hr><h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><p>因为我启用 ss 服务用的是 ss-bash，而 ss-bash 监控流量依赖的是 iptables ，所以这就会导致在添加了阻止回源国内的规则后 ss 连接不上。解决方法：先启动 ss-bash ，添加用户端口，即添加 ss 的 iptables 规则。然后添加阻止回源国内规则。因为 iptables 的规则遵循先后关系，所以会放行 ss 的端口。</p><hr><p>via:</p><ul><li><a href="http://www.hostloc.com/thread-401494-1-1.html" target="_blank" rel="noopener">添加iptables规则，防止ss回源国内</a></li><li><a href="http://salogs.com/news/2015/08/20/iptables-save/" target="_blank" rel="noopener">保存iptable规则并开机自动加载</a></li><li><a href="https://daenney.github.io/2017/01/07/geoip-filtering-iptables.html" target="_blank" rel="noopener">GeoIP based filtering with iptables</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置网站访问密码</title>
      <link href="/2017/10/11/54/"/>
      <url>/2017/10/11/54/</url>
      
        <content type="html"><![CDATA[<p><img src="https://wx3.sinaimg.cn/large/92253953gy1fkdmvg1xnhj20a807ijrh.jpg" alt="效果演示"></p><p>有时候我们需要对网站的访问进行权限认证。普遍的做法是做一个登录验证功能，可如果是静态博客，就没办法通过后端程序进行验证。这种情况下，可以用 nginx 的 <code>ngx_http_auth_basic_module</code> 模块进行登录验证。</p><p>默认情况下，nginx自带安装了 <code>ngx_http_auth_basic_module</code> 模块，我们只需要用第三方工具设置用户名、密码，保存到文件中，并在 nginx 配置中开启访问验证即可。</p><a id="more"></a><hr><h2 id="使用htpasswd生成密码"><a href="#使用htpasswd生成密码" class="headerlink" title="使用htpasswd生成密码"></a>使用htpasswd生成密码</h2><h3 id="安装-htpasswd"><a href="#安装-htpasswd" class="headerlink" title="安装 htpasswd"></a>安装 htpasswd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  -y install httpd-tools</span><br></pre></td></tr></table></figure><h3 id="设置账号密码"><a href="#设置账号密码" class="headerlink" title="设置账号密码"></a>设置账号密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo htpasswd -c /usr/<span class="built_in">local</span>/nginx/passwd username</span><br></pre></td></tr></table></figure><p>按照提示输入密码，就在 <code>/usr/local/nginx</code> 目录下的 <code>passwd</code> 中保存了账号密码</p><hr><h2 id="nginx配置开启验证"><a href="#nginx配置开启验证" class="headerlink" title="nginx配置开启验证"></a>nginx配置开启验证</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开nginx配置文件，以 <code>/usr/local/nginx/conf/vhost/example.conf</code> 为例：</p><p>如果是要对整个站点都进行访问权限验证，就配置 <code>nginx.conf</code> 文件</p><p>在配置文件中加上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">auth_basic <span class="string">"What are you want to do?"</span>;</span><br><span class="line">    auth_basic_user_file /usr/<span class="built_in">local</span>/nginx/passwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><hr><p>via:<a href="https://www.zhiqiexing.com/code/nginx/nginx%E9%85%8D%E7%BD%AE%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81/" target="_blank" rel="noopener">nginx配置网站访问密码</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AviSynth 2D转制3D</title>
      <link href="/2017/10/07/53/"/>
      <url>/2017/10/07/53/</url>
      
        <content type="html"><![CDATA[<p>通过 AviSynth 脚本将 2D 画面转制成左右格式的 3D 画面。</p><p>代码:<br><a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SetMTMode(2,0)#Uncomment if you have multithreaded avisynth!</span></span><br><span class="line">factor3D = 20 <span class="comment"># Reduce to increase attempt to add 3D.</span></span><br><span class="line">inputFile = <span class="string">"D:\video.mp4"</span> <span class="comment"># Set to filename</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Open the video file for conversion, change the video file name</span></span><br><span class="line">video2d = FFVideoSource(inputFile)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Increase video brightnes on dark videos, good for 3D Vision owners</span></span><br><span class="line"><span class="comment"># video2d = video2d.Tweak(Bright=10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Convert to RGB32 to avoid the width restrictions</span></span><br><span class="line">video2d = ConvertToRGB32(video2d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Get video width/height and set the frame stretch factor</span></span><br><span class="line"><span class="comment">## Lower the value 100 to increase frame stretch, may introduce ghosting</span></span><br><span class="line">videoW = width(video2d)</span><br><span class="line">videoH = height(video2d)</span><br><span class="line">ResW = videoW + (videoW / factor3D)</span><br><span class="line">videoH = videoH + (videoH / factor3D)</span><br><span class="line">video2d = LanczosResize(video2d, videoW, videoH)</span><br><span class="line">CropW = (ResW - videoW) / 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Create variables for left and right frame with one frame difference</span></span><br><span class="line"><span class="comment">## This is the Plufrich-like simulation that creates illusion of depth from movement</span></span><br><span class="line">f1 = video2d</span><br><span class="line">f2 = DeleteFrame(video2d, 0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Stretch the right frame to further the depth effect</span></span><br><span class="line">f1 = LanczosResize(f1, ResW, videoH)</span><br><span class="line">f1 = Crop(f1, 0, 0, videoW, videoH)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Stretch the left frame to further the depth effect</span></span><br><span class="line">f2 = LanczosResize(f2, ResW, videoH)</span><br><span class="line">f2 = Crop(f2, CropW, 0, videoW, videoH) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Output the two video frames in a side-by-side / parallel format</span></span><br><span class="line"><span class="comment">## Use this as a default for playing back on 3D Vision (Side by Side L/R)</span></span><br><span class="line">StackHorizontal(f2, f1)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Output the two video frames in a Above/Below format (like Sony?)</span></span><br><span class="line"><span class="comment"># StackVertical(f2,f1)</span></span><br></pre></td></tr></table></figure><hr><p>via: <a href="https://gist.github.com/nallar/2409659" target="_blank" rel="noopener">2dto3d.avs</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> avs </tag>
            
            <tag> 3D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDClub 重生</title>
      <link href="/2017/10/01/52/"/>
      <url>/2017/10/01/52/</url>
      
        <content type="html"><![CDATA[<p>得到一个好消息，HDClub 重生了！</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fk33mf4ystj20zb07m75e.jpg" alt=""></p><p>这是我收到的邮件。大概的意思是：在 HDClub 关闭一个月以后， HDClub 的管理层把网站转手给了 ELITEHD， HDClub 用户可以用原来的帐号和密码登录新的网站 <a href="https://elitehd.org/" target="_blank" rel="noopener">ELITEHD</a>。</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fk343bbvwgj20zc0h1ten.jpg" alt="ELITEHD"></p><a id="more"></a><p>登录以后，网站果然还是原来的味道。不过，重生后因为换了域名会有很多断种，所以还需要一段时间才能恢复元气。</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fk33y3oo0xj20pj098wfl.jpg" alt="当前状态"></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDClub </tag>
            
            <tag> ELITEHD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大护法</title>
      <link href="/2017/09/25/51/"/>
      <url>/2017/09/25/51/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有一处花屏，不知道是优酷的问题还是工具的问题，总体影响不大。<br>将扩展名 rar 改为 flv 即可播放。</p></blockquote><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fjv7kv9v2qj20a80go7i3.jpg" alt=""></p><a id="more"></a><p>◎译　　名　大护法之黑花生<br>◎片　　名　大护法<br>◎年　　代　2017<br>◎产　　地　中国大陆<br>◎类　　别　喜剧/动画/奇幻/冒险<br>◎语　　言　汉语普通话<br>◎上映日期　2017-07-13(中国大陆)<br>◎IMDb评分  7.2/10 from 183 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt7146054/" target="_blank" rel="noopener">http://www.imdb.com/title/tt7146054/</a><br>◎豆瓣评分　8.0/10 from 106,674 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26811587/" target="_blank" rel="noopener">https://movie.douban.com/subject/26811587/</a><br>◎片　　长　95分钟<br>◎导　　演　不思凡 Bu Si Fan<br>◎主　　演　小连杀 Xiaoliansha<br>　　　　　　图特哈蒙 Sheng Feng<br>　　　　　　金士杰 Shih-Chieh King<br>　　　　　　幽舞越山 Youwu Zhang<br>　　　　　　李佳怡 Jiayi Li<br>　　　　　　李兰陵 Lanling Li<br>　　　　　　郭盛 Sheng Guo<br>　　　　　　叶知秋 Zhiqiu Ye<br>　　　　　　佟心竹 Xinzhu Tong<br>　　　　　　邢凯新 Kaixin Xing<br>　　　　　　藤新 Xin Teng<br>　　　　　　郝翔海 Xianghai Hao</p><p>◎简　　介</p><p>　　为了寻找下落不明的太子（图特哈蒙 配音），大护法（小连杀 配音）来到了一个诡异而又古怪的小镇上，在那里居住着一群不会说话的花生人，它们夜夜点燃来路不明的油灯，将天上漂浮的巨大花生熏得黑漆漆的。<br>　　大护法在镇上找到了藏匿在此的太子，并遇见了一直在保护着太子的小鸣（幽舞越山 配音）和会说话的花生人小姜（李兰陵 配音），在大护法的威逼利诱之下，太子同意跟他回去继承王位，却在半路上遭到了绑架。在解救太子的过程中，大护法渐渐解开了这个小镇上隐藏的骇人谜团，与此同时，他的强大宿敌亦在身后步步紧逼，企图将他置于死地而后快。</p><hr><blockquote><p>1080p 无水印<br>链接：<a href="http://pan.baidu.com/s/1eRQdgw6" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRQdgw6</a> 密码：b6q5</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大护法 </tag>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AVS添加图片水印</title>
      <link href="/2017/09/10/50/"/>
      <url>/2017/09/10/50/</url>
      
        <content type="html"><![CDATA[<p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img=ImageSource(&quot;水印文件&quot;, pixel_type=&quot;RGB32&quot;)</span><br><span class="line">Overlay(img, x=10, y=10, mask=img.showAlpha(), opacity=0.65)</span><br></pre></td></tr></table></figure><p>x,y是坐标，opacity是透明度。</p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> avs </tag>
            
            <tag> 水印 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆流寻梦/木心：来自地下的笔记</title>
      <link href="/2017/09/09/49/"/>
      <url>/2017/09/09/49/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/92253953gy1fjdfs708ndj20b90goq3p.jpg" alt=""></p><a id="more"></a><p>◎译　　名　梦想抵抗现实/木心：来自地下的笔记<br>◎片　　名　Dreaming Against the World<br>◎年　　代　2015<br>◎产　　地　美国<br>◎类　　别　纪录片/短片<br>◎语　　言　英语/汉语普通话/吴语<br>◎上映日期　2015-04-23(美国)<br>◎豆瓣评分　9.1/10 from 193 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/20491425/" target="_blank" rel="noopener">https://movie.douban.com/subject/20491425/</a><br>◎片　　长　35分钟<br>◎导　　演　弗朗西斯科·贝洛 Francisco Bello / 蒂姆·斯特恩伯格 Tim Sternberg<br>◎主　　演　木心 Xin Mu<br>　　　　　　Fenton Li<br>　　　　　　Alex Fox</p><p>◎简　　介</p><p>　　木心先生(1927-2011)， 一位坚毅的艺术创作者，真正的世界级艺术家。於去(2011)年12月21日过世了。木心被认为是二十世纪非常原创与极为重要的艺术家之一，然而尚有很多数的民众不知道他。木心最大的仰慕者与支持者-知名艺术家与评论人陈丹青，认为木心是他的教师也是精神导师。他们认识了25年也在同一年代住在纽约市皇后区。<br>　　而曾获三次奥斯卡纪录影片提名的导演Francisco Bello 与 Tim Sternberg在2010年12月曾在2010年间前往中国数次访问木心，制作了记录片 「木心：来自地下的笔记」（Notes from the Underground），这一个访问见证了最后期的木心。</p><hr><p><a href="http://imgbox.com/Xn8p4LN1" target="_blank"><img src="https://t.imgbox.com/Xn8p4LN1.jpg" alt="imgbox"></a> <a href="http://imgbox.com/W7TGEhm4" target="_blank"><img src="https://t.imgbox.com/W7TGEhm4.jpg" alt="imgbox"></a> <a href="http://imgbox.com/n8p1sNwz" target="_blank"><img src="https://t.imgbox.com/n8p1sNwz.jpg" alt="imgbox"></a> <a href="http://imgbox.com/dIhaymNd" target="_blank"><img src="https://t.imgbox.com/dIhaymNd.jpg" alt="imgbox"></a> <a href="http://imgbox.com/yo83jOsr" target="_blank"><img src="https://t.imgbox.com/yo83jOsr.jpg" alt="imgbox"></a> <a href="http://imgbox.com/mb8o3WWs" target="_blank"><img src="https://t.imgbox.com/mb8o3WWs.jpg" alt="imgbox"></a> <a href="http://imgbox.com/cTeOdJid" target="_blank"><img src="https://t.imgbox.com/cTeOdJid.jpg" alt="imgbox"></a> <a href="http://imgbox.com/ZLR10B9X" target="_blank"><img src="https://t.imgbox.com/ZLR10B9X.jpg" alt="imgbox"></a> <a href="http://imgbox.com/GtWyUihp" target="_blank"><img src="https://t.imgbox.com/GtWyUihp.jpg" alt="imgbox"></a> <a href="http://imgbox.com/Uur9LFhD" target="_blank"><img src="https://t.imgbox.com/Uur9LFhD.jpg" alt="imgbox"></a> <a href="http://imgbox.com/znB80uof" target="_blank"><img src="https://t.imgbox.com/znB80uof.jpg" alt="imgbox"></a> <a href="http://imgbox.com/JJakp0Ws" target="_blank"><img src="https://t.imgbox.com/JJakp0Ws.jpg" alt="imgbox"></a></p><hr><blockquote><p>Dreaming Against the World 2015 720p WEB-DL H264 AAC2.0<br><a href="https://www.hyperay.org/details.php?id=12125" target="_blank" rel="noopener">Hyperay</a><br><a href="http://www.jlpzj.net/forum.php?mod=viewthread&amp;tid=325442" target="_blank" rel="noopener">纪录片之家</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 纪录片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆流寻梦 </tag>
            
            <tag> 木心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stack 1T 网盘申请和使用</title>
      <link href="/2017/09/07/48/"/>
      <url>/2017/09/07/48/</url>
      
        <content type="html"><![CDATA[<p>TransIP的Stack网盘，比较稳定，且国内可以访问，而且可以挂载到服务器上，同时支持各种不同系统的应用，非常不错。</p><p><strong>一、Stack 1T 网盘申请</strong></p><p>地址：<a href="https://www.transip.be/cp/stack/" target="_blank" rel="noopener">https://www.transip.be/cp/stack/</a><br>直接使用国内资料、国内IP，按说明填写即可。一般不到1天会收到邀请码，使用邮件里的地址，输入邀请码和账号、密码即可成功。</p><a id="more"></a><p><strong>二、Stack网盘使用教程</strong></p><p>Stack网盘可挂载到不同系统上。</p><p>1、挂载到Windows<br>打开 我的电脑，菜单栏,计算机-映射网络驱动器，填入网盘地址(xxx为网盘用户名):</p><p><a href="https://xxx.stackstorage.com/remote.php/webdav/" target="_blank" rel="noopener">https://xxx.stackstorage.com/remote.php/webdav/</a></p><p><img src="https://zhujiwiki.com/usr/uploads/2017/09/3868371538.jpg" alt=""></p><p>挂载成功</p><p><img src="https://zhujiwiki.com/usr/uploads/2017/09/1147684829.jpg" alt=""></p><p>2、挂载到Linux（以CentOS 7为例）：</p><p>安装davfs2:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install davfs2</span><br></pre></td></tr></table></figure></p><p>创建挂载点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/webdav/</span><br></pre></td></tr></table></figure></p><p>挂载到本地:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t davfs https://xxx.stackstorage.com/remote.php/webdav/ /mnt/webdav/</span><br></pre></td></tr></table></figure></p><p>执行上面的代码后，按提示输入用户名和密码（网盘的用户名和密码）。</p><p>挂载成功</p><p><img src="https://ws1.sinaimg.cn/large/92253953gy1fjbevlze9sj20iv00zwej.jpg" alt=""></p><p>挂载点可以自行修改，先使用 <code>umount</code> 命令卸载网络硬盘，然后重新挂载。网络硬盘的读写速度取决于主机的网速，适用于小空间、大流量的主机。</p><hr><p>via: <a href="https://zhujiwiki.com/11122.html" target="_blank" rel="noopener">TransIP之Stack 1T 网盘申请、使用教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 网盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stack </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美少女万华镜：罪与罚的少女</title>
      <link href="/2017/08/17/47/"/>
      <url>/2017/08/17/47/</url>
      
        <content type="html"><![CDATA[<p>来自脸肿汉化组的全文本汉化公测版V2</p><p><img src="https://ws1.sinaimg.cn/large/92253953gy1fin3hvpqrlj20b40fowhv.jpg" alt=""></p><a id="more"></a><hr><p><strong>游戏剧情介绍:</strong></p><p>因某件事而导致休学、主人公：觋-夕摩 开始了住院生活。<br>就在这时，偶然与一年不见的美艳动人的双胞胎姐姐：夕莉 重逢，<br>并开始一起生活。<br>但夕摩有着一个绝对不能告诉姐姐的秘密。</p><p>那就是，自己对姐姐夕莉，<br>发自内心地深爱着她……</p><p>然而当秘密现于天日之时……<br>爱意却化为了狂气，<br>开始席卷自己的全身……。</p><hr><p><strong>汉化预览</strong></p><p><a href="http://imgbox.com/PF9ZHEWl" target="_blank"><img src="https://9-t.imgbox.com/PF9ZHEWl.jpg" alt="image host"></a> <a href="http://imgbox.com/lZoyGO0S" target="_blank"><img src="https://8-t.imgbox.com/lZoyGO0S.jpg" alt="image host"></a> <a href="http://imgbox.com/UmtxihkI" target="_blank"><img src="https://8-t.imgbox.com/UmtxihkI.jpg" alt="image host"></a></p><hr><blockquote><p>谷歌硬盘：<a href="https://goo.gl/wCMFd1" target="_blank" rel="noopener">https://goo.gl/wCMFd1</a></p></blockquote><hr><p>注：<em>汉化文件“美少女万华镜４CHS.exe”会被杀软报毒，请自行选择处理</em></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美少女万華鏡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纪念碑谷2 安卓版</title>
      <link href="/2017/08/08/46/"/>
      <url>/2017/08/08/46/</url>
      
        <content type="html"><![CDATA[<p>这是网络上流出的腾讯平台纪念碑谷2安卓泄露版。该版整合了数据包，无广告和内购，可直接安装。</p><p><img src="https://ws1.sinaimg.cn/large/92253953ly1ficjrulzg4j20a00hsab3.jpg" alt=""></p><a id="more"></a><hr><p><strong>游戏剧情简介:</strong></p><p>带领一个母亲和她的孩子通过神奇的建筑开展一个旅程，发现充斥幻象的道路和令人着迷的谜题，学习神圣几何的秘密。</p><p>作为2014年度Apple Game of the Year的续集，纪念碑谷2将会带领你体验一场在美丽而奇幻世界中的全新冒险之旅</p><p>在旅途中帮助罗尔教导她的小孩关于纪念碑谷的奥秘，探索令人惊叹的环境以及随意操纵建筑物。</p><p>=====</p><p>一场独一无二的奇幻旅程<br>一个全新的故事，你无需先玩纪念碑谷，而直接去体验纪念碑谷2</p><p>精心制作的独立难题<br>享受充满谜题的优雅关卡<br>运用全新互动式角色解密，探索角色之间的动态转换</p><p>现代视觉效果<br>将建筑风格和艺术运动和个人影响力完美结合成艺术品，转化成令人惊叹不已的几何结构</p><p>美妙的音效<br>让你沉浸在独特的交互式旋律音乐风格中，完美地演绎了罗尔和孩子旅程的每一步。</p><hr><blockquote><p><strong>游戏下载</strong><br>链接：<a href="https://daye-my.sharepoint.com/:u:/g/personal/root_bfdz_ink/ETR5VxCEbOdIhdsIzMUaytcBTBP4TUMwjGwrq8NCvnr0FQ?e=MmpgCn" target="_blank" rel="noopener">纪念碑谷2</a><br>解压密码：BFDZ</p></blockquote><hr><p>注：压缩包内附带有第十关过不去的解决方法。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纪念碑谷 </tag>
            
            <tag> 安卓游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭梯子脚本vpsins.sh</title>
      <link href="/2017/07/13/45/"/>
      <url>/2017/07/13/45/</url>
      
        <content type="html"><![CDATA[<p>购买的vps到手后，往往第一步就是改配置和搭梯子，所以我写了个脚本来去掉重复的工作，方便自己以后快速搭建梯子。</p><p><strong>安装环境：</strong></p><blockquote><ul><li>系统环境：Debian, Ubuntu</li><li>虚拟化架构: KVM</li></ul></blockquote><hr><p><strong>安装选项：</strong></p><blockquote><ul><li>1.配置vim</li><li>2.修改时区</li><li>3.安装ss</li><li>4.安装chacha20</li><li>5.安装ss-bash</li></ul></blockquote><a id="more"></a><hr><p><strong>下载和使用：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://d.bfdz.ink/script/vpsins.sh &amp;&amp; chmod +x vpsins.sh</span><br><span class="line">./vpsins.sh</span><br></pre></td></tr></table></figure><hr><p><strong>使用说明</strong></p><ol><li>脚本必须在 root 用户下运行，执行完脚本后需断开 ssh 并重新连接，一些设置才会生效。</li><li>选项 <code>1.配置vim</code> ：通过下载一份 vimrc 文件来优化 vim 的设置。</li><li>选项 <code>2.修改时区</code> ：将 vps 的时区修改为上海（即北京时间）。</li><li>ss 安装的是 python 版本。</li><li>chacha20 安装后要在 ss 中启用，可自行通过命令或配置文件指定加密方式。</li><li>关于 ss-bash ，见这篇文章 <a href="https://www.bfdz.ink/2016/11/14/30/">Shadowsocks流量管理脚本ss-bash</a> 。ss-bash 的安装目录是 <code>/usr/local/ss-bash/</code>,我给 ss-bash 的使用命令加了别名 <code>ssadmin</code> 。要在 ss-bash 中使用 chacha20 需修改 ss-bash 安装目录下的 <code>ssmlt.json</code> 文件。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian/Ubuntu TCP BBR 改进版/增强版</title>
      <link href="/2017/07/13/44/"/>
      <url>/2017/07/13/44/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>背景</strong><br>原版的BBR对于我们来说,速度不太稳定.<br>通过修改BBR源码,调整参数,使其更强劲.</li></ul><p>更新:<br>[2017.07.12]<br>支持用户自行指定内核版本(需要与 -f 命令同时使用).</p><a id="more"></a><hr><ul><li><strong>准备</strong><br>使用前,请确认能够开启BBR.<br>可参考: <a href="https://moeclub.org/2017/06/06/249/" target="_blank" rel="noopener">Debian/Ubuntu 开启 TCP BBR 拥塞算法</a><br>或者直接执行此命令进行开启.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO <span class="string">'BBR.sh'</span> <span class="string">'https://moeclub.org/attachment/LinuxShell/BBR.sh'</span> &amp;&amp; chmod a+x BBR.sh &amp;&amp; bash BBR.sh -f</span><br></pre></td></tr></table></figure><p><em>注意:执行此命令会自动重启.</em></p><hr><ul><li><strong>一键地址:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO <span class="string">'BBR_POWERED.sh'</span> <span class="string">'https://moeclub.org/attachment/LinuxShell/BBR_POWERED.sh'</span> &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh</span><br></pre></td></tr></table></figure><ul><li><strong>指定内核版本(以v4.11.9内核版本为例):</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO <span class="string">'BBR_POWERED.sh'</span> <span class="string">'https://moeclub.org/attachment/LinuxShell/BBR_POWERED.sh'</span> &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh -f v4.11.9</span><br></pre></td></tr></table></figure><hr><ul><li><strong>说明:</strong></li></ul><blockquote><ul><li>执行过程中会重新编译模块.</li><li>模块默认为开机自动加载.</li><li>模块名称:<em>tcp_bbr_powered</em></li><li>可用 <code>modprobe tcp_bbr_powered</code> 命令进行加载模块.</li><li>可执行 <code>lsmod |grep &#39;bbr_powered&#39;</code> </li><li>结果不为空,则加载模块成功</li><li>可执行 <code>sysctl -w net.ipv4.tcp_congestion_control=bbr_powered</code> 使用此模块.</li></ul></blockquote><p><strong>以上只是说明,直接使用一键脚本即可.</strong></p><hr><ul><li><strong>注意事项:</strong><br>如遇报错:<code>Error! Header not be matched by Linux Kernel.</code><br>请用使用本博客提供的脚本重新开启BBR,可直接参考本篇中的准备步骤.<br>如遇报错:<code>Error! Install gcc-4.9.</code><br>首先尝试 <code>apt-get update</code>,再次执行此脚本.<br>如果未解决想办法自行安装 <code>gcc-4.9</code>,或切换系统后再试.<br><strong>本脚本在Debian8,Ubuntu16.04上通过测试.</strong></li></ul><hr><p>注：安装gcc-4.9的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r/<span class="built_in">test</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install g++-4.9</span><br></pre></td></tr></table></figure><hr><p>转载来源：<a href="https://moeclub.org/2017/06/24/278/" target="_blank" rel="noopener">Debian/Ubuntu TCP BBR 改进版/增强版</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> TCP </tag>
            
            <tag> BBR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCDec 通用破解补丁</title>
      <link href="/2017/07/13/43/"/>
      <url>/2017/07/13/43/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/snipaste_20170713_214340.jpg" alt=""></p><p>如果你下载的 DCDecNV / DGIndexNV 2053 破解版及之前的版本不能用，可以尝试使用这个工具。</p><a id="more"></a><hr><p>下载：<a href="http://cargo.hyperay.cc/Encoder/avsplugin/DCDecNV/DGDec.Universal.Patcher.zip" target="_blank" rel="noopener">DGDec.Universal.Patcher.zip</a></p><hr><p>via:<a href="https://dgtoolz.blogspot.com/2016/12/dgdecnv-universal-patcher.html" target="_blank" rel="noopener">DGDec Universal Patcher</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频压制 </tag>
            
            <tag> megui </tag>
            
            <tag> DGIndexNV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCDecNV / DGIndexNV 2053 破解版</title>
      <link href="/2017/03/09/42/"/>
      <url>/2017/03/09/42/</url>
      
        <content type="html"><![CDATA[<p>Build 2053</p><ul><li><p>Added Non-Local Means (NLM) denoising functionality.</p></li><li><p>Miscellaneous additions/corrections to the documentation.</p></li></ul><a id="more"></a><hr><p>下载：<a href="https://www.hyperay.cn/?dir=avsplugin/DCDecNV/2053" target="_blank" rel="noopener">DCDecNV 2053</a></p><hr><p>via: <a href="https://dgtoolz.blogspot.com/2017/02/dgindexnv-dgdecnv-2053.html" target="_blank" rel="noopener">DGIndexNV / DGDecNV 2053</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频压制 </tag>
            
            <tag> megui </tag>
            
            <tag> DGIndexNV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源搜索技术五之法国篇</title>
      <link href="/2017/03/04/41/"/>
      <url>/2017/03/04/41/</url>
      
        <content type="html"><![CDATA[<p>继续更新，来到法国篇。首先介绍一下法国电影及资源特点。一、文艺电影 二、 bt 论坛 三、在线站点 四、网盘博客 五、译名资源</p><p>一、文艺电影，大家都了解，法国被称为世界上最浪漫的国家，其电影也不例外，大量的文艺电影成为了法国电影的标志性符号，而说到这里就不得不提起世界上最大的文艺电影集结地“  kg  ”，全称 karagarga，是早期成立的 pt 组织，以文艺小众为主题，也是世界上众多艺术类影迷的驻地，所以如果你喜欢法国电影，那么 kg 这个站点的账号是必备的。</p><a id="more"></a><p>二、 bt 论坛，在法国有许多 bt 类论坛，在下载时资源时，如果此资源未在国内被离线过，大部分都是能够通过长时间的挂离线拖下来的，这有别于之前西班牙的电驴，西班牙的电驴很多都无人续源，不论花费多长时间也不会有人来补。法国最著名的 bt 论坛即是 t411 ， t411 的资源量非常大，但是这里有几点需要注意，而且这几点对于法国其他的 bt 论坛也可以适用。</p><p>1、 t411 因为版权查处的原因，其域名会经常变化，而且会有许多“仿411”的网站出现，看资源量就很容易鉴别真伪。目前 t411 的网址是“ t411.li ”。</p><p>2、 t411 因为是境外服务器，所以中国很多网络是无法打开的，目前只有通过“翻墙”才能进入。</p><p>3、 t411 的种子资源需要通过注册账号登陆才能下载，这与俄罗斯的 rutracker 一致，不过 rutracker 更好的一点是其内部的磁链可以在不登陆账号的情况下直接使用。</p><p>4、虽然 t411 里面也像 pt 那样记载下载与上传量，但是 t411 并不是 pt 而是 bt ，也就是说你下载的种子，给任何其他人使用下载也是可以的。</p><p>5、下载 t411 里面的种子使用迅雷就好，如果有条件的话还可以使用 Windows 版的盒子，利用 ut 进行下载，基本也可以达到满速。</p><p>6、 t411 下载种子是点击资源页面最下方的“ Télécharger ”，也就是法语的“下载”。</p><p>三、在线站点，法国免费的在线站点比较多，如“ papystreaming ”，点击即看，但大部分都是主流电影，平时收集一些就好，不必刻意关注，因为在线看会卡，所以如果你不是身在国外，还是建议将资源下载本地观看。另外法国也有一些付费在线站点，其付费资源也都是相对珍贵的，如“ ina ”，使用 Paypal 或者 Visa 等带有国际支付功能的账户就可以购买下载权限。</p><p>四、网盘博客，这个是很重点的部分，因为法国的网盘博客极多，但很多都因是“ blogspot 形式”博客而被国内所屏蔽，所以这再次告诉我们想要获取好的资源，“翻墙”本领是必备的。而且法国博客里的资源都相对稀缺，与在线站点形成鲜明对比。因为博客的个人属性比较强，所以在上传电影的时候，很多都是以个人的兴趣爱好为主题，也就是说很多电影是法国网友通过自压购买的 DVD，VHS 或者录制电视资源而得到，所以其质量也比在线大杂烩要高出许多。例如“ lantredelhorreur ”惊悚谋杀类，“ four-tous ”家庭动作类，“ zomblardsfromouterspace ”丧尸恐怖类，“ muaddib-sci-fi ”智能科幻类等等。这类博客的下载方式都是网盘，但一般一个电影会给出多个网盘的下载地址，所以在下载的时候，一定要尽量选择那种直接快速的，避免时间的浪费以及资源的断传。</p><p>五、译名资源，讲这块关系到一些搜索技巧，因为法国网站也存在着大量的国外电影，所以如果找对一部电影的法国译名就很重要，一般我们可以通过 IMDb 上的“ asknowsa ”来进行法语译名的查询，但是有许多电影的法语译名并没有标注在 IMDb 里，这个时候我们可以利用一下法国的豆瓣“ allocine ”来进行搜索查找，输入影片的英文名，一般会出现其对应的法文译名，再利用之前的 Google 关键词堆砌的方法来进行搜索，就会相对快速的找到一些网址链接。当然这些也不是绝对的，很多时候用“ allocine ”搜索并不会出现对应结果，但实际其在数据库是存在的，只是因为单词输入的细微误差原因导致无法看到正确的条目，所以我们尽量多查多找，反复试验才行，这需要强大的耐心，一般人估计很快就放弃了，只有坚持到最后的人才能挖掘到最可贵的东西。</p><p>好了，以上是目前可以想到的一些，先写出来供大家参考，实际资源搜索的时候会遇到各种各样的新鲜情况，只有不断积累经验，才能达到理想的目标，如果你对资源感兴趣，那么就反复去尝试吧，很多时候会有意外的收获，也必将会对稀有电影这个领域做出卓越的贡献。</p><p>内容为原创手打，转载请注名出处，谢谢。</p><hr><p>via:<a href="http://weibo.com/p/230418ce9fdf200102wx1j" target="_blank" rel="noopener">http://weibo.com/p/230418ce9fdf200102wx1j</a><br>作者：丶稀有电影</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017 年十大最受欢迎的 BT 站</title>
      <link href="/2017/03/03/40/"/>
      <url>/2017/03/03/40/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章的信息已经过时，最新榜单请查看<a href="https://www.bfdz.ink/2019/01/08/120/">2019 年十大热门 BT 站</a></p></blockquote><p>在去年，BT 界经历了较大的波动。KickassTorrents 和 Torrentz.eu 相继关站，海盗湾(The Pirate Bay)历经数次打击而屹立不倒，走上了种子网站排名的第一。排名紧随海盗湾之后的是 ExtraTorrent 和 RARBG ,这两个网站在最近几个月的访问量增长很快。</p><p>非官方建立的 Torrentz2.eu 做为排名最高的新网站，排在第五位，这个网站在外观上完全模仿了 Torrentz 。</p><p>排在第七的 TorrentProject 也表现不俗。该网站已经建立好几年了，不过从未进入前十强。</p><p>最后，Nyaa.se 和 Rutracker 也值得一提。 Nyaa.se 是 BT 界第一的动漫类网站，Rutracker 是俄罗斯第一大种子站，两个网站都有很大的流量。但因为本文主要针对英语用户和三次元电影类网站进行排名，所以这两个网站没有上榜。</p><p>下面是 2017 年初十大访问量最高的 BT 站完整榜单，这个排行榜是基于 Alexa 的数据。</p><a id="more"></a><h2 id="一、海盗湾"><a href="#一、海盗湾" class="headerlink" title="一、海盗湾"></a>一、海盗湾</h2><p>网址：<a href="http://thepiratebay.org/" target="_blank" rel="noopener">http://thepiratebay.org/</a></p><p>无需多介绍。海盗湾建站十三年来，历经多次打击和关站风波，再一次坐上了第一的宝座。</p><h2 id="二、ExtraTorrent"><a href="#二、ExtraTorrent" class="headerlink" title="二、ExtraTorrent"></a>二、ExtraTorrent</h2><p>网址：<a href="http://extratorrent.cc/" target="_blank" rel="noopener">http://extratorrent.cc/</a><br>（主域名被封，可以备用域名访问 <a href="http://extra.to/）" target="_blank" rel="noopener">http://extra.to/）</a></p><p>ExtraTorrent 的用户群一直在稳步增长。据该网站的创始人所说，ExtraTorrent 活跃的用户论坛是网站成功的主要原因。该网站还拥有自己的发布组：ETTV 和 ETRG。</p><h2 id="三、RARBG"><a href="#三、RARBG" class="headerlink" title="三、RARBG"></a>三、RARBG</h2><p>网址：<a href="http://rarbg.to/" target="_blank" rel="noopener">http://rarbg.to/</a></p><p>RARBG 是一个保加利亚的 BT 站，成立于2008年。该站在新电影和电视剧方面更新速度较快，并且会修改种子带上自己的网站名，所以知名度也提升的很快。</p><h2 id="四、YTS-AG"><a href="#四、YTS-AG" class="headerlink" title="四、YTS.AG"></a>四、YTS.AG</h2><p>网址: <a href="http://yts.ag/" target="_blank" rel="noopener">http://yts.ag/</a></p><p>这个网站主要是发布 YIFY 小组压制的小体积影片。</p><h2 id="五、Torrentz2"><a href="#五、Torrentz2" class="headerlink" title="五、Torrentz2"></a>五、Torrentz2</h2><p>网址：<a href="https://torrentz2.eu/" target="_blank" rel="noopener">https://torrentz2.eu/</a></p><p>该站外观上完全模仿了 Torrentz。网站本身没有存储种子，而是利用搜索引擎获取其他站的种子。其搜索结果涵盖了超过 60 个种子站。</p><h2 id="六、1337X"><a href="#六、1337X" class="headerlink" title="六、1337X"></a>六、1337X</h2><p>网址：<a href="http://1337x.to/" target="_blank" rel="noopener">http://1337x.to/</a></p><p>该站在去年发生过部分管理员和版主抗议安全问题的事，不过现在已经有了很大的进展。</p><h2 id="七、TorrentProject"><a href="#七、TorrentProject" class="headerlink" title="七、TorrentProject"></a>七、TorrentProject</h2><p>网址：<a href="http://torrentproject.se/" target="_blank" rel="noopener">http://torrentproject.se/</a></p><p>TorrentProject 在 BT 站里是算是个老面孔，不过却是首次出现在前十。该网站是个磁力链类 BT 站，目前网站数据库里的种子数超过千万。</p><h2 id="八、EZTV-AG"><a href="#八、EZTV-AG" class="headerlink" title="八、EZTV.AG"></a>八、EZTV.AG</h2><p>网址：<a href="http://eztv.ag/" target="_blank" rel="noopener">http://eztv.ag/</a></p><p>网站内容主要是英美剧资源。域名换了很多次，目前网站运营团队不知是不是原来的。</p><h2 id="九、TorrentDownloads"><a href="#九、TorrentDownloads" class="headerlink" title="九、TorrentDownloads"></a>九、TorrentDownloads</h2><p>网址：<a href="http://torrentdownloads.me/" target="_blank" rel="noopener">http://torrentdownloads.me/</a></p><p>老牌种子站，已经建站数年。该站支持匿名上传种子。</p><h2 id="十、Limetorrents"><a href="#十、Limetorrents" class="headerlink" title="十、Limetorrents"></a>十、Limetorrents</h2><p>网址：<a href="https://www.limetorrents.cc/" target="_blank" rel="noopener">https://www.limetorrents.cc/</a></p><p>该站是一个种子搜索引擎，网站不存储种子，使用来自其他站的搜索结果和磁力链接。</p><hr><p>via:<a href="https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2017-170107/" target="_blank" rel="noopener">https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2017-170107/</a></p>]]></content>
      
      
      <categories>
          
          <category> BT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT </tag>
            
            <tag> torrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 安装 NFS Server</title>
      <link href="/2017/01/09/39/"/>
      <url>/2017/01/09/39/</url>
      
        <content type="html"><![CDATA[<p>NFS 网络文件系统(Network File System) 是由Sun公司1984年发布的分布式文件系统协议。它允许客户端上的用户像访问本地文件一样地访问网络上的文件。</p><h2 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian / Ubuntu"></a>Debian / Ubuntu</h2><h3 id="NFS-Server-安装"><a href="#NFS-Server-安装" class="headerlink" title="NFS Server 安装"></a>NFS Server 安装</h3><ul><li>安装 NFS</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nfs-kernel-server nfs-common</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>设置分享目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/nfsshare</span><br><span class="line">chmod -R 777 /var/nfsshare/</span><br></pre></td></tr></table></figure><ul><li>编辑 <code>/etc/exports</code> ，在最后一行追加以下内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/nfsshare    192.168.0.11(rw,sync,no_root_squash,no_all_squash)</span><br></pre></td></tr></table></figure><p>上面是设置只有 <code>192.168.0.11</code> 这个用户能访问共享目录, 设置多人访问可用 * 匹配</p><ul><li>重启 NFS Server</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nfs-kernel-server restart</span><br></pre></td></tr></table></figure><h3 id="安装-NFS-Client"><a href="#安装-NFS-Client" class="headerlink" title="安装 NFS Client"></a>安装 NFS Client</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nfs-common</span><br></pre></td></tr></table></figure><ul><li>创建挂载点</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/nfs/</span><br></pre></td></tr></table></figure><ul><li>使用 <code>mount</code> 命令可挂载他人分享出来的目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t nfs 192.168.0.10:/var/nfsshare /mnt/nfs/</span><br></pre></td></tr></table></figure><p>上面是挂载 <code>192.168.0.10</code> 的分享目录。测试挂载本机分享目录，可将 ip 该改为 <code>127.0.0.1</code> ，同时注意先修改服务端的访问 ip 限制。</p><ul><li>如果要设置开机自动挂载，编辑 <code>/etc/fstab</code> ,添加以下内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.10:/var/nfsshare    /mnt/nfs/   nfs defaults 0 0</span><br></pre></td></tr></table></figure><hr><h2 id="RHEL-CentOS-7-安装-NFS-Server"><a href="#RHEL-CentOS-7-安装-NFS-Server" class="headerlink" title="RHEL / CentOS 7 安装 NFS Server"></a>RHEL / CentOS 7 安装 NFS Server</h2><h3 id="安装-NFS-Server"><a href="#安装-NFS-Server" class="headerlink" title="安装 NFS Server"></a>安装 NFS Server</h3><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br></pre></td></tr></table></figure><ul><li>设置分享目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/nfsshare</span><br><span class="line">chmod -R 777 /var/nfsshare/</span><br></pre></td></tr></table></figure><ul><li>编辑 <code>/etc/exports</code> ，在最后一行追加以下内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/nfsshare    192.168.0.11(rw,sync,no_root_squash,no_all_squash)</span><br></pre></td></tr></table></figure><ul><li>启动 NFS Server ，设置开机自启，及设置防火墙</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-server</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-lock</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-idmap</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs-server</span><br><span class="line">systemctl start nfs-lock</span><br><span class="line">systemctl start nfs-idmap</span><br><span class="line">firewall-cmd –permanent –zone=public –add-service=nfs</span><br><span class="line">firewall-cmd –reload</span><br></pre></td></tr></table></figure><h3 id="安装-NFS-Client-1"><a href="#安装-NFS-Client-1" class="headerlink" title="安装 NFS Client"></a>安装 NFS Client</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br></pre></td></tr></table></figure><ul><li>创建挂载点</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/nfs/</span><br></pre></td></tr></table></figure><ul><li>使用 <code>mount</code> 命令可挂载他人分享出来的目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t nfs 192.168.0.10:/var/nfsshare /mnt/nfs/</span><br></pre></td></tr></table></figure><hr><p>via：<a href="https://en.wikipedia.org/wiki/Network_File_System" target="_blank" rel="noopener">维基百科：NFS</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 配置 tftp 服务器</title>
      <link href="/2016/12/31/38/"/>
      <url>/2016/12/31/38/</url>
      
        <content type="html"><![CDATA[<p><strong>配置 tftp 服务器</strong></p><ul><li>安装 tftp 客户端、服务端和 xinetd 服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tftp-hpa tftpd-hpa xinetd</span><br></pre></td></tr></table></figure><ul><li>创建共享目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/tftpboot</span><br></pre></td></tr></table></figure><ul><li>设置权限</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 /home/tftpboot</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>修改tftp服务器配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/tftpd-hpa</span><br></pre></td></tr></table></figure><p>设置共享目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TFTP_USERNAME=”tftp” </span><br><span class="line">TFTP_ADDRESS=”0.0.0.0:69″ </span><br><span class="line">TFTP_DIRECTORY=”/home/tftpboot”<span class="comment">#共享目录</span></span><br><span class="line">TFTP_OPTIONS=”-l -c -s”</span><br></pre></td></tr></table></figure><ul><li>建立并修改xinetd服务配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/xinetd.d/tftp</span><br></pre></td></tr></table></figure><p>设置共享目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">service tftp</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">disable</span> = no</span><br><span class="line">socket_type = dgram</span><br><span class="line">protocol = udp</span><br><span class="line"><span class="built_in">wait</span> = yes </span><br><span class="line">user = root</span><br><span class="line">server = /usr/sbin/in.tftpd</span><br><span class="line">server_args = -s /home/tftpboot -c <span class="comment">#共享目录</span></span><br><span class="line">per_source = 11</span><br><span class="line">cps = 100 2</span><br><span class="line">flags = IPv4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重启tftp服务和xinetd服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/xinetd restart</span><br><span class="line">sudo service tftpd-hpa restart</span><br></pre></td></tr></table></figure><p><strong>配置开发板</strong></p><p>在倒计时按任意键，再按e退出菜单，进入uboot</p><p>使用 <code>print</code> 命令打印出环境变量，查看当前服务端ip和开发板ip</p><p>设置环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenv serverip 192.168.1.4</span><br><span class="line">setenv ipaddr 192.168.1.7</span><br></pre></td></tr></table></figure></p><p>此时设置保存在内存里面，开发板关机或复位后设置会还原。</p><p><code>saveenv</code> 命令可将环境变量保存到 flash 中,这样断电重启后设置仍有效</p><p>最后，在开发板上 <code>ping</code> 服务端ip,如果能通则配置没问题。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ARM </tag>
            
            <tag> tftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法高亮的常用语言关键字</title>
      <link href="/2016/12/29/37/"/>
      <url>/2016/12/29/37/</url>
      
        <content type="html"><![CDATA[<p>Markdown 语法高亮支持的语言还是比较多的，记下来备用。</p><a id="more"></a><table><thead><tr><th>语言名</th><th>关键字</th></tr></thead><tbody><tr><td>Bash</td><td>bash</td></tr><tr><td>CoffeeScript</td><td>coffeescript</td></tr><tr><td>C++</td><td>cpp</td></tr><tr><td>C#</td><td>cs</td></tr><tr><td>CSS</td><td>css</td></tr><tr><td>Diff</td><td>diff</td></tr><tr><td>HTTP</td><td>http</td></tr><tr><td>Ini</td><td>ini</td></tr><tr><td>Java</td><td>java</td></tr><tr><td>JavaScript</td><td>javascript</td></tr><tr><td>JSON</td><td>json</td></tr><tr><td>Makefile</td><td>makefile</td></tr><tr><td>Markdown</td><td>markdown</td></tr><tr><td>Objective-C</td><td>objectivec</td></tr><tr><td>Perl</td><td>perl</td></tr><tr><td>Python</td><td>python</td></tr><tr><td>Ruby</td><td>ruby</td></tr><tr><td>SQL</td><td>sql</td></tr><tr><td>XML</td><td>xml</td></tr><tr><td>ARM汇编</td><td>armasm</td></tr><tr><td>AVR汇编</td><td>avrasm</td></tr><tr><td>MIPS汇编</td><td>mipsasm</td></tr><tr><td>x86汇编</td><td>x86asm</td></tr><tr><td>Elixir</td><td>elixir</td></tr><tr><td>Elm</td><td>elm</td></tr><tr><td>Erlang</td><td>erlang</td></tr><tr><td>F#</td><td>fsharp</td></tr><tr><td>Haskell</td><td>haskell</td></tr><tr><td>GLSL</td><td>glsl</td></tr><tr><td>Clojure</td><td>clojure</td></tr><tr><td>Lisp</td><td>lisp</td></tr></tbody></table><hr><p>via:<a href="http://www.jianshu.com/p/cf7a1fc95316" target="_blank" rel="noopener">http://www.jianshu.com/p/cf7a1fc95316</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ARM 汇编指令的条件执行</title>
      <link href="/2016/12/28/36/"/>
      <url>/2016/12/28/36/</url>
      
        <content type="html"><![CDATA[<p>在ARM模式下，任何一条数据处理指令可以选择是否根据操作的结果来更新CPSR寄存器中的ALU状态标志位。在数据处理指令中使用S后缀来实现该功能。</p><p><em>不要在CMP,CMN,TST或者TEQ指令中使用S后缀。这些比较指令总是会更新标志位。</em></p><p>在Thumb模式下，所有数据处理指令都更新CPSR中的标志位。有一个例外就是：当一个或更多个高寄存器被用在MOV和ADD指令时，此时MOV和ADD不能更新状态标志.</p><p>几乎所有的ARM指令都可以根据CPSR中的ALU状态标志位来条件执行。参见条件执行后缀表。</p><a id="more"></a><p>在ARM模式下，你可以：</p><ul><li>根据数据操作的结果更新CPSR中的ALU状态标志；</li><li>执行其他几种操作,但不更新状态标志；</li><li>根据当前状态标志，决定是否执行接下来的指令。</li></ul><p>在Thumb模式，大多数操作总是更新状态标志位，并且只能使用条件转移指令(B)来实现条件执行。该指令(B)的后缀和在ARM模式下是一样的。其他指令不能使用条件执行。</p><p><strong>ALU状态标志</strong></p><p>CPSR寄存器包含下面的ALU状态标志：</p><table><thead><tr><th style="text-align:center">标志</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center">N　</td><td>Set when the result of the operation was Negative</td></tr><tr><td style="text-align:center">Z</td><td>Set when the result of the operation was Zero</td></tr><tr><td style="text-align:center">C</td><td>Set when the operation result in a Carry(发生进位，或借位)</td></tr><tr><td style="text-align:center">V</td><td>Set when the operation caused oVerflow(操作造成溢出)</td></tr><tr><td style="text-align:center">Q</td><td>ARM architecture v5E only sticky flag</td></tr></tbody></table><p>N，Z，C，V相关的条件码后缀如下表所列：</p><p><img src="https://ww4.sinaimg.cn/large/92253953gw1fb6svh597wj20e40cytaq.jpg" alt=""></p><p><img src="https://ww2.sinaimg.cn/large/92253953gw1fb6swkwhoxj20k90i6jtf.jpg" alt=""></p><hr><ul><li>示例1</li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="keyword">ADD　</span>　<span class="built_in">r0</span>, <span class="built_in">r1</span>, <span class="built_in">r2</span>       <span class="comment">; r0 = r1 + r2, 不更新标志位</span></span><br><span class="line">　　<span class="keyword">ADDS　</span>　<span class="built_in">r0</span>, <span class="built_in">r1</span>, <span class="built_in">r2</span>      <span class="comment">; r0 = r1 + r2, 后缀S表示更新标志位</span></span><br><span class="line">　　<span class="keyword">ADCSS　</span>　<span class="built_in">r0</span>, <span class="built_in">r1</span>, <span class="built_in">r2</span>     <span class="comment">; If C 标志为1，则执行r0 = r1 + r2, 且更新标志，</span></span><br><span class="line">　　<span class="keyword">CMP　</span>　<span class="built_in">r0</span>, <span class="built_in">r1</span>           <span class="comment">; CMP指令肯定会更新标志.</span></span><br></pre></td></tr></table></figure><ul><li>示例2 </li></ul><p>求最大公约数</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">gcd</span></span><br><span class="line">　　<span class="keyword">CMP </span><span class="built_in">r0</span>, <span class="built_in">r1</span>　　　　</span><br><span class="line">　　<span class="keyword">BEQ </span><span class="meta">end</span>　　　　   <span class="comment">; r0 = r0 结束程序</span></span><br><span class="line">　　<span class="keyword">BLT </span>less　　　　  <span class="comment">; r0 &lt; r1 跳转至 less</span></span><br><span class="line">　　<span class="keyword">SUB </span><span class="built_in">r0</span>, <span class="built_in">r0</span>, <span class="built_in">r1</span>　　<span class="comment">; r0 &gt; r1时 r0 = r0 - r1</span></span><br><span class="line">　　<span class="keyword">B </span>gcd　　         <span class="comment">; 条件都不满足是继续循环</span></span><br><span class="line"><span class="symbol">less</span></span><br><span class="line">　　<span class="keyword">SUB </span><span class="built_in">r1</span>, <span class="built_in">r1</span>, <span class="built_in">r0</span>　　<span class="comment">; r0 &lt; r1 r1 = r1 - r0</span></span><br><span class="line">　　<span class="keyword">B </span>gcd</span><br><span class="line"><span class="symbol">end</span></span><br></pre></td></tr></table></figure><p>-示例3</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">MAIN</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r1</span>, <span class="number">#1</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r2</span>, <span class="number">#1</span></span><br><span class="line">　　<span class="keyword">cmp </span><span class="built_in">r1</span>, <span class="built_in">r2</span></span><br><span class="line">　　<span class="keyword">beq </span>FUNC      <span class="comment">;if(eq) b FUNC =&gt; 实质：if(z == 1) b FUNC</span></span><br><span class="line">　　<span class="keyword">bne </span>FUNC      <span class="comment">;实质：if(z == 0) b FUNC</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r3</span>, <span class="number">#3</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r4</span>, <span class="number">#4</span></span><br><span class="line"><span class="symbol">FUNC</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r5</span>, <span class="number">#5</span></span><br><span class="line">　　<span class="keyword">mov </span><span class="built_in">r6</span>, <span class="number">#6</span></span><br></pre></td></tr></table></figure><hr><p>via: <a href="http://www.cnblogs.com/chen-farsight/p/6068905.html" target="_blank" rel="noopener">ARM指令集——条件执行、内存操作指令、跳转指令</a></p>]]></content>
      
      
      <categories>
          
          <category> ARM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> 指令集 </tag>
            
            <tag> 跳转指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Kernel 4.9 正式发布</title>
      <link href="/2016/12/12/35/"/>
      <url>/2016/12/12/35/</url>
      
        <content type="html"><![CDATA[<blockquote><p>上一篇博文<a href="http://www.bfdz.ink/2016/12/08/34/">开启TCP BBR拥塞控制算法</a>使用的内核是 4.9rc 版，如今可替换为正式版。</p></blockquote><h2 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h2><p>Linus Torvalds 在内核邮件列表上宣布正式释出 Linux Kernel 4.9，4.10合并窗口开启。为期两周的合并窗口预计将在圣诞节这天关闭，Linus表示因为假期的原因他考虑缩短或延长合并窗口，最有可能的做法是缩短而不是延长，以便于开发者们能度过一个平静的圣诞假期。Linux Kernel 4.9的主要特性包括：<a href="http://lwn.net/Articles/692953/" target="_blank" rel="noopener">虚拟映射内核栈分配</a>，英特尔的粗粒度保护机制<a href="https://lwn.net/Articles/689395/" target="_blank" rel="noopener">pkeys系统调用</a>，<a href="https://lwn.net/Articles/701165/" target="_blank" rel="noopener">BBR拥堵控制算法</a>，支持模块化智能手机的<a href="https://lwn.net/Articles/648400/" target="_blank" rel="noopener">Greybus</a>子系统，大量的文件系统改进，驱动更新如改进 AMD Radeon GPU 支持，bug修正，等等。4.9包含了16,216个非合并变更集，是内核项目历史上最忙碌的开发周期，AMD贡献了最多的行变更，最活跃的开发者中就有开发AMD PowerPlay驱动的Rex Zhu。</p><hr><h2 id="关于-BBR"><a href="#关于-BBR" class="headerlink" title="关于 BBR"></a>关于 BBR</h2><p>经过几天使用体验，Linux Kernel 4.9 新增的BBR拥塞控制算法确实对vps网络速度的提升很大。以最近测试位于迈阿密的vps为例，在 Ubuntu 16.04 - Linxu Kernel 3.04 上，从vps到国内的下载速度只有不到 5Mbps ，而在更换至 4.9 版内核并开启BBR后，下载速度高达46Mbps，效果能与锐速相媲美。而锐速是收费软件，BBR则是免费开源的且内核自带。<br><a id="more"></a><br><img src="/images/35/cmcc.png" alt="移动50M &amp; 开启 BBR"></p><p><img src="/images/35/bbr_am_9.jpg" alt="电信100M &amp; 开启 BBR"></p><p>不过，根据其他人的测试，不是所有的vps都适合用BBR来加速，线路不同效果也不一样。美国东部地区、欧洲地区，这些到国内低速、高延迟的线路可能更适合使用BBR。</p><hr><p>Linux Kernel 4.9：<a href="https://www.kernel.org/" target="_blank" rel="noopener">下载页</a></p><hr><p>via:<a href="http://www.solidot.org/story?sid=50691" target="_blank" rel="noopener">Linux Kernel 4.9发布</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> BBR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启TCP BBR拥塞控制算法</title>
      <link href="/2016/12/08/34/"/>
      <url>/2016/12/08/34/</url>
      
        <content type="html"><![CDATA[<p>Linux 4.9版的内核新增了名为BBR的拥塞控制算法，可以有效加快TCP数据传输速度和降低延迟。</p><blockquote><p>注：openvz架构的vps不能开启bbr，因为openvz不支持更换内核。</p></blockquote><h2 id="Debian-Ubuntu-系统"><a href="#Debian-Ubuntu-系统" class="headerlink" title="Debian/Ubuntu 系统"></a>Debian/Ubuntu 系统</h2><ul><li>下载最新内核,最新内核查看<a href="http://kernel.ubuntu.com/~kernel-ppa/mainline" target="_blank" rel="noopener">这里</a>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9-rc8/linux-image-4.9.0-040900rc8-generic_4.9.0-040900rc8.201612051443_amd64.deb</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>安装内核</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i linux-image-4.9.0*.deb</span><br></pre></td></tr></table></figure></li><li><p>删除其余内核，除4.9以外的内核都要删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l|grep linux-image </span><br><span class="line">apt-get remove linux-image-   #按上条命令显示的结果补全</span><br></pre></td></tr></table></figure></li><li><p>更新 grub 系统引导文件并重启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li><p>开启bbr</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure></li></ul><p>保存生效<code>sysctl -p</code><br>执行<code>sysctl net.ipv4.tcp_available_congestion_control</code><br>如果结果中有<code>bbr</code>, 则证明你的内核已开启bbr<br>执行<code>lsmod | grep bbr</code>, 看到有 tcp_bbr 模块即说明bbr已启动  </p><hr><h2 id="Centos6-7"><a href="#Centos6-7" class="headerlink" title="Centos6/7"></a>Centos6/7</h2><ul><li>安装方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh 地址</span><br></pre></td></tr></table></figure><ul><li><p>地址</p><p>EL6(Centos6/RedHat6) : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://elrepo.org/people/ajb/devel/kernel-ml/el6/x86_64/RPMS/kernel-ml-4.9.0-0.rc8.el6.elrepo.x86_64.rpm</span><br></pre></td></tr></table></figure><p>EL7(Centos7/RedHat7) : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://elrepo.org/people/ajb/devel/kernel-ml/el7/x86_64/RPMS/kernel-ml-4.9.0-0.rc8.el7.elrepo.x86_64.rpm</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>PS.还有一些devel headers的包啥的你们看心情吧，我为了稳定点是全装了，需要注意的是有些和原依赖有冲突。请使用<code>rpm -qa|grep kernel</code>获取包全名，使用<code>rpm -e</code> 包全名 <code>--nodeps</code> 进行强制删除，然后 <code>rpm -ivh 地址</code> 进行安装。</p></blockquote><p><em>另外部分机器重启后不会使用新内核，请修改 <code>/etc/grub.conf</code> ，查看 <code>default=，0</code> 为下方第一个内核，一般是最新的（也就是我们安装的）</em></p><hr><p>via:</p><ul><li><a href="https://goo.gl/lkUUBd" target="_blank" rel="noopener">开启TCP BBR拥塞控制算法</a></li><li><a href="https://goo.gl/FcXuN8" target="_blank" rel="noopener">Centos6/7 加强版BBR安装方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
            <tag> BBR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MTS/M2T/M2TS/TS合并工具 HD Remuxer V1.1.4.8</title>
      <link href="/2016/12/05/33/"/>
      <url>/2016/12/05/33/</url>
      
        <content type="html"><![CDATA[<p>最近在别人电脑上使用 you-get 下载视频，ffms 出了问题，这导致视频合并不了。ffms的问题一时解决不了，看着一堆分割的ts文件，只有想办法合并视频。</p><p>然后找到了一个合并工具 HD Remuxer ，这款软件和tsMuxer类似，但合并分块视频的功能更优秀。全选同一个文件夹内的ts文件，自动按文件名排序合并，而tsMuxer只有单选追加模式。</p><a id="more"></a><p><img src="/images/HD_Remuxer.png" alt="软件界面"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>支持合并的视频格式有TS\MTS\M2T\M2TS四种，但是合并的视频必须是相同编码的若干段，否则一定会出问题。<br>为简化操作，默认合并输出的文件名为Final.ts<br>由于经常出现因为视频关键帧导致合并后的视频时间轴显示不正确的问题，所以工具内置了视频时间修复功能(依附TSmuxer程序)，在菜单——》修复时间中开启。<br>界面语言在理论上应该是支持简繁系统，如果出现乱码也没办法。</p><p>1.本工具必须位于【全英文】的路径下，否则eac3to无法正常工作。</p><p>正确：D:\HD Remuxer 或者 D:\Program Files\HD Remuxer              （只要是全英文路径均可）<br>错误：D:\测试\HD Remuxer 或者 D:\Program Files\工具\HD Remuxer    （含有非英文字符则会出错）</p><p>2.需要进行视频拆分的文件，请确保文件名中【不含有非英文及其他特殊字符】，否则eac3to可能无法正常执行命令。</p><p>Changelog：</p><p>V1.1.4.8 (2016年01月10日)</p><p>1.修复 低配置电脑[合并视频模式]可能无响应</p><p>V1.1.4.7 (2016年01月02日)</p><p>1.新增 合并视频模式显示进度条 [一键合并模式不显示]<br>2.优化 小体积视频片段的合并算法<br>3.更新 FFmpeg 2.8.4<br>4.更新 MP4Box 0.5.2r376(gpac)<br>5.更新 eac3to 3.31</p><p>V1.1.4.6 (2015年01月17日)</p><p>1.修复 文件路径过长导致程序卡死<br>2.修复 变更合并内容时保存路径无法自动更改<br>3.调整 单次合并30个以上的视频片段需将视频放至同一目录下<br>4.调整 程序异常模块<br>5.更新 ffmpeg</p><p>V1.1.4.5 (2014年11月23日)</p><p>1.新增 所有窗口均支持文件拖拽<br>2.调整 [分解视频]模块信息提示改为状态栏信息<br>3.调整 取消所有子窗口强制最顶端<br>4.更新 ffmpeg</p><p>V1.1.4.4 (2014年06月24日)</p><p>1.新增 [修复时间]模块支持自定义帧速率与音轨延迟功能<br>2.更新 各模块代码<br>3.更新 TSmuxer</p><p>V1.1.4.3 (2014年05月31日)</p><p>1.修复 未导入封装流MP4Box依旧执行指令<br>2.修复 默认前往更新地址为博客地址</p><p>V1.1.4.2 (2014年05月11日)</p><p>1.新增 支持封装MP4格式的视频 [依附mp4box]<br>2.修复 保存文件时手动输入后缀名引起程序崩溃<br>3.修复 [检查更新]窗口被拉伸后控件错位问题<br>4.更新 ffmpeg</p><p>V1.1.4.1 (2014年01月31日)</p><p>1.修复 程序多开的问题<br>2.修复 配置文件信息丢失导致程序崩溃的问题</p><p>V1.1.4.0 (2014年01月28日)</p><p>1.新增 一键合并功能，一步完成视频合并、时间轴修复工作 [依附ffmpeg]<br>2.新增 封装界面支持自定义调整音轨功能，正数为音轨延迟，负数为音轨提前，单位为毫秒<br>3.新增 检查更新功能，联网检测工具最新版本</p><p>V1.1.3.0 (2013年11月26日)</p><p>1.修复 执行指令过程中，控件按钮依然可以点击的问题</p><p>V1.1.2.0 (2013年3月09日)</p><p>1.新增 分解视频模块 [依附eac3to]<br>2.新增 封装TS、M2TS视频模块<br>3.修复 键盘输入修改工具路径无法保存的问题<br>4.修复 VOB音轨判断错误造成分解崩溃的问题<br>5.调整 提示信息的逻辑顺序</p><p>V1.1.1.0 (2013年2月14日)</p><p>1.调整 所有模块显示输出界面<br>2.调整 导入支持视频格式的默认顺序</p><p>V1.1.0.0 (2013年1月17日)</p><p>1.新增 [视频分割]模块 (依附TSmuxer)<br>2.修复 [修复时间]模块只能导入TS视频的问题<br>3.修复 [修复时间]模块中的视频保存路径只能输出TS视频的问题</p><p>V1.0.0.0 (2013年1月16日)<br>1.初始版本发布</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote><p><a href="https://d.bfdz.ink/?dir=software/HD%20Remuxer" target="_blank" rel="noopener">HD Remuxer</a></p></blockquote><blockquote><p>百度网盘：<a href="http://pan.baidu.com/s/1jHKVdem" target="_blank" rel="noopener">http://pan.baidu.com/s/1jHKVdem</a></p></blockquote><h2 id="转载来源"><a href="#转载来源" class="headerlink" title="转载来源"></a>转载来源</h2><p><a href="http://blog.sina.com.cn/s/blog_69a52b040101ho2p.html" target="_blank" rel="noopener">MTS/M2T/M2TS/TS合并工具 HD Remuxer V1.1.4.8</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ts </tag>
            
            <tag> 视频合并 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 中安装rar和unrar</title>
      <link href="/2016/11/27/32/"/>
      <url>/2016/11/27/32/</url>
      
        <content type="html"><![CDATA[<p>有时需要上传rar格式的压缩包到linux系统中，因为在Windows环境下还是rar比较常用。但linux某些发行版没有rar的在线安装软件包，所以需要手动下载安装。</p><p>首先访问<a href="http://www.rarlab.com/download.htm" target="_blank" rel="noopener">RARLAB官方下载页</a>，选取合适的Linux软件包。</p><p>下载软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.rarlab.com/rar/rarlinux-5.4.0.tar.gz</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxf rarlinux-5.4.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>软件包提供了多种简单的安装使用方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/bin</span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/lib</span><br><span class="line">cp rar unrar /usr/<span class="built_in">local</span>/bin</span><br><span class="line">cp rarfiles.lst /etc</span><br><span class="line">cp default.sfx /usr/<span class="built_in">local</span>/lib</span><br></pre></td></tr></table></figure></p><p>这里我使用的是直接复制rar和unrar到 <code>/usr/local/bin</code> 的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> rar</span><br><span class="line">cp rar unrar /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure><p>安装完成，现在就可以愉快地使用rar和unrar来压缩与解压了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> rar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Landscape-plus 主题修改和优化</title>
      <link href="/2016/11/24/31/"/>
      <url>/2016/11/24/31/</url>
      
        <content type="html"><![CDATA[<h3 id="jQuery库的优化"><a href="#jQuery库的优化" class="headerlink" title="jQuery库的优化"></a>jQuery库的优化</h3><p>Landscape-plus主题本身针对Landscape做过优化，将谷歌的CDN替换成了CloudFlare的。但目前国内访问CloudFlare的速度十分不理想，所以我选择了换用Bootstrap中文网提供的CDN。</p><p>修改 <code>\themes\landscape-plus\layout\_partial\after-footer.ejs</code> 第62行，将原来的<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>替换成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/jquery/2.1.4/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//&lt;![CDATA[</span><br><span class="line">if (typeof jQuery == &apos;undefined&apos;) &#123;</span><br><span class="line">  document.write(unescape(&quot;%3Cscript src=&apos;/js/jquery-2.1.4.min.js&apos; type=&apos;text/javascript&apos;%3E%3C/script%3E&quot;));&#125;</span><br><span class="line">// ]]&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>BootstrapCDN是支持HTTPS的，所以也方便了博客启用HTTPS。这里不但将CloudFlare的jQuery替换成了Bootstrap的，随后还进行了一个判断，如果获取BootstrapCDN的jQuery失败，则使用本网站自己的jQuery。为了让这段代码有效，我们要去jQuery官方下载合适版本的jQuery并将其放到 <code>\themes\landscape-plus\source\js</code> 目录下。还有一点需要特别注意，那就是jQuery这个文件在Hexo生产博客时会被解析，因此一定要将jQuery文件开头处的 <code>//@ sourceMappingURL=jquery-2.0.3.min.map</code> 这一行代码删去，否则会导致博客无法生成。</p><hr><h3 id="完全启用-HTTPS"><a href="#完全启用-HTTPS" class="headerlink" title="完全启用 HTTPS"></a>完全启用 HTTPS</h3><p>我的另一篇博文(<a href="https://www.bfdz.ink/2016/11/08/28/">LNMP配置启用HTTPS</a>)讲了在LNMP环境下为网站配置HTTPS的方法，但博客在启用HTTPS后会遇到了一些资源不能使用HTTPS的问题。</p><h4 id="多说头像和表情"><a href="#多说头像和表情" class="headerlink" title="多说头像和表情"></a>多说头像和表情</h4><p>我的博客采用的是多说评论系统，第三方登录的帐号，其评论头像往往不支持HTTPS。这样导致了Chrome会出现警告，网站也没有小绿锁。我采用的解决方法是将头像用支持HTTPS的CDN做代理，github上面有个现成项目：<a href="https://github.com/rainwsy/duoshuo-https" target="_blank" rel="noopener">duoshuo-https</a></p><p>修改 <code>\themes\landscape-plus\layout\_partial\after-footer.ejs</code> 第11行, 将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;//static.duoshuo.com/embed.js&apos;</span><br></pre></td></tr></table></figure><p>替换成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;//dn-hb0716.qbox.me/duoshuo.js&apos;</span><br></pre></td></tr></table></figure><h4 id="关闭分享按钮"><a href="#关闭分享按钮" class="headerlink" title="关闭分享按钮"></a>关闭分享按钮</h4><p>主题自带的百度分享同样对HTTPS的支持有问题，在个可在主题配置文件中关闭。关闭后分享按钮又恢复成Hexo默认的了，我感觉这个功能也没啥用，所以关闭之。默认分享按钮在Hexo主配置没有关闭的地方，找到 <code>/landscape-plus/blob/master/layout/_partial/article.ejs</code> , 删除或注视掉26-30行。其内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (config.baidushare || theme.baidushare)&#123; %&gt;</span><br><span class="line">&lt;a data-url=&quot;&lt;%- post.permalink %&gt;&quot; data-id=&quot;&lt;%= post._id %&gt;&quot; class=&quot;article-share-link&quot; data-share=&quot;baidu&quot; data-title=&quot;&lt;%= post.title %&gt;&quot;&gt;&lt;%= __(&apos;share&apos;) %&gt;&lt;/a&gt;</span><br><span class="line">&lt;% &#125; else &#123; %&gt;</span><br><span class="line">&lt;a data-url=&quot;&lt;%- post.permalink %&gt;&quot; data-id=&quot;&lt;%= post._id %&gt;&quot; class=&quot;article-share-link&quot;&gt;&lt;%= __(&apos;share&apos;) %&gt;&lt;/a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="自动切换-banner-图片"><a href="#自动切换-banner-图片" class="headerlink" title="自动切换 banner 图片"></a>自动切换 banner 图片</h3><h4 id="显示banner和标题透明"><a href="#显示banner和标题透明" class="headerlink" title="显示banner和标题透明"></a>显示banner和标题透明</h4><p>首先要让banner显示出来，Landscape-plus主题为了优化速度默认不显示banner。然后去掉博客名的红色背景色，改成透明的，这样防止影响banner图的效果。主要是修改这个文件 <code>themes/landscape-plus/source/css/_partial/header.styl</code> 的第33行，将这一行 <code>// background: url(banner-url) center #000</code> 替换成 <code>background: center #000</code> ，同时也要注释掉第13、16、32行。第56行修改成 <code>background: rgba(0,0,0,0.2)</code> ,最后一个数字是透明度，可以自己调节。</p><p>自动切换 banner 图片的代码和具体方法是另一位博主写的，下面是直接引用他的<a href="http://kuangqi.me/tricks/hexo-banner-auto-switcher/" target="_blank" rel="noopener">博文</a>：</p><h4 id="添加随机切换图片的脚本"><a href="#添加随机切换图片的脚本" class="headerlink" title="添加随机切换图片的脚本"></a>添加随机切换图片的脚本</h4><p>首先要在themes/landscape-plus/layout/_partial/下新建一个ejs文件，我将其命名为switch-banner.ejs，其中是用于切换banner图片的Javascript代码，代码会每个小时将6张图片轮换一次，也就相当于每10分钟换一张。该文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;% if (theme.switch_banner)&#123; %&gt;</span><br><span class="line">    var d = new Date();</span><br><span class="line">    var m = d.getMinutes();</span><br><span class="line">    var num = Math.ceil((m + 1) / (60 / &lt;%- theme.banner_count %&gt;));</span><br><span class="line">    document.getElementById(&quot;banner&quot;).style.backgroundImage = &quot;url(/css/images/banner&quot; + num + &quot;.jpg)&quot;;</span><br><span class="line">    &lt;% &#125; else &#123; %&gt;</span><br><span class="line">    document.getElementById(&quot;banner&quot;).style.backgroundImage = &quot;url(/css/images/banner.jpg)&quot;;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>代码也比较简单，通过JavaScript的Date对象的getMinutes()来获取当前时间的分钟数，这是一个0～59的数，然后经过一点小算术映射到图片的文件名的编号，注意处理边界情况。</p><p>这里还有一个小修改，就是将图片的张数改成了可配置的，而不是硬编码的。这就需要在Landscape-plus模板的配置文件中设置一个数字。在themes/landscape-plus/_config.yml中添加一行banner_count: 6。请根据实际图片的张数来修改这个数字。</p><p>banner图片要放到 <code>themes/landscape/source/css/images/</code> 目录下，命名为 <code>banner*.jpg</code> ，其中的星号是一个数字。如果是6张图片必须连续地使用1～6这6个数字。</p><h4 id="修改模板调用上述脚本"><a href="#修改模板调用上述脚本" class="headerlink" title="修改模板调用上述脚本"></a>修改模板调用上述脚本</h4><p>下面要修改布局文件来调用这段脚本。在 <code>themes/landscape-plus/layout/_partial/header.ejs</code> 的最后一行（<code>&lt;/header&gt;</code>标记）之前加入一行 <code>&lt;%- partial(&#39;switch-banner&#39;) %&gt;</code> 即可。</p><p>最后，我们需要修改landscape-plus模板的配置文件来开启这个特性。在 <code>themes/landscape-plus/_config.yml</code> 中添加一行 <code>switch_banner: true</code>。</p><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.tiexo.cn/duoshuo-https/" target="_blank" rel="noopener">本站重启多说评论支持HTTPS头像&amp;表情</a><br><a href="http://kuangqi.me/tricks/hexo-optimizations-for-mainland-china/" target="_blank" rel="noopener">Hexo Landscape主题的字体和JS库优化</a><br><a href="http://kuangqi.me/tricks/hexo-banner-auto-switcher/" target="_blank" rel="noopener">自动随机切换Hexo博客的banner图片</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> https </tag>
            
            <tag> Landscape-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks流量管理脚本ss-bash</title>
      <link href="/2016/11/14/30/"/>
      <url>/2016/11/14/30/</url>
      
        <content type="html"><![CDATA[<p>在分享自己搭建的Shadowsocks时，遇到一个问题。Shadowsocks python版虽然自带有多用户配置功能，但无法限制用户流量。而ss-panel+ss-manyuser的多用户分享方案偏商业用途，部署和配置都比较繁琐，数据库和web面板都有不小的资源占用。hellofwy所写的ss-bash的脚本则完美解决了这个问题，下面是这个脚本的简介、安装和注意事项说明：</p><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ss-bash无论是启动、停止，还是添加用户，修改流量限制，都是使用命令，十分简洁、方便。ss-bash原理是使用iptables规则获取各端口的流量，一个端口代表一个用户。脚本循环运行，在固定时间间隔根据iptables结果统计流量使用情况，并在流量超过限制时，添加对应端口的iptables reject规则以禁用端口。</p><p>系统要求为Linux Debian/Ubuntu，shadowsocks python版，iptables需要正常工作中。目前只支持统计ipv4流量。</p><p>github网址：<a href="https://github.com/hellofwy/ss-bash" target="_blank" rel="noopener">https://github.com/hellofwy/ss-bash</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>更新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></p><p>安装pip<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip -y</span><br></pre></td></tr></table></figure></p><p>安装shadowsocks<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure></p><p>安装unzip和bc，bc是使用ss-bash的必备工具。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install unzip</span><br><span class="line">apt-get install bc</span><br></pre></td></tr></table></figure></p><p>下载ss-bash<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/hellofwy/ss-bash/archive/master.zip</span><br><span class="line">unzip master.zip</span><br></pre></td></tr></table></figure></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>查看帮助<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ss-bash-master/</span><br><span class="line">./ssadmin.sh h</span><br></pre></td></tr></table></figure></p><p>添加用户，例如新增用户端口为8388，密码是123456，流量限制100G<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ssadmin.sh add 8388 123456 100G</span><br></pre></td></tr></table></figure></p><p>启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ssadmin.sh start</span><br></pre></td></tr></table></figure></p><p>更详细的说明文档，可以查看官方wiki：<a href="https://github.com/hellofwy/ss-bash/wiki" target="_blank" rel="noopener">https://github.com/hellofwy/ss-bash/wiki</a></p><p>添加开机启动</p><p>编辑 <code>/etc/rc.local</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>在 <code>exit 0</code> 前面加入(路径请自行替换)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/ss-bash-master/ssadmin.sh start</span><br></pre></td></tr></table></figure></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>在使用之前确认已经关闭了原来的shadowsocks，并确保iptables正常。</p><p>1、无法连接上。确认本地shadowsocks客户端帐号无误，访问网站无法打开，客户端日志记录有大量的time out。解决方法：说明是服务器端口被封，尝试换一个端口。</p><p>2、日志记录远程计算机关闭或无法连接，说明shadowsocks没有启动。可能是vps宕机重启后shadowsocks没有启动。解决方法：启动shadowsocks，并为其添加开机启动。</p><p>3、修改加密方式。编辑配置文件 ssmlt.template 即可，例如加密方式改为chacha20<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line"><span class="string">"timeout"</span>: 60,</span><br><span class="line"><span class="string">"method"</span>: <span class="string">"chacha20"</span>,</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级 openssl 环境至 openssl-1.0.2j</title>
      <link href="/2016/11/11/29/"/>
      <url>/2016/11/11/29/</url>
      
        <content type="html"><![CDATA[<p>1、查看源版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@~]<span class="comment"># openssl version -a</span></span><br><span class="line">OpenSSL 1.0.1g</span><br></pre></td></tr></table></figure><p>2、下载 openssl-1.0.2j.tar.gz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2j.tar.gz</span><br></pre></td></tr></table></figure><a id="more"></a><p>3、更新 zlib</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib</span><br></pre></td></tr></table></figure><p>4、解压安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tar zxf openssl-1.0.2j.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-1.0.2j</span><br><span class="line">./config shared zlib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">mv /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class="line">mv /usr/include/openssl /usr/include/openssl.bak</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/ssl/bin/openssl /usr/bin/openssl</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/ssl/include/openssl /usr/include/openssl</span><br><span class="line"><span class="built_in">echo</span> “/usr/<span class="built_in">local</span>/ssl/lib” &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure><p>5、查看是否升级成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@~]<span class="comment"># openssl version -a</span></span><br><span class="line">OpenSSL 1.0.2j  26 Sep 2016</span><br></pre></td></tr></table></figure><hr><p>via:<a href="https://www.i7086.cc/archives/1.html" target="_blank" rel="noopener">升级 openssl 环境至 openssl-1.0.2j</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP配置启用HTTPS</title>
      <link href="/2016/11/08/28/"/>
      <url>/2016/11/08/28/</url>
      
        <content type="html"><![CDATA[<p>HTTPS证书使用由Let’s Encrypt提供的免费证书，有个很方便的小工具可以帮助快速获得证书，参见<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh</a></p><p>LNMP在使用acme.sh申请证书之前需要修改站点的nginx配置，否则会因无法验证导致申请失败。<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ /\.</span><br><span class="line">&#123;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这段配置删掉或注释掉或在这段配置前面加上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location ~ /.well-known </span><br><span class="line">&#123;</span><br><span class="line">allow all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在使用acme.sh成功申请到证书后有三个文件。我同时申请了顶级域名mydomain.com和二级域名<a href="http://www.mydomain.com的证书，acme会自动将两个域名生成单目录多域名证书，这样也方便配置。（此处域名为示例）" target="_blank" rel="noopener">www.mydomain.com的证书，acme会自动将两个域名生成单目录多域名证书，这样也方便配置。（此处域名为示例）</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fullchain.cer</span><br><span class="line">www.mydomain.com.cer</span><br><span class="line">www.mydomain.com.key</span><br></pre></td></tr></table></figure></p><p>在配置ssl时只需要使用fullchain.cer和<a href="http://www.mydomain.com.key，fullchain.cer包含有完整的证书链。如果使用www.mydomain.cer，则在手机浏览器上浏览网站会出现证书不受信任的提示，因为证书链不完整。站点nginx配置文件server段修改如下" target="_blank" rel="noopener">www.mydomain.com.key，fullchain.cer包含有完整的证书链。如果使用www.mydomain.cer，则在手机浏览器上浏览网站会出现证书不受信任的提示，因为证书链不完整。站点nginx配置文件server段修改如下</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#listen 80;</span></span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        <span class="comment">#listen [::]:80;</span></span><br><span class="line">        server_name www.mydomain.com;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /home/wwwroot/www.mydomain.com;</span><br><span class="line">        ssl_certificate      /home/ssl/fullchain.cer;</span><br><span class="line">        ssl_certificate_key  /home/ssl/www.mydomain.com.key;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        ssl_session_cache shared:SSL:10m;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#后面的省略...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>上面的配置server_name只有<a href="http://www.mydomain.com，因为我要将顶级域名重定向到www二级域名。重定向的方法，在nginx配置文件最后面再添加一段server" target="_blank" rel="noopener">www.mydomain.com，因为我要将顶级域名重定向到www二级域名。重定向的方法，在nginx配置文件最后面再添加一段server</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        server_name www.mydomain.com mydomain.com;</span><br><span class="line">        rewrite ^/(.*)$ https://www.mydomain.com/<span class="variable">$1</span> permanent;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改完成后，重新加载nginx配置即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> HTTPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> lnmp </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hostloc论坛每日翻牌</title>
      <link href="/2016/10/31/27/"/>
      <url>/2016/10/31/27/</url>
      
        <content type="html"><![CDATA[<p>仔细读过hostloc论坛积分规则的人，应该会发现有个方法可以快速获得积分，实现升级。就是每天访问10个人的空间，可总计获得20积分。所以某位坛友写了个每日翻牌脚本，自己挂在vps上设个定时任务，升级元老指日可待。</p><a id="more"></a><p><strong>注意：</strong></p><p>运行这个脚本需要先安装、配置好python和相关环境，具体方法网上很多。说一下我遇到过的错误，是缺少两个python的模块，根据报错信息安装好就可以了。解决示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">pip install bs4</span><br></pre></td></tr></table></figure></p><p><strong>hostloc论坛每日翻牌</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uid=<span class="string">"11111"</span>   <span class="comment">#用户名</span></span><br><span class="line">pwd=<span class="string">"11111"</span>   <span class="comment">#密码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http = requests.Session()</span><br><span class="line">http.headers.update(&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></span><br><span class="line">    ,<span class="string">'Accept-Language'</span>:<span class="string">"zh-CN,zh;q=0.8,ko;q=0.6,zh-TW;q=0.4"</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">#http.proxies = &#123;"http":"http://127.0.0.1:8080","https":"http://127.0.0.1:8080"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##打开登陆界面</span></span><br><span class="line">res=http.get(<span class="string">"http://www.hostloc.com/member.php?mod=logging&amp;action=login&amp;infloat=yes&amp;handlekey=login&amp;inajax=1&amp;ajaxtarget=fwin_content_login"</span>)</span><br><span class="line">match=re.search(<span class="string">r'name="formhash" value="(\S+)"'</span>,res.text)</span><br><span class="line"><span class="keyword">if</span>(match):</span><br><span class="line">    formhash=match.group(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">##登陆</span></span><br><span class="line">form=&#123;</span><br><span class="line">    <span class="string">"formhash"</span>:formhash</span><br><span class="line">    ,<span class="string">"referer"</span>:<span class="string">"http://www.hostloc.com/thread-12949-1-1.html"</span></span><br><span class="line">    ,<span class="string">"loginfield"</span>:<span class="string">"username"</span></span><br><span class="line">    ,<span class="string">"username"</span>:uid</span><br><span class="line">    ,<span class="string">"password"</span>:pwd</span><br><span class="line">    ,<span class="string">"questionid"</span>:<span class="number">0</span></span><br><span class="line">    ,<span class="string">"answer"</span>:<span class="string">""</span></span><br><span class="line">    ,<span class="string">"loginsubmit"</span>:<span class="string">"true"</span></span><br><span class="line">&#125;</span><br><span class="line">res=http.post(<span class="string">"http://www.hostloc.com/member.php?mod=logging&amp;action=login&amp;loginsubmit=yes&amp;handlekey=login&amp;loginhash=LWKbr&amp;inajax=1"</span>,data=form)</span><br><span class="line">match=re.search(<span class="string">r"'uid':'"</span>,res.text)</span><br><span class="line"><span class="keyword">if</span>(match):</span><br><span class="line">    print(<span class="string">"登陆成功"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"登陆失败"</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment">##查询今天访问的空间数量  </span></span><br><span class="line">res=http.get(<span class="string">"http://www.hostloc.com/home.php?mod=spacecp&amp;ac=credit&amp;op=log&amp;suboperation=creditrulelog"</span>)</span><br><span class="line">bs=BeautifulSoup(res.text,<span class="string">"html.parser"</span>)</span><br><span class="line">td=bs.find(<span class="string">'td'</span>,string=<span class="string">"访问别人空间"</span>)</span><br><span class="line"><span class="keyword">if</span>(td==<span class="keyword">None</span>): </span><br><span class="line">    print(<span class="string">"信息获取失败"</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">tds=td.parent.find_all(<span class="string">"td"</span>)</span><br><span class="line">today_view_count=int(tds[<span class="number">2</span>].text)    <span class="comment">#今天已经翻牌数</span></span><br><span class="line">last_view_date=tds[<span class="number">5</span>].text         <span class="comment">#上次翻牌时间，这个时间不会自动刷新，所以不能仅仅依据数量就决定不翻牌</span></span><br><span class="line">need_view=last_view_date.find(datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d"</span>))==<span class="number">-1</span>    <span class="comment">#上次翻牌时间是不是今天，不是今天则需要翻</span></span><br><span class="line"><span class="keyword">if</span>(today_view_count&gt;=<span class="number">10</span> <span class="keyword">and</span> (<span class="keyword">not</span> need_view)):       <span class="comment">#不论数量多少，只要上次翻牌时间不是今天就翻。上次翻牌是今天才去判断数量</span></span><br><span class="line">    print(<span class="string">"今日累了，明日再翻！"</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment">##去首页获取等待临幸的网址</span></span><br><span class="line">res=http.get(<span class="string">"http://www.hostloc.com/forum-45-1.html"</span>)</span><br><span class="line">users   =re.findall(<span class="string">"(space-uid\S+)\""</span>,res.text)</span><br><span class="line">viewed=set()</span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> num &lt;<span class="number">13</span>:</span><br><span class="line">    url = users.pop()</span><br><span class="line">    <span class="keyword">if</span>(url <span class="keyword">in</span> viewed):<span class="keyword">continue</span></span><br><span class="line">    viewed.add(url)</span><br><span class="line">    print(url)</span><br><span class="line">    res=http.get(<span class="string">'http://www.hostloc.com/'</span>+url)</span><br><span class="line">    users.extend(re.findall(<span class="string">"(space-uid\S+)\""</span>,res.text))</span><br><span class="line">    num+=<span class="number">1</span></span><br><span class="line">   </span><br><span class="line">print(<span class="string">"今日累了，明日再翻！"</span>)</span><br></pre></td></tr></table></figure><p><strong>设置定时任务</strong></p><p>先在脚本第一行加上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br></pre></td></tr></table></figure></p><p>然后设置crontab<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></p><p>在最后添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 9 * * * /home/hostloc.py</span><br></pre></td></tr></table></figure></p><blockquote><p><a href="https://segmentfault.com/q/1010000000654014" target="_blank" rel="noopener">为何要在脚本第一行必须明确指定解释程序？</a></p></blockquote><hr><p>脚本来源：<a href="https://gist.github.com/siyisiyi/10bc535464d4d831f5e8a9feed0e0e8c" target="_blank" rel="noopener">hostloc.py</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> hostloc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键备份脚本backup.sh</title>
      <link href="/2016/10/31/26/"/>
      <url>/2016/10/31/26/</url>
      
        <content type="html"><![CDATA[<p>做网站最重要的是什么？数据！数据，是网站之本，备份，是每一个站长都应该重视的事情。但同时，备份也是一件繁琐和重复的事情。所以，这些事情，肯定能做到自动化的。<br>下面来介绍一下这个一键备份脚本 backup.sh。</p><p><strong>总结一下 backup.sh 特点：</strong><br>1、支持 MySQL/MariaDB/Percona 的数据库全量备份或选择备份；<br>2、支持指定目录或文件的备份；<br>3、支持加密备份文件（需安装 openssl 命令，可选）；<br>4、支持上传至 Google Drive（需先安装 gdrive 并配置，可选）；<br>5、支持在删除指定天数本地旧的备份文件的同时，也删除 Google Drive 上的同名文件（可选）。<br><a id="more"></a><br><strong>2016 年 8 月 21 日更新：</strong><br>1、新增：指定 MySQL/MariaDB 的数据库名进行备份，可以同时指定多个；<br>2、新增：删除指定天数本地旧的备份文件。</p><p><strong>2016 年 9 月 8 日更新：</strong><br>1、新增：删除指定天数本地旧的备份文件的同时，可选删除 Google Drive 上的同名文件，以节约空间。</p><p>教程模式开启：</p><h3 id="1、下载该脚本并赋予执行权限"><a href="#1、下载该脚本并赋予执行权限" class="headerlink" title="1、下载该脚本并赋予执行权限"></a>1、下载该脚本并赋予执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/teddysun/across/raw/master/backup.sh</span><br><span class="line">chmod +x backup.sh</span><br></pre></td></tr></table></figure><h3 id="2、修改并配置脚本"><a href="#2、修改并配置脚本" class="headerlink" title="2、修改并配置脚本"></a>2、修改并配置脚本</h3><p>请使用 vim 或 nano 等工具来修改。</p><p><strong>关于变量名的一些说明：</strong></p><p>ENCRYPTFLG（加密FLG，true 为加密，false 为不加密，默认是加密）<br>BACKUPPASS（加密密码，重要，务必要修改）<br>LOCALDIR（备份目录，可自己指定）<br>TEMPDIR（备份目录的临时目录，可自己指定）<br>LOGFILE（脚本运行产生的日志文件路径）<br>MYSQL_ROOT_PASSWORD（MySQL 或 MariaDB 的 root 用户密码）<br>MYSQL_DATABASE_NAME（指定 MySQL 数据库名，留空则是备份所有数据库）<br><strong>※ MYSQL_DATABASE_NAME 是一个数组变量，可以指定多个。举例如下：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_DATABASE_NAME[0]=<span class="string">"phpmyadmin"</span></span><br><span class="line">MYSQL_DATABASE_NAME[1]=<span class="string">"test"</span></span><br></pre></td></tr></table></figure></p><p>BACKUP（需要备份的指定目录或文件列表，留空就是不备份目录或文件）</p><p><strong>※ BACKUP 是一个数组变量，可以指定多个。举例如下：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BACKUP[0]=<span class="string">"/data/www/default/test.tgz"</span></span><br><span class="line">BACKUP[1]=<span class="string">"/data/www/default/test/"</span></span><br><span class="line">BACKUP[2]=<span class="string">"/data/www/default/test2/"</span></span><br></pre></td></tr></table></figure></p><p>LOCALAGEDAILIES（指定多少天之后删除本地旧的备份文件，默认为 7 天）<br>DELETE_REMOTE_FILE_FLG（删除 Google Drive 上的备份文件FLG，true 为删除，false 为不删除，默认是删除）</p><p><strong>一些注意事项的说明：</strong></p><p>1）脚本需要用 root 用户来执行；<br>2）脚本需要用到 openssl 来加密，请事先安装好；<br>3）脚本默认备份所有的数据库（全量备份）；<br>4）备份文件的解密命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl enc -aes256 -<span class="keyword">in</span> [ENCRYPTED BACKUP] -out decrypted_backup.tgz -pass pass:[BACKUPPASS] -d -md sha1</span><br></pre></td></tr></table></figure></p><p>5）备份文件解密后，解压命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxPf [DECRYPTION BACKUP FILE]</span><br></pre></td></tr></table></figure></p><p><strong>解释一下参数 -P：</strong><br>tar 压缩文件默认都是相对路径的。加个 -P 是为了 tar 能以绝对路径压缩文件。因此，解压的时候也要带个 -P 参数。</p><h3 id="3、配置-gdrive-命令"><a href="#3、配置-gdrive-命令" class="headerlink" title="3、配置 gdrive 命令"></a>3、配置 gdrive 命令</h3><p>gdrive 是一个命令行工具，用于 Google Drive 的上传下载等操作。官网网站：<br><a href="https://github.com/prasmussen/gdrive" target="_blank" rel="noopener">https://github.com/prasmussen/gdrive</a></p><p>当然，你可以用以下的命令来安装 gdrive。</p><p><strong>x86_64（64位）：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/bin/gdrive http://dl.teddysun.com/files/gdrive-linux-x64</span><br><span class="line">chmod +x /usr/bin/gdrive</span><br></pre></td></tr></table></figure></p><p><strong>i386（32位）</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/bin/gdrive http://dl.teddysun.com/files/gdrive-linux-386</span><br><span class="line">chmod +x /usr/bin/gdrive</span><br></pre></td></tr></table></figure></p><p>然后，运行以下命令开始获取授权：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdrive about</span><br></pre></td></tr></table></figure></p><p>根据提示用浏览器打开 gdrive 给出的 URL，点击接受（Accept），然后将浏览器上显示出来的字符串粘贴回命令行里，完成授权。</p><h3 id="4、运行脚本开始备份"><a href="#4、运行脚本开始备份" class="headerlink" title="4、运行脚本开始备份"></a>4、运行脚本开始备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./backup.sh</span><br></pre></td></tr></table></figure><p>脚本默认会显示备份进度，并在最后统计出所需时间。<br>如果你想将脚本加入到 cron 自动运行的话，就不需要前台显示备份进度，只写日志就可以了。<br>这个时候你需要稍微改一下脚本中的 log 函数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date "+%Y-%m-%d %H:%M:%S")</span>"</span> <span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$(date "+%Y-%m-%d %H:%M:%S")</span>"</span> <span class="string">"<span class="variable">$1</span>"</span> &gt;&gt; <span class="variable">$&#123;LOGFILE&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>改为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$(date "+%Y-%m-%d %H:%M:%S")</span>"</span> <span class="string">"<span class="variable">$1</span>"</span> &gt;&gt; <span class="variable">$&#123;LOGFILE&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>关于如何使用 cron 自动备份，以 CentOS 6 来举例说明。</p><p>修改文件 /etc/crontab，内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/<span class="built_in">local</span>/bin:/usr/<span class="built_in">local</span>/sbin:~/bin</span><br><span class="line">MAILTO=root</span><br><span class="line">HOME=/root</span><br><span class="line"></span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name command to be executed</span></span><br><span class="line">30  1  *  *  * root bash /root/backup.sh</span><br></pre></td></tr></table></figure></p><p>以上表示，每天凌晨 1 点 30 分，root 用户执行一次 backup.sh 脚本。</p><p><strong>注意：</strong><br>一定要修改其中的 PATH 和 HOME 变量的值。<br>尤其是 HOME 变量，gdrive 命令能否正确执行，是要依赖于其配置文件的。默认用 root 配置的话，其配置文件夹应该是 /root/.gdrive/ ，所以要更改 HOME 的值。</p><p>最后，欢迎交流和提出意见。</p><hr><p>转载来源：<a href="https://teddysun.com/" target="_blank" rel="noopener">秋水逸冰</a> » <a href="https://teddysun.com/469.html" target="_blank" rel="noopener">一键备份脚本backup.sh</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 一键备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shadowsocks 优化</title>
      <link href="/2016/10/25/25/"/>
      <url>/2016/10/25/25/</url>
      
        <content type="html"><![CDATA[<blockquote><p>通过学习这篇文章，个人采用的优化措施：优化内核参数+TCP优化+锐速+安装gevent+CHACHA20+22端口，仅供参考。</p></blockquote><h3 id="1-系统层面"><a href="#1-系统层面" class="headerlink" title="1. 系统层面"></a>1. 系统层面</h3><p>基于kvm架构vps的优化<br>这方面SS给出了非常详尽的优化指南，主要有：优化内核参数，开启TCP Fast Open<br><a id="more"></a>   </p><p>####1.1优化内核参数<br>编辑<code>vi /etc/sysctl.conf</code><br>复制进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># max open files</span><br><span class="line">fs.file-max = 51200</span><br><span class="line"># max read buffer</span><br><span class="line">net.core.rmem_max = 67108864</span><br><span class="line"># max write buffer</span><br><span class="line">net.core.wmem_max = 67108864</span><br><span class="line"># default read buffer</span><br><span class="line">net.core.rmem_default = 65536</span><br><span class="line"># default write buffer</span><br><span class="line">net.core.wmem_default = 65536</span><br><span class="line"># max processor input queue</span><br><span class="line">net.core.netdev_max_backlog = 4096</span><br><span class="line"># max backlog</span><br><span class="line">net.core.somaxconn = 4096</span><br><span class="line"></span><br><span class="line"># resist SYN flood attacks</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"># reuse timewait sockets when safe</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line"># turn off fast timewait sockets recycling</span><br><span class="line">net.ipv4.tcp_tw_recycle = 0</span><br><span class="line"># short FIN timeout</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line"># short keepalive time</span><br><span class="line">net.ipv4.tcp_keepalive_time = 1200</span><br><span class="line"># outbound port range</span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65000</span><br><span class="line"># max SYN backlog</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class="line"># max timewait sockets held by system simultaneously</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line"># TCP receive buffer</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 67108864</span><br><span class="line"># TCP write buffer</span><br><span class="line">net.ipv4.tcp_wmem = 4096 65536 67108864</span><br><span class="line"># turn on path MTU discovery</span><br><span class="line">net.ipv4.tcp_mtu_probing = 1</span><br><span class="line"></span><br><span class="line"># for high-latency network</span><br><span class="line">net.ipv4.tcp_congestion_control = hybla</span><br><span class="line"># forward ivp4</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>保存生效<br><code>sysctl -p</code><br>其中最后的hybla是为高延迟网络（如美国，欧洲）准备的算法，需要内核支持，测试内核是否支持，在终端输入：<br><code>sysctl net.ipv4.tcp_available_congestion_control</code><br>如果结果中有hybla，则证明你的内核已开启hybla，如果没有hybla，可以用命令<code>modprobe tcp_hybla</code>开启。</p><p>对于低延迟的网络（如日本，香港等），可以使用<code>htcp</code>，可以非常显著的提高速度，首先使用<code>modprobe tcp_htcp</code>开启，再将<code>net.ipv4.tcp_congestion_control = hybla</code>改为<code>net.ipv4.tcp_congestion_control = htcp</code>，建议EC2日本用户使用这个算法。</p><hr><p>####1.2 TCP优化<br>1.修改文件句柄数限制<br>如果是ubuntu/centos均可修改<code>/etc/sysctl.conf</code><br>找到<code>fs.file-max</code>这一行，修改其值为<code>1024000</code>，并保存退出。然后执行<code>sysctl -p</code>使其生效<br>修改<code>vi /etc/security/limits.conf</code>文件，加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*               soft    nofile           512000</span><br><span class="line">*               hard    nofile          1024000</span><br></pre></td></tr></table></figure></p><p>针对centos,还需要修改<code>vi /etc/pam.d/common-session</code>文件，加入<br><code>session required pam_limits.so</code>  </p><p>2.修改<code>vi /etc/profile</code>文件，加入<br><code>ulimit -SHn 1024000</code><br>然后重启服务器执行<code>ulimit -n</code>，查询返回1024000即可。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sysctl.conf报错解决方法</span><br><span class="line">修复modprobe的：</span><br><span class="line">rm -f /sbin/modprobe </span><br><span class="line">ln -s /bin/true /sbin/modprobe</span><br><span class="line">修复sysctl的：</span><br><span class="line">rm -f /sbin/sysctl </span><br><span class="line">ln -s /bin/true /sbin/sysctl</span><br></pre></td></tr></table></figure><hr><p>####1.3 锐速<br>锐速是TCP底层加速软件,官方已停止推出永久免费版本,但网上有破解版可以继续使用。需要购买的话先到锐速官网注册帐号,并确认<a href="http://dl.serverspeeder.com/ls.do?m=availables" target="_blank" rel="noopener">内核版本</a>是否支持锐速的版本。  </p><p>一键安装速锐破解版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure></p><p>一键卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f</span><br></pre></td></tr></table></figure></p><p>设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Enter your accelerated interface(s) [eth0]: eth0</span><br><span class="line">Enter your outbound bandwidth [1000000 kbps]: 1000000</span><br><span class="line">Enter your inbound bandwidth [1000000 kbps]: 1000000</span><br><span class="line">Configure shortRtt-bypass [0 ms]: 0</span><br><span class="line">Auto load ServerSpeeder on linux start-up? [n]:y #是否开机自启</span><br><span class="line">Run ServerSpeeder now? [y]:y #是否现在启动</span><br></pre></td></tr></table></figure></p><p>执行<code>lsmod</code>，看到有<code>appex0</code>模块即说明锐速已正常安装并启动。   </p><p>至此，安装就结束了，但还有后续配置。<br>修改<code>vi /serverspeeder/etc/config</code>文件的几个参数以使锐速更好的工作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">accppp=&quot;1&quot; #加速PPTP、L2TP V-P-N；设为1表示开启，设为0表示关闭</span><br><span class="line">advinacc=&quot;1&quot; #高级入向加速开关；设为 1 表示开启，设为 0 表示关闭；开启此功能可以得到更好的流入方向流量加速效果；</span><br><span class="line">maxmode=&quot;1&quot; #最大传输模式；设为 1 表示开启；设为 0 表示关闭；开启后会进一步提高加速效果，但是可能会降低有效数据率。</span><br><span class="line">rsc=&quot;1&quot; #网卡接收端合并开关；设为 1 表示开启，设为 0 表示关闭；在有些较新的网卡驱动中，带有 RSC 算法的，需要打开该功能。</span><br><span class="line">l2wQLimit=&quot;512 4096&quot; #从 LAN 到 WAN 加速引擎在缓冲池充满和空闲时分别能够缓存的数据包队列的长度的上限；该值设置的高会获得更好的加速效果，但是会消耗更多的内存</span><br><span class="line">w2lQLimit=&quot;512 4096&quot; #从 WAN 到 LAN 加速引擎在缓冲池充满和空闲时分别能够缓存的数据包队列的长度的上限；该值设置的高会获得更好的加速效果，但是会消耗更多的内存</span><br></pre></td></tr></table></figure></p><p>重读配置以使配置生效<code>/serverspeeder/bin/serverSpeeder.sh reload</code>   </p><p>查看锐速当前状态<code>/serverspeeder/bin/serverSpeeder.sh stats</code>  </p><p>查看所有命令<code>/serverspeeder/bin/serverSpeeder.sh help</code>  </p><p>停止<code>/serverspeeder/bin/serverSpeeder.sh stop</code>  </p><p>启动<code>/serverspeeder/bin/serverSpeeder.sh start</code>  </p><p>重启锐速<code>service serverSpeeder restart</code>  </p><hr><p>####1.4 开启TCP Fast Open<br>这个需要服务器和客户端都是Linux 3.7+的内核，一般Linux的服务器发行版只有debian jessie有3.7+的，客户端用Linux更是珍稀动物，所以这个不多说，如果你的服务器端和客户端都是Linux 3.7+的内核，那就在服务端和客户端的<code>vi /etc/sysctl.conf</code>文件中再加上一行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># turn on TCP Fast Open on both client and server side</span><br><span class="line">net.ipv4.tcp_fastopen = 3</span><br></pre></td></tr></table></figure></p><p>然后把<code>vi /etc/shadowsocks.json</code>配置文件中”fast_open”: false改为”fast_open”: true。这样速度也将会有非常显著的提升。</p><hr><h3 id="2-加密层面"><a href="#2-加密层面" class="headerlink" title="2. 加密层面"></a>2. 加密层面</h3><p>####2.1 安装M2Crypto<br>这个可以提高SS的加密速度，安装办法：<br>Debian/Ubuntu<br><code>apt-get install python-m2crypto</code><br>安装之后重启SS，速度将会有一定的提升  </p><p>CentOS<br>先安装依赖包：<br><code>yum install -y openssl-devel gcc swig python-devel autoconf libtool</code><br>安装setuptools：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/iMeiji/shadowsocks_install/master/ez_setup.py</span><br><span class="line">python ez_setup.py install</span><br></pre></td></tr></table></figure></p><p>再通过pip安装M2Crypto：<br><code>pip install M2Crypto</code><br>或者<code>pip install M2Crypto --upgrade</code>  </p><hr><p>####2.2 安装 gevent<br>安装 gevent可以提高 Shadowsocks 的性能。<br>Debian/Ubuntu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-dev</span><br><span class="line">apt-get install libevent-dev</span><br><span class="line">apt-get install python-setuptools</span><br><span class="line">apt-get install python-gevent</span><br><span class="line">easy_install greenlet</span><br><span class="line">easy_install gevent</span><br></pre></td></tr></table></figure></p><p>CentOS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y libevent</span><br><span class="line">pip install greenlet</span><br><span class="line">pip install gevent</span><br></pre></td></tr></table></figure></p><hr><p>####2.3 使用CHACHA20加密算法<br>首先，安装libsodium，让系统支持chacha20算法。<br>Debian/Ubuntu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install build-essential</span><br><span class="line">wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span><br><span class="line">tar xf LATEST.tar.gz &amp;&amp; cd libsodium*</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure></p><p>CentOS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;Development Tools&quot;</span><br><span class="line">wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span><br><span class="line">tar zxf LATEST.tar.gz</span><br><span class="line">cd libsodium* </span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">vi /etc/ld.so.conf</span><br><span class="line">添加一行：</span><br><span class="line">/usr/local/lib</span><br><span class="line">保存退出后，运行命令：</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure></p><p>然后修改ss加密方式：<br><code>vi /etc/shadowsocks.json</code><br>“method”:”aes-256-cfb”改成”method”:”chacha20”,重启SS即可<code>/etc/init.d/shadowsocks restart</code>    </p><hr><h3 id="3-网络层面"><a href="#3-网络层面" class="headerlink" title="3. 网络层面"></a>3. 网络层面</h3><p>此外，选择合适的端口也能优化梯子的速度，广大SS用户的实践经验表明，检查站（GFW）存在一种机制来降低自身的运算压力，即常用的协议端口（如http，smtp，ssh，https，ftp等）的检查较少，所以建议SS绑定这些常用的端口（如：21，22，25，80，443），速度也会有显著提升。<br>如果你还要给小伙伴爬，那我建议开启多个端口而不是共用，这样网络会更加顺畅。  </p><p>####3.1 防火墙设置（如有）<br>自动调整MTU<br><code>iptables -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</code>  </p><p>开启 NAT （记得把 eth0 改成自己的网卡名，openvz 的基本是 venet0 ）<br><code>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</code>  </p><p>开启 IPv4 的转发<br><code>sysctl -w net.ipv4.ip_forward=1</code>  </p><p>打开 443 端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line">iptables -I INPUT -p udp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>重启防火墙iptables：<br><code>service iptables restart</code>  </p><hr><p>参考<br><a href="https://www.zxc.so/shadowsocks-ladder.html" target="_blank" rel="noopener">https://www.zxc.so/shadowsocks-ladder.html</a><br><a href="https://teddysun.com/339.html" target="_blank" rel="noopener">https://teddysun.com/339.html</a> </p><hr><p>转载来源<br><a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize" target="_blank" rel="noopener">https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize</a> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0day一些概念的解释，及Scene组、iNT组、TOP组的一些介绍</title>
      <link href="/2016/09/10/24/"/>
      <url>/2016/09/10/24/</url>
      
        <content type="html"><![CDATA[<blockquote><p>博主注：本文部分信息已经过时，仅供参考。</p></blockquote><p><strong>对电影、电视剧等资源来源有兴趣的童鞋的科普，需要一定的混PT的经验才能看懂！有相关经验的，定会收益很多，有种豁然开朗的感觉！！</strong></p><h3 id="关键词一：0day"><a href="#关键词一：0day" class="headerlink" title="关键词一：0day"></a>关键词一：0day</h3><p>广义上的0day包含两种概念：</p><ul><li>0day攻击，一种对计算机软件的攻击方式</li><li>0day资源，一种Warez</li></ul><p><strong>在本站的语境下，0day多指后者。</strong></p><p>0day中的0表示zero，其更准确的称呼是Zero-day warez（copyrighted software that is cracked on the same day it is released）<br><a id="more"></a><br>0day 最初定义是在官方发行软件或游戏后24小时内出现的破解版本，一些技术小组对这些软件或游戏以一定的格式进行打包发布，通过匿名的FTP渠道最终共享全球，是一种Warz。现在只要是在软件或者其他资源发布后，于最短时间内出现的相关破解，都归入0day的范畴。0day因此也经常被视为破解的同义词。</p><p>Warez 则是指在电脑领域非法交换的软件（盗版拷贝）。这个词最初源自于英语单词Software，然后在Leet语（黑客语）里将单词的复数“S”换成“Z”。 还有一种说法则认为, Z表示Zero Day的Z。随着互联网的发展，如今已发展为指代涵盖游戏，音乐，影视等各种数据资源。</p><p>在一般情况下，指称0day资源的0day和WareZ基本上可视为同义词。</p><h3 id="关键词二："><a href="#关键词二：" class="headerlink" title="关键词二："></a>关键词二：</h3><blockquote><p><a href="https://en.wikipedia.org/wiki/Warez_scene" target="_blank" rel="noopener">维基百科对于Scene的解释：</a><br>The Warez scene, mostly referred to as The Scene (often capitalized) is a term of reference used to describe an underground community of people that specialize in the illegal distribution of pirated material, currently being TV, movies, music/music videos, games (all platforms), applications (all platforms), ebooks, and pornography.</p></blockquote><blockquote><p><a href="https://scenelingo.wordpress.com/what-is-the-scene/" target="_blank" rel="noopener">Scenelingo对于Scene的解释：</a><br>The “Scene”, when used in this context, is used to describe the underground culture devoted to releasing movies, reverse-engineering and cracking software, and ripping music, and releasing these things on the internet.</p></blockquote><p>Scene， 可以译为“业界”，通常理解为一个圈子，类似于工商界，学界这样的概念。广义上的”业界”指在一个圈子里的一些人或机构以及他们之间错综复杂的关系总和， 用户则被排斥于业界之外。通俗地说，Scene就是松散的非盈利性盗版制作发行联盟。这个联盟内部没有上下级的领导，但是有着自己正式和非正式的约定。 Scene也可以理解为各个盗版小组发行和交换资源的整个体系的总体称呼。</p><h3 id="关键词三：Scene-Group"><a href="#关键词三：Scene-Group" class="headerlink" title="关键词三：Scene Group"></a>关键词三：Scene Group</h3><p>所 谓的Scene Group是Scene这个联盟内的若干个小组，可以是很多人合作，也可以是个人操作，但是无论Group是以何种形式组织，其操作都是试图将影视、音 乐、游戏、软件等资源经过抓取、压缩等技术的操作之后通过互联网进行传播。他们传播的作品我们称为Release，简称rlz，Scene Group是rlz Group的一种类型，但并非所有的rlz group都是Scene Group。(主页君注：不是rls？)</p><blockquote><p><a href="https://www.pocketheaven.com/ph/wiki/Release_Groups" target="_blank" rel="noopener">维基百科对于Release Groups的解释:</a><br>Release Groups A.k.a rlz Group<br>A number of people working together to obtain and release new games, utilities or patches on to the net. A release is made when a correctly packaged file is uploaded to a private FTP for other release group members to access. Release groups generally follow a set of rules governing the correct etiquette to package releases, failure to do so results in a Nuke. Many groups have specialised in releasing games for a particular console.</p><p>Releases that come from an individual not belonging to any group are usually labeled as Independent.</p></blockquote><p>这个定义点出了rlz group的一些特点：Internet，FTP，release 但是对象并不完整，事实上的Release Groups发布对象涵盖影视、软件、游戏、音乐、资料等各种数据资源。</p><p>每个rlz group发布作品均包含说明该发布作品的NFO文件，此文件主要包含发布组信息、发布作品的信息、破解信息等。nfo文件可通过专门的软件查看，也可使用系统自带的记事本查看。</p><p>在目前国内比较权威的0day信息发布平台xtm的BBS上，rlz group的作品被主要分为了四个板块：</p><h3 id="关键词四：Topsite，简称TS"><a href="#关键词四：Topsite，简称TS" class="headerlink" title="关键词四：Topsite，简称TS"></a>关键词四：Topsite，简称TS</h3><blockquote><p>维基百科对于Topsite的解释:<br>Topsite is a term used by the warez scene to refer to high-speed FTP servers used by release groups and couriers for distribution, storage and archiving of warez releases.</p></blockquote><p>Topsite 是一个Warez术语。由私密的Irc和FTP组成，Irc用于Scene Group成员的交流，FTP则用于Scene Group发布Warez。进入IRC需要对申请者进行极严格的审查，包括技术、资源甚至是人品，而FTP的限制则更为严格，甚至只能在限定的IP地址段 内才能登录。一般Topsite拥有Tb级的硬盘和100Mbit以上的宽带。</p><p>根据Scene Rules，Scene group会把自己发布的视频类作品用WinRAR压缩成一定大小的多个分包，以便于分流，这也是为什么我们会经常看到一些文件由若干个rar压缩包组成的原因。</p><p>一个Topsite通常包含若干个group（即Scene Group，简称grp），每个grp的核心领袖称OP，grp是WareZ的直接制造者，他们的作品最终汇总到topsite中进行统一发布。在每个 topsite中，又有详细的分工，以MovieZ为例：负责提供原材料（DVD、Bluray-Disc等原盘）的supplier，负责抓取压制的 ripper，负责传输到TS上的racer等。</p><p>有些topsite的成员，会将topsite的作品传到自己所在的其他FTP（非Topsite）里，这种行为称dump。从TS上获取WareZ的FTP站点称为Dump站。<br>通 常Scene Group在TS上会进行竞赛，也就是race，比较哪个grp发布的速度最快发布的作品品质最好，其主要原则是，对于同一种资源，如果有一个grp最先 发布出来，除非nuke，否则其他grp的rlz就不再被允许发布到TS上。TS服务器一般都带有各种验证工具和脚本会自动计算race后的结果，也就是 credit，类似于PT站点的ratio。grp的racer参与race的过程，以维持grp在TS中的位置，若长期排在末位则会被TS ban掉，因并非所有的grp成员都有TS帐号，grp通常内部会有自己的dump站，racer也需负责将TS上的Warez搬运到Dump站来，供 grp的其他成员分享。Topsite上还有一类特殊leech帐号，提供给对TS做出特殊贡献的人（supplier，retirer或者捐助者）使用 者不需要参与race，因此不受race结果限制而可以随意的分享TS上的Warez。</p><p>Warez hierarchy（等级）：<br><img src="http://pic.yupoo.com/beyondme37_v/D6z6LeC2/ra76N.png" alt=""></p><h3 id="关键词五：pre-pretime"><a href="#关键词五：pre-pretime" class="headerlink" title="关键词五：pre/pretime"></a>关键词五：pre/pretime</h3><p>pre 是指某grp成员将制作好的资源上传到topsite后（首先上传到小组内部目录），把资源转移到topsite上所有用户有下载权限的目录里，同时脚本 会自动在该TS的IRC上发布该rlz的相关信息。此过程称“preing”而这段时间则称为pretime，此后这一个rlz状态变成pre‘d（前提 是不出BUG，有问题则会被nuked。其他小组如果继续发布相同的资源则会被dupe，除非某其他的grp制作出更好rlz，此时这个更好的rlz会标 注tag proper</p><p>另外pretime也可以理解为从release被上传到TS后到资源被制作成种子并发布这段时间。一些0day方向的PT站会在资源中注明pretime，以强调自身转发的速度，对于普通用户而言，pretime并没有太多实际意义。</p><p>在介绍iNT组之前依然先说明几个概念：</p><h4 id="Non-Scene-Group"><a href="#Non-Scene-Group" class="headerlink" title="Non-Scene Group"></a>Non-Scene Group</h4><blockquote><p>Non-Scene Group是区别于Scene Group的一些小组，这些小组不参与Topsite上的race，通过其他渠道发布自己的资源。按照作品的传播途径，又分为P2P Group和其他的Group。</p></blockquote><blockquote><p>Warez意义上的P2P的概念详见此条目：<a href="http://zh.wikipedia.org/wiki/%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB/" target="_blank" rel="noopener">http://zh.wikipedia.org/wiki/%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB/</a></p></blockquote><p>国内比较流行的P2P主要有PT、BT、以及电驴（请注意电驴不等于verycd及其继承的simplecd）。</p><p>我们常见的通过PT站点发布rlz的 WiKi、CHD等即属于P2P Group。而有些小组，只通过Usenet发布作品，其传播方式有别于P2P，只能成为其他的非P2P小组。在国外还有一种比较流行的资源分享渠道，即 Usenet，关于其具体方式可以参看此文：</p><p><a href="http://www.ruanyifeng.com/blog/2007/11/usenet.html" target="_blank" rel="noopener">USENET简介</a><br><a href="http://www.ruanyifeng.com/blog/2008/02/talk_about_usenet.html" target="_blank" rel="noopener">推广Usenet</a><br><a href="http://www.ruanyifeng.com/blog/2008/02/newsgroups_the_ultimate_p2p_alternative.html" target="_blank" rel="noopener">Usenet：P2P下载的替代方法</a></p><p>总而言之，P2P是Non-Scene Group进行作品传播的一种方式。Scene Group的成员大多非很反感P2P网络，常常会在rlz的NFO中附注“Fuck P2P”等字眼，因此虽然Scene的很多rlz最终还是流入到P2P网络之中，但Non-Scene Group，特别是其中的P2P Group和Scene Group是两个没有交集的部分，也就是说，不存在一个小组，既参与TS上的race，同时又自发的在P2P网络中发布小组作品，将Scene的rlz流 传出来至多只能算Scene成员的个人行为。</p><p><img src="http://pic.yupoo.com/beyondme37_v/D6z6LhT1/4evbD.jpg" alt=""></p><p>在Non-Scene Group中，大部分的小组选择长期驻守在某个site上发布资源，我们称这些小组为某个site的内部发行组，<em>即Internal组，简称iNT组。</em>比 较著名的iNT组如HDB的CtrlHD、DON、Ebp、ESiR，TTG的WiKi，CHD的CHD等。早年国内著名的几个DVDrip小组 KiSS、NewMov还有韩国的WAF也都属于iNT组。</p><p>需要区别的是，在Scene里面，也有internal的概念，其具体含义是：不太符合TDX标准（参见此帖）的作品，一些是Scene Group的成员自己个人随性制做，质量比较差，另一些则是grp认为依照TDX标准无法做出满意的质量,比如其中bitrate限制和codec限制过 于死板等，但不依照TDX做又会被NUKE，于是做成不参与race，只在自己的site内部传阅的作品，这种internal比较有收藏价值。所有这些 作品都会在命名里标记上iNT。因此，iNT组和iNT作品是两码事，Scene组偶尔也会制作一些iNT rlz。</p><h4 id="Encode-重编码作品"><a href="#Encode-重编码作品" class="headerlink" title="Encode-重编码作品"></a>Encode-重编码作品</h4><p>发布组（rlz group）利用其内部渠道获得的DVD或Bluray-Disc片源，通过转换视频的编码格式（目前比较流行的是XVID和H264），达到压缩体积的 目的，最终封装后缀名为avi、mp4、mkv的文件我们称之为重编码作品，这个过程的制作者我们称为Encoder。</p><p>以下局限在高清影视领域讨论各Group的Encode：</p><p>由<a href="http://www.kmgtp.org/forums.php?action=viewtopic&amp;topicid=6885&amp;page=last#last" target="_blank" rel="noopener">Scene，0day一些概念的简单解释可知</a>：Scene组为了参与在TS上的race，时间成为他们首要考虑因素，只要压制出来的作品看上去没有太大的技术问题，就会发布出来。而驻守在各个 site上的iNT组则追求慢工出细活，将压制作品的品质放在首位，时间次之，因此在影视资源的品质上，iNT组是明显优于Scene组的。不过一个很好 玩的现状是，由于现在几个知名的Internal Group驻守的PT站点为了增强自身的竞争力，常会经由一些独占渠道抢先发布资源，结果是Internal组比Scene组发布速度还快。必须指出的 是，虽然从整体上看，iNT组所发布的作品画质确实优于Scene组（因为遵照High Definition x264 Standards Revision 4.0 的标准，Scene组压制的高清影视只能跑固定的参数），但是并不意味着Scene组的作品不可接受，在著名的PT站点SceneHD，只有Scene Group的作品是允许被上传的。</p><p>而TOP组这个概念，其实只在国内一些小圈子里流行，国外并无TOP Group的说法。</p><p>此概念最早由NHD的管理层提出，用于减少其站内的电影资源内容上的重复。</p><p>其最早的规则如下：</p><p>Scene &amp; Internal, from Group to Quality-Degree. ONLY FOR HD-resources [Ver 1.1]</p><p>从发布组名称，定义画质分级</p><p>只适用于相同分辨率标准的高清压制作品</p><p>顶级：   能在NexusHD上发布的最终版本。<br>DON, CtrlHD, EbP, THORA, HDC<br>另外， 任何质量接近于片源或者以上顶级压制组出品版本的作品同样享受此待遇。 (必须有无损的截图对比，适用于以下等级。</p><p>不错：<br>WiKi, EuReKa, HDxT, HiDT, ATHD, FraMeSToR, ESiR6</p><p>还行：<br>CHD, HDS, MySiLU, XTM, FoRM, CRiSC, SoW</p><p>0day发布：<br>速度远重于画质<br>METiS, MELiTE, CBGB, LCHD, aBD, SiNNERS, REVEiLL, CiNEFiLE, hV, HALCYON, aAf, OUTDATED,<br>DIMENSION, CTU, ORENJi, BiA, 2HD, BestHD, CYBERMEN, XPRESS, HANGOVER, iNFAMOUS, Chakra,<br>THUGLiNE, AVS720, IMMERSE, Japhson, BAJSKORV, AVCHD, NGR, REFiNED, ALLiANCE, HAiDEAF<br>NODLABS, FSiHD, DiCH, CROSSBOW</p><p>发布优先级自高到低为从顶级到0day，任何PROPER（修正版）/REPACK（重制版）随时欢迎（适用于同等级）。<br>我们同样提倡NexusHD会员自制作品的发布，但是画质一定要过关哦。。</p><p>举例如下：</p><blockquote><p>如果站内已经有WALL-E的iNFAMOUS 720p版本，那么你可以上传WiKi的压制版本。<br>之后，持有CtrlHD版本的会员可以随时上传但CHD版本不被允许。<br>同样适用于1080p的发布标准<br>旧的资源不会被人为删除。</p></blockquote><p>此标准里的0day，指的是参与高清影视制作的Scene Group，其他小组多为驻守在各个PT站或BBS的Internal Group（比较奇怪的是SoW，这个组经确认为德国的一个Scene Group）。</p><p>此压制组分级标准随后被六维等PT站点引用，作为其Dupe制度的参考。NHD这个标准里，被划为顶级的几个组几乎都是HDB的Internal Group，且HDB一直凭借其高品质的重编码作品及入站的高门槛在众多PTer有着良好的口碑，加之该标准英文版将顶级译为TOP，故在某些高清发烧友 眼中，TOP组就是指部分HDB的iNT组，TOP组的概念也由此推广开来。</p><p>需要的说明是：</p><p>1.NHD的这个分级制度在大范围内其实并不被认可，即使在同一个小组（即使用相同的小组签名）也会因为理念的差异、经验的累积导致作品质量参差不齐。部分国外的资深PTer认为Encoder（即压制成员）比压制组更有参考价值。</p><p>2.X264编码技术在近几年的飞速更新也是一个需要考虑的因素，从今天的眼光来看，三年前发布大量作品的ESiR组的rlz品质未见得优于现在的一些新组，尽管当时的ESiR为全球Internal Group之翘楚。</p><h4 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h4><p>一个通俗易懂的结论：</p><blockquote><p>Scene = Speed<br>Internal = Quality<br>TOP组，也就是HDB的几个小组CtrlHD、DON、Ebp、ESiR整体而言作品质量较高，且发布的资源数量也非常多，在国内流传度非常高，他们的rlz是高清发烧友值得考虑的收藏对象。</p></blockquote><h3 id="部分Scene-Group的简介："><a href="#部分Scene-Group的简介：" class="headerlink" title="部分Scene Group的简介："></a>部分Scene Group的简介：</h3><p>Immerse 这个组在Scene可谓声名狼藉，在TS上为了race无所不用其极，经常发布劣质的encode，在YYETS的论坛，Immerse被人戏称为“骑兵 组”或“马赛克小组”该组为了抢快经常用很低的码率和参数，作品不是播放没有声音就是花屏，常年在TS上被Proper。喜欢美剧的混一些外站的PTer 应当特别留心这个组，很可能在别的站还没下载完就被网站的管理员删档了。</p><p>同样是以发布美剧闻名的CTU、DIMENSION、ORENJi、SYS等组则很少出现这样的问题。</p><p>Japhson 常常能看到这个组Proper其他Scene的作品。</p><p>LCHD LooKMaNe 多发布亚洲影视作品。</p><p>SoW 这个组多发布德语电影</p><p>CiNEFiLE和SiNNERS以压制720P欧美电影为主的小组，作品流传度很广</p><p>AMIABLE、Felony、METiS往往抢发大片，值得一提的是，METiS一度和iNT组共用片源，有些国外站因此误将METiS和WiKi视为同一个小组，将WiKi划入Scene组名单当中。</p><p>TWiZTED 这个组经常会出Repack，自己压坏了之后赶紧重做。</p><p>附注的是，很多组会身披不同马甲做标清视频和高清视频，目前已知的是：</p><p>XII=IMMERSE（做标清的XII也压坏了很多美剧），FQM=CTU（冰与火之歌的第一季的0day版想必很多人还记得，标清的多是FQM的，高清的多是CTU的）LOL=DIMENSION，ORENJi=XOR以及IMBT=METiS</p><h3 id="部分Non-Scene-Group介绍："><a href="#部分Non-Scene-Group介绍：" class="headerlink" title="部分Non-Scene Group介绍："></a>部分Non-Scene Group介绍：</h3><p>高清PT站点HDB的Intenal Group,部分被视为TOP组：</p><p>CtrlHD、CRiSC、DON、Ebp、ESiR、HDL、HDmonSK、HDxT、iLL、MMI、PerfectionHD、Prestige、RuDe3</p><p>被称为HDB三大组的CtrlHD、DON、ESiR，以高质量和众多数量的Encode在PT圈内享有盛誉，ESiR的720P更是曾在PT界首屈一指， 风行于国内各大资源站点。ESiR由Thor小组演化而成，后又分离出Thora这样专心从事动漫的压制组。10年4月ESiR因内部问题人员变动，作品 质量和数量下滑，现已不在HDB发片，但HDB站内依然有大量ESiR的重编码作品。如今ESiR的地位已被Ebp取代，后者与CtrlHD、DON继续 在HDB成三足鼎立之势。</p><p>HDmonSK、PerfectionHD则在HDB以发布BD原盘为主，不时也会释出一些Encode。</p><p>iLL、MMI、RuDe以制作720P的HDTV为主，iLL一度是与CtrlHD、DON、ESiR并驾齐驱的四大组，现iLL、MMI已式微，只有RuDe仍不时可见作品放出。</p><p>HDxT之前曾一度同时入驻HDB、HDC，其作品流传度不高，但质量很高。</p><p>CRiSC、HDL、都是压制重编码作品的小组，其压制水平和压制数量都较三大组为逊色。</p><p>DDR 这个组目前只知道在HDB主要发布印度电影，但是在HDB官方小组的list上没有这个组，因此未列在上面</p><p>注：</p><ol><li><p>如今的三大组CtrlHD、DON、Ebp除以BD原盘为片源压制1080P和720P外，不时也会发布原盘和HDTV，今年最火爆的美剧《冰与火之歌》 CtrlHD即录制了前六集的1080i，而Ebp则利用CtrlHD及其他小组录制的1080i为片源压制了720P。</p></li><li><p>三大组中不时可见国人活跃的身影，CtrlHD的Fransky目前依然以CtrlHD的签名发布着高品质的Encode,曾经是CtrlHD成员的 dizhuwang（linghuteng）压制水平很高，现在建立了LiNG的单人小组，曾先后是DON、WiKi成员的Jaychu128则将HDB 先进的压制理念带入到了国内，Prestige是他在HDB建立的个人小组。</p></li></ol><p>3.HDB由于站内的Dupe制度，其重编码的720P、1080P每种仅允许保留一个作品，因此CtrlHD在其他小组发布了encode之后，会通过Usenet等途径将本组重复压制的作品流出来。</p><h3 id="高清PT站点HDT的Intenal-Group："><a href="#高清PT站点HDT的Intenal-Group：" class="headerlink" title="高清PT站点HDT的Intenal Group："></a>高清PT站点HDT的Intenal Group：</h3><p>DNL、EuReKA、HDMaNiAcS、HiDT、KRaLiMaRKo、ViSTA™、</p><p>HDT 的几个压制组在P2P圈内也有一定的声望。HiDT主要压制720P作品，ViSTA™则以1080P为主，两个iNT组作品在国外PT站流传度较广，在 国内相对少见。ViSTA™似乎是单人小组，现在已经消失。KRaLiMaRKo和HDMaNiAcS为新加入的小组，前者专门制作remux，后者则压 制720P、1080P不等。DNL的作品不时在国内会见到转发，不过转发的也以720P HDTV多见。这三个小组的品质相对HiDT、ViSTA™这样的老牌还有很大的提升空间。</p><p>EuReKA 像是PT圈子里的浪子，最早在Bit-HDTV上发布作品，08年底和Bit-HDTV的staff争吵后自行建站Eureka.org，后来站点出现状 况，转头Awsome-HD，因为感觉自己制作BD25伪原盘的理念在HDT无法的得到重视，现又离开自行成立PT站BD25（<a href="http://bd25.org/）且由原来重编码压制1080P改为制作BD5、BD9、BD25伪原盘。" target="_blank" rel="noopener">http://bd25.org/）且由原来重编码压制1080P改为制作BD5、BD9、BD25伪原盘。</a></p><p>FraMeSToR<br>这 个组是从EuReKA分离出来的小组。曾先后在Bit-HDTV、HDME等PT站常驻发布1080P，特点是封装无损音轨及次世代音轨，现自行建立PT 站点tracker.framestor-hd.org，其压制极为严苛，码率往往非常高，封装次世代音轨后有时1080P的encode比原盘还大。</p><p>HDBRise<br>此小组为罗马尼亚PT站HDBits.ro(注意是ro)的iNT组，主要以压制电影和音乐类视频（演唱会、音乐剧等）为主，既以原盘压制720P、1080P，也不时以HDTV压制720P作品，该小组在站外转发较多的作品主要是其音乐类视频。</p><p>FLAWL3SS 这个组部分作品较好，但是经常会压制HDrip、BRrip，所以并不推荐</p><h3 id="下面国内的："><a href="#下面国内的：" class="headerlink" title="下面国内的："></a>下面国内的：</h3><p>WiKi、NGB<br>两 个组最早都是驻守在HDC的iNT组，WiKi以BD为片源压制720P、1080P，NGB则以自录的HDTV压制720P剧集综艺。现均以离开 HDC，驻守在TTG发布作品。WiKi是由著名的DVDrip小组KiSS的组长天灰灰（同时也是现在的TTG站长）创建，其早期成员也多半来自 KiSS，初期的WiKi多加挂滤镜。在Jaychu128加盟后改向原盘画质靠拢，WiKi组的作品以720P多见，比较经典的则会压制1080P，转 移至TTG后基本上新出的原盘会同时出720P、1080P。</p><p>10年中WiKi多位老组员退役，作品发布一度由动帝（dong1010）独力支撑，现在的 WiKi组内新人较多，故在国外认同度较低（很多老外更注重Encoder而非Group）但作品的品质一直保持着非常高的水准。NGB内部有专设的韩剧组和日剧组，分别由baby和kudo担任组长，以前NGB一般对外只发布其压制后的720P，现在也经常会将其1080i的片源流出来。</p><p>CHD、CHDTV<br>CHD 压制组制作的重编码1080P/720P/480P不仅仅在国内，在全球也有很大的影响力，近一年时间里，CHD多次全球首发众多大片，其作品在国内外都 有着很广的流传度，组内CHP压制的1080P更是众多高清发烧友收藏的首选。CHDTV则经常放出自己录制的1080i。</p><p>HDChina、HDCTV（主页君注：现更名为HDW、HDWTV）<br>现HDChina由原来的SiHD和HDChina合组而成，近段时间在新片的发布上非常迅速，在国内外依托着HDC的声望也得到了很多高清用户的认同，由于HDC有了单纯的KiSHD韩剧发布组，HDCTV主要以国产剧集、电影为主。</p><p>HDS、MySilu<br>最早的以思路论坛为主站的思路团队分裂后，SiLU小组解体，自行成立HDS和MySilu两个组，并分别在两家思路论坛及后来的HDS、HDR发布。MySilu全球首创remux技术，但两家的压制作品在其他站点的流传度都不是很高</p><p>beAst、HDSTV<br>beAst是由HDS黄教授的粉丝群成员发起成立的，近一年来发展迅速，依托着HDS的独家片源首发了很多资源，HDSTV为HDS新建的HDTV小组</p><p>YYets、JDPT*<br>两个录制组主要是录制日剧为主，JDPT现在驻守在G.因为明文禁止转载，自家又极少压制720P，因此流传度也不是很广，且由于日本对盗版的严厉打击，经常出现一季日剧烂尾的情况。</p><hr><p>全文转自蝴蝶PT，在此感谢。</p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高清知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nfo相关小知识</title>
      <link href="/2016/09/10/23/"/>
      <url>/2016/09/10/23/</url>
      
        <content type="html"><![CDATA[<p>我们下载的视频文件里，经常会有一个后缀名为*.nfo的文件，很多人不知道是什么，所以把它当垃圾直接给删掉了！其实，NFO文件只是记录了影片制作者在制作该片时的各项数据信息，删与不删并不影响大家对影片的欣赏！</p><p>但是，如果懂得如何看这些信息，那么对一部电影的清晰度、音效、容量大小、发布日期等等就一目了然，这样就可以根据信息来决定是否值得一下了！目前，在国内宽带条件普遍还不是很理想的情况下，这个NFO文件可就派大用场了！现在国内大多数的PT站里，缺少NFO的影片是不允许上传的！<br><a id="more"></a><br>还可以看这篇文章：<a href="http://www.bfdz.ink/2016/09/06/22/">看懂影片标题，各种电影视频格式标题的含义。</a></p><p>nfo文件，可以用“记事本”打开，打开后，如图类似显示（图中是用专门软件Damn NFO Viewer打开的）。</p><p><img src="https://y8wzia.bn1.livefilestore.com/y1pCZ3HlUTtsS5jv5aNjYYUhzgfRppg8QOzd0wAff8jfZKe2PGgNJs6Lf_v4eHcbJYa6_vbXyTbuG01FPteMIVH_ypN5AMbIt3Z/001.png" alt=""></p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Title ............: Brotherhood of the wolf</span><br><span class="line">Release Group.....: FiT</span><br><span class="line">Ripper ...........: Jamqin</span><br><span class="line">Release Date .....: 10/13/2003</span><br><span class="line">DVD Retail Date ..: N/A</span><br><span class="line">Video Format .....: XviD</span><br><span class="line">Video Bitrate ....: 1576KBit/s</span><br><span class="line">Aspect Ratio .....: 1.85:1</span><br><span class="line">Resolution .......: 640 x 272</span><br><span class="line">Audio Format .....: AC3</span><br><span class="line">Audio Bitrate ....: 448Kbps</span><br><span class="line">DVD Runtime ......: 2:24:36</span><br><span class="line">Frame Rate .......: 25.000 fps</span><br><span class="line">Language .........: FRA</span><br><span class="line">Subtitle(s) ......: Chs</span><br><span class="line">Genre ............: PAL</span><br><span class="line">Archives .........: 47 x 15MB x 3</span><br><span class="line">IMDB Rating.......: 6.2/10 http://www.imdb.com/title/tt0314353/</span><br></pre></td></tr></table></figure><p>上面nfo信息解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Title..............: 影片的英文名称；</span><br><span class="line">Release Group......: 压制该片的组织名称；</span><br><span class="line">Ripper.............: 该片的压缩制作者；</span><br><span class="line">Release Date.......: 压制该片的日期，通常格式为 “月/日/年”；</span><br><span class="line">DVD Retail Date....: 该片的DVD版本的发行日期，格式为“月/日/年”；</span><br><span class="line">Video Format.......: 压缩编码方式，XviD是目前DVDRip最流行的编码，之前有DivX-)3.11 和 DivX 5.X；蓝光一般用x264</span><br><span class="line">Video Bitrate......: 视频流码，数字越大则影片图象质量相对越好；</span><br><span class="line">Aspect Ratio.......: 画面的长宽比，一般2.35：1或1.85：1指的是16：9，而4：3则为全屏；</span><br><span class="line">Resolution.........: 画面的分辨率；</span><br><span class="line">Audio Format.......: 音频编码格式，效果依次为 DTS &gt; AC3 &gt; MP3 ；</span><br><span class="line">Audio Bitrate......: 和视频流码一样，数字越大表示音效越好；</span><br><span class="line">DVD Runtime........: 影片播放时间，格式为“时：分：秒”；</span><br><span class="line">Frame Rate.........: 画面每秒的帧数；</span><br><span class="line">Language...........: 影片对白语言；</span><br><span class="line">Subtitle(s)........: 外挂字幕的语种；</span><br><span class="line">Genre.........: 影片制式；</span><br><span class="line">Archives...........: 影片的容量大小及分包的数量，一般标准格式为 1CD=14.3M x 50 ；</span><br><span class="line">IMDB Rating........: 世界上最权威的电影数据库IMDB对该片的评分；</span><br></pre></td></tr></table></figure><p>还有一些NFO中会附带影片的更详细信息，如导演、演员、内容简介等，这里就不一一阐述了。NFO文件有专门的查看器，不过一般情况下用记事本就可以打开。其实NFO并非DVDRip、蓝光(720p/1080pp)所特有，很多软件、游戏等等都会附带有相应的NFO制作信息，这里需要强调的是，DVDRip、蓝光(720p/1080pp)中NFO遵循的是国际通用原则，所以里面只能用英语记录相关信息，而不允许采用其他语言（包括中文）。</p><p>常见的nfo形式：<br>即有压制组的花哨图案，又有视频、音频等信息。<br><img src="http://nfomation.net/nfo.white/1360886835.sparks-wreckitralph-720.nfo.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高清知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看懂影片标题，各种电影视频格式标题的含义</title>
      <link href="/2016/09/06/22/"/>
      <url>/2016/09/06/22/</url>
      
        <content type="html"><![CDATA[<h2 id="一、资源片源解析"><a href="#一、资源片源解析" class="headerlink" title="一、资源片源解析"></a>一、资源片源解析</h2><blockquote><p>根据命名，可以知道资源的来源，从而判断资源画质的好坏。</p></blockquote><h3 id="1-CAM-枪版-——珍爱生命，远离枪版"><a href="#1-CAM-枪版-——珍爱生命，远离枪版" class="headerlink" title="1.CAM(枪版)——珍爱生命，远离枪版"></a>1.CAM(枪版)——珍爱生命，远离枪版</h3><p>CAM通常是用数码摄像机从电影院盗录。有时会使用小三角架，但大多数时候不可能使用，所以摄像机会抖动。因此我们看到画面通常偏暗、人物常常会失真，视频画面时常会出现倾斜、抖动。 由于声音是电影院现场录制，所以经常会录到观众的笑声等杂音。因为这些因素，图象、声音质量通常都很差。</p><p>举例说明：Journey.To.The.Center.Of.The.Earth.<code>CAM</code>.XViD-CAMERA(地心游记3D枪版)<br><a id="more"></a></p><h3 id="2-TS——只比枪版好一点"><a href="#2-TS——只比枪版好一点" class="headerlink" title="2.TS——只比枪版好一点"></a>2.TS——只比枪版好一点</h3><p>TS与CAM版的标准是相同的。 但它使用的是外置音源(一般是影院座椅上为听力不好的人设的耳机孔)，这个音源不能保证是好的音源，因为受到很多背景噪音的干扰。TS是在空的影院或是用专业摄像机在投影室录制，所以图象质量可能比CAM好。但画面的起伏很大。常出现的有一般TS版和经过修复清晰TS版。</p><p>举例说明：Iron.Man.PROPER.<code>TS</code>.XviD-iLG(钢铁侠TS版)</p><h3 id="3-TC——基本也可以忽略"><a href="#3-TC——基本也可以忽略" class="headerlink" title="3.TC——基本也可以忽略"></a>3.TC——基本也可以忽略</h3><p>TC使用电视电影机从胶片直接数字拷贝。画面质量还不错,但亮度不足，有些昏暗。很多时候制作TC使用的音源来自TS，因此音质很差，但画面质量远好过TS。如果不是太讲究的话TC版还是不错的选择。</p><p>现在还有一种资源，含有：HC。用的很乱，可作当作是把Cam、TC、或DVDScr片源的分辨率拉伸到720p，无实质意义，画质依旧差，噱头而已。</p><p>举例说明：Madagascar.2005.<code>TC</code>.XviD.AC3.avi(马达加斯加TC版)</p><p>*上面3种片源，有时也习惯统称为“枪版”，因为画面、声音质量都很差……</p><h3 id="4-R5——心急的您可以看这个"><a href="#4-R5——心急的您可以看这个" class="headerlink" title="4.R5——心急的您可以看这个"></a>4.R5——心急的您可以看这个</h3><p>DVD联盟为保护知识产权，将全世界依地理区域分为1-6区，若与影碟机的区域码不符，则可能无法播放。当然网上盗版都是经过破解，压制成.mkv、.avi格式后再分享的。</p><p>5区R5一般大都是俄罗斯5区版，由于北美大片在俄罗斯发行的语种经常配音为俄罗斯语，因此网络上会出现采用R5的视频+枪版TS的英语原声音频=合成版本(所以音效差)，有时俄版也会有英语音频，视情况而定了。但是，R5版不只是音效差，绝大部分情况视频质量也比欧美版DVD也差。R5区的DVD发布一般较欧美版早。</p><p>现在蓝光普及，DVD已很少见，以上说的情况在蓝光也适用，BluRay在全球也分区发售，有些电影俄版也较美版发行早。</p><p>举例说明：Get.Smart.<code>R5</code>.LINE.XViD-mVs.avi(糊涂侦探R5版)</p><h3 id="5-DVDScr——最差也要看这个"><a href="#5-DVDScr——最差也要看这个" class="headerlink" title="5.DVDScr——最差也要看这个"></a>5.DVDScr——最差也要看这个</h3><p>预览版的或者是测试版的DVD，非正式出版的版本。从预览版 DVD 中获取。比DVDRip早发布，但画质稍差。(经常有一些不在黑边里在屏幕下方滚动的消息，包含版权和反盗版电话号码 ，会影响观看。)。在欧美年末颁奖季时，给评委送审的片子可能就是这种片源（毕竟片子还没发售，防止泄露不可能给评委看高清版），也难为那些评委了。如果没有严格的划分它的画质应与TC版差不多。</p><p>举例说明：Quantum.of.Solace.REPACK.<code>DVDScr</code>.XviD-COALiTiON.avi(007大破量子危机DVDSCR版)</p><h3 id="6-DVDRip——比较理想的版本"><a href="#6-DVDRip——比较理想的版本" class="headerlink" title="6.DVDRip——比较理想的版本"></a>6.DVDRip——比较理想的版本</h3><p>DVDRIP是从最终版的DVD转制。质量应该是最好的。将DVD的视频、音频、字幕剥离出来，再经过压缩或者其他处理，然后重新合成成多媒体文件。一般来说，DVDrip由影音文件(后缀为avi)和字幕文件组成。</p><p>举例说明：Pineapple.Express.2008.<code>DVDRip</code>.XviD-ARROW.avi(菠萝快车DVDRip版)</p><h3 id="7-HR-HDTV——不错的选择"><a href="#7-HR-HDTV——不错的选择" class="headerlink" title="7.HR-HDTV——不错的选择"></a>7.HR-HDTV——不错的选择</h3><p>HR-HDTV准确名字叫做Half Resolution High Definition Television=HRHD（HR or HR-HDTV），也就是大家所说的全高清的一半，所以HR-HDTV也叫半高清。</p><p>这个概念被提出来后，主要随着人人影视（YYTs）的壮大而推广，被大家拟熟知。YYeTs人人影视在07年3月份的时候开始制定电影的HR-HDTV标准，并且做了很多实验电影发布，取得相当的好评，于是经过2008年10月最终修改后得到现在的HR-HDTV的固定标准。</p><p>HR-HDTV是用DivX/XviD/x264等MPEG4压缩技术对HDTV的视频图像进行高质量压缩,然后将视频、音频部分封装成一个.avi或.mkv文件，最后再加上外挂的字幕文件而形成的视频格式。</p><p>这里补充下，以前HR-HDTV多用HDTV的源，现在蓝光普及、获取也方便，多用蓝光片源，画质更优。但你看到下面的命名，你能知道是用的蓝光片源、还是HDTV片源，或WEB-DL片源吗？所以人人影视的资源有点“鱼龙混杂”，没有清晰的标注片源。</p><p>举例说明：Puss.In.Boots.2011.穿靴子的猫.双语字幕.<code>HR-HDTV</code>.AC3.1024X576.x264-YYTs</p><p>*主页君对国内那些标清、高清、全高清、超高清、致清等概念，没关注过，也没兴趣，搞这些名堂有用吗？下面贴出这些概念的与720p/1080p等关系对应：</p><p>标清—SD—480P—720x480分辨率。<br>高清—HD—720P—1280×720分辨率。<br>全高清—FHD—1080P—1920x1080分辨率。<br>俗称—2K—2048×1080分辨率。<br>超清—UHD(Ultra HD)—4K—3840×2160或4096×2160分辨率。<br>未来超高精细影像系统—SHV—8K—7680x4320分辨率（首部8K电影是日本NHK于2013嘎纳展映的短片《Beauties À La Carte（珍馐美味）》）。<br>HDTV—高清电视缩写，涵盖720P/1080I/1080P。它其实不是分辨率，而是得到资源的方式，通常由用户通过采集设备/软件实时截取媒体流得到。<br>HR-HDTV—半高清，分辨率约为960x540，是1080P的一半。人人影视在制定标准和推动普及中起到重要作用。<br>所以，国内不管是优酷、腾讯等在线流媒体，还是XX天堂等资源站，无不在混淆视听，乱用标清、高清、全高清等概念。尤其是优酷等这样有影响力的媒体，为了吸引眼球，还混淆概念、曲解其意，给广大网友造成误解，真是害人不浅。</p><p><img src="http://ww4.sinaimg.cn/mw690/9f0724e6gw1ekkjvnsusbj20lx0drt97.jpg" alt=""></p><p>*提到人人影视，再说下，人人影视还喜欢发布rmvb格式的资源，rmvb格式早该淘汰了（后面讲格式再细说）。跟HR-HDTV概念一样，如今都高清时代，一个2008年制定的视频标准不改进摆了，还抱残守缺，坚持至今。不过，话又说回来，HR-HDTV的小体积、相对较高画质，对于中国的网络状况来说，也是一个较好的选择。不用花太多时间下载，又能享受到高质量影片。</p><h3 id="8-TVRIP——TV转制"><a href="#8-TVRIP——TV转制" class="headerlink" title="8.TVRIP——TV转制"></a>8.TVRIP——TV转制</h3><p>所谓TVRip是从电视（数码有线电视/卫星电视捕捉等）转制的电视剧及接收卫星接收到的节目，然后通过电视卡进行捕捉，压缩成文件，我们看的很多综艺及体育节目都是TVRip。有些电视剧也会使用TVRip的方式进行发布。这类视频质量主要视电视台的画质质量而定，普通有线电影画质一般、高清有线电影画质就好了。</p><p>现在高清数字电视普及很快，一般都是HDTVRip，TVRip已很少见。</p><h3 id="9-HDTVRip"><a href="#9-HDTVRip" class="headerlink" title="9.HDTVRip"></a>9.HDTVRip</h3><p>HDTVRip是高清片源（高清电视录制、高清卫星星号接收）转压，凡是高清电视片源转压的视频也都可以标为HDTVRip。</p><p>一般多见于电视剧，尤其是美剧。都是录制的高清有线电视，然后再压制。</p><p>举例说明：Boardwalk.Empire.S05E01.720p.<code>HDTV</code>.x264-KILLERS （大西洋帝国，美剧）</p><p>举例说明：Hail.the.Judge.1994.<code>HDTV</code>.x264.AAC-iHD （九品芝麻官之白面包青天，电影）</p><h3 id="10-HDRIP"><a href="#10-HDRIP" class="headerlink" title="10.HDRIP"></a>10.HDRIP</h3><p>HDRIP=HDTVRip ？</p><p>主页君私认为，现在HDRip命名有点乱用，觉得多类似于HDTVRip(高清电视录制)、或Web-DL Rip（网络在线视频）。也没有统一的规范，资源怎么命名，也是资源压制者自己的事！！所以，资源命名难免有时会显得乱，看到命名后，分不清来源、不能确定画质质量如何。不过一般用HDRip，而不用HDTVRip命名的资源，前者比后者的画质质量差些。</p><p>举例说明：Age.of.the.Rampant.2014.720p.<code>HDRip</code>.H264.AAC-CJCONTENTS （群盗）</p><h3 id="11、HD-DVD"><a href="#11、HD-DVD" class="headerlink" title="11、HD-DVD"></a>11、HD-DVD</h3><p>HD DVD（或称：High Definition DVD）是一种数字光储存格式的蓝色光束光碟产品。</p><p>HD DVD与其竞争对手蓝光光碟（Blu-ray Disc）相似，盘片均是和CD同样大小（直径为120毫米）的光学数字储存媒介，使用405纳米波长的蓝光。但在2008年，随着原先支持HD DVD的华纳公司宣布脱离HD DVD，以及美国数家连锁卖场决定支持蓝光产品，东芝公司终于在2008年2月19日正式宣布将终止HD DVD事业，这场持续了数年的规格之争，最终以蓝光的胜利而告终。所以，HD-DVD已成历史名词，目前网上流传带有HDDVD的片源，基本是2009年以前发行的。</p><p>举例说明：Seabiscuit.2003.720p.<code>HDDVD</code>.x264-ESiR（奔腾年代）</p><h3 id="12-WEB-DL——仅次于蓝光的画质"><a href="#12-WEB-DL——仅次于蓝光的画质" class="headerlink" title="12.WEB-DL——仅次于蓝光的画质"></a>12.WEB-DL——仅次于蓝光的画质</h3><p>随着互联网的发展，这2、3年来，这种片源十分抢眼，经常在蓝光高清未出前，就流传于网上。且画质很好，一般能满足广大高清爱好者观众的需求。</p><p>顾名思义，Web-DL，即Web-Download，从网络上下载的。片源是一般是网络上线视频，如美国苹果的itunes，画质是最好，接近蓝光720p；国内的迅雷、优酷、腾讯、乐视等，也有在线付费视频，但画质就太差了！！</p><p>按分辨率还有1080P.Web-DL、720P.Web-DL、WEBRip（WEBRip画质一般较差）。</p><p>举例说明：</p><p>The Frozen Ground.2013.1080p.<code>WEB-DL</code>.H264-Abjex (冻结之地)  1080P.Web-DL</p><p>Star.Trek.Into.Darkness.2013.720p.<code>WEB-DL</code>.H264-HDWinG （星际迷航:暗黑无界）720P.Web-DL</p><p>We’re.The.Millers.2013.<code>WEBRiP</code>.XViD-UNiQUE  (冒牌家庭) 。</p><p>这种片源也多见于美剧，不过比HDTV片源稍晚，在线播放总要比电视播放晚的，也符合实际情况。画质比HDTV版略好。</p><p>举例说明：Under.the.Dome.S02E11.Black.Ice.1080p.<code>WEB-DL</code>.DD5.1.H.264-NTb （苍穹之下，美剧）</p><h3 id="13-BDRIP——目前视频画质的顶峰"><a href="#13-BDRIP——目前视频画质的顶峰" class="headerlink" title="13.BDRIP——目前视频画质的顶峰"></a>13.BDRIP——目前视频画质的顶峰</h3><p>BDRip = Blue-ray Disc Rip，即蓝光高清转制。用蓝光圆盘压制。但大部分压制小组把用蓝光720P、1080P作转压制的视频也叫BDRip，是有误的，应该叫BRRip，非BDRip，一字之差。</p><p>720p、1080p、Rumux等都属于BDRip范畴，但为了更好的介绍，下面分开再说。</p><p>举例说明：Awake.2007.<code>BDRip</code>.X264-TLF.mkv(夺命手术BDRip版)</p><h3 id="14-720P"><a href="#14-720P" class="headerlink" title="14.720P"></a>14.720P</h3><p>720P是美国电影电视工程师协会(SMPTE)制定的最高等级高清数字电视的格式标准，分辨率为：1280×720。高清分辨率主要分为：1080P、1080I、720P(i是interlace,隔行的意思，p是Progressive,逐行的意思)。720P是一种在逐行扫描下达到1280×720的分辨率的显示格式。是数字电影成像技术和计算机技术的融合。这是高清视频的最低标准。</p><p>举例说明：Le.Fabuleux.Destin.d’Amlie.Poulain.2001.BluRay.<code>720p</code>.x264.DD51-TBmovie.mkv (天使爱美丽720P)</p><p>720p/1080p只是分辨率，所以HDTV、HD-DVD、WEB-DL，甚至DVD的片源都可以压制成720p/1080p。千万不要把720p/1080p与蓝光等同起来，一提到720p/1080p就想到蓝光，这是误解。</p><h3 id="15-1080P"><a href="#15-1080P" class="headerlink" title="15.1080P"></a>15.1080P</h3><p>1080P是美国电影电视工程师协会(SMPTE)制定的最高等级高清数字电视的格式标准，有效显示格式为：1920×1080，像素数达到207.36万。</p><p>1080P带来的高画质给消费者带来的是真正的家庭影院的视听享受，由于它向下全面兼容其它高清格式，通用性非常强，保证了在未来十几年的时间里产品不会过时，具有很好的超前性。随着1080P片源的不断涌现，1080P产品的优势已经显现出来。</p><p>举例说明：Empire.State.2013.BluRay.<code>1080p</code>.DTS.x264-CHD(帝国，1080P版本)</p><h3 id="16-REMUX——无损版"><a href="#16-REMUX——无损版" class="headerlink" title="16.REMUX——无损版"></a>16.REMUX——无损版</h3><p>Remux的意思是无损的提取出HD-DVD 或 BluRay里面的视频数据、音频数据，封装到我们熟悉的TS或者AVI格式文件中。</p><p>HD-DVDRip和BDRip（720p/1080p/BRRip）都是把原始的高清数据进行压缩、重编码，从1080P分辨率的视频压缩到720P分辨率或更低，40G、50左右的片子压缩到了4-10G左右，在低尺寸，如14、15、19寸的电脑上很难看出差别，但是上到大尺寸高分辩率的显示设备上，就能明显的看出区别了。所以，大屏幕、大宽带的朋友还是建议下载未重编码的Remux、或蓝光圆盘。</p><p>举例说明：<a href="mailto:The.Patriot.Extended.Cut.Blu-ray.`REMUX`.H264.1080P.DTS.LPCM.DD51.Fanxy@Silu.DISK1.ts" target="_blank" rel="noopener">The.Patriot.Extended.Cut.Blu-ray.`REMUX`.H264.1080P.DTS.LPCM.DD51.Fanxy@Silu.DISK1.ts</a> (爱国者remux版本)</p><h3 id="17、蓝光盘、DIY蓝光盘"><a href="#17、蓝光盘、DIY蓝光盘" class="headerlink" title="17、蓝光盘、DIY蓝光盘"></a>17、蓝光盘、DIY蓝光盘</h3><p>蓝光光盘，跟DVD光盘类似，有些电影发烧友会购买蓝光盘，然后破解（蓝光盘在全球分了几个区，例如中国的蓝光播放器，不能播放在美国购买的蓝光盘，属于版权保护），再在网上发布分享，继而有压制小组转压制（重编码）成720p/1080p等高清资源。蓝光光盘是原始片源，画质原汁原味，没有二次处理，所以很高清爱好发烧友会下载观看、或收藏蓝光原盘资源。目前蓝光原盘分享为1080p（1920*1080）为主，也有2K、4K等原盘。</p><p>举例说明：Star.Trek.Into.Darkness.2013.3D.<code>BluRay</code>.1080p.AVC.TrueHD.7.1-TTG  （星际迷航：暗黑无界） 一般都40、50G，不是一般用户“消费”得起的。</p><p>DIY原盘，是对蓝光圆盘再加工，一般是对字幕、音频处理，不对视频处理。例如美国发布的蓝光盘，即使有人发到网上去了，由于控制菜单、字幕、视频都是英文，而非英语国家可能不方便观看，所以，出现了DIY原盘，对蓝光盘再加工，汉化菜单、添加中文字幕、中文音轨等。方便非英文网友观看、收藏！！</p><p>举例说明：Oblivion 2013 1080p Blu-ray AVC DTS-HD MA 7.1-<code>DiY</code>-ego@HDWinG     (遗落战境 DIY蓝光圆盘) 一般也都40、50G</p><h3 id="18、4K——未来的高清发展方向之一"><a href="#18、4K——未来的高清发展方向之一" class="headerlink" title="18、4K——未来的高清发展方向之一"></a>18、4K——未来的高清发展方向之一</h3><p>4K视频也可以以蓝光作为存储载体，分辨率高达4096×2160，相应的细节、色彩、画面质量也更加高。一张4K的蓝光原盘不是大家所预想高达几百G，通常也只有几十G。</p><p>举例说明：Spider.Man.3.2007.<code>4K</code>.Mastered.Blu-ray.1080p.AVC.DTS-HD.MA.5.1.-BLUEBIRD</p><p>只有45.02GB，高分辨率不意味着大体积，这是大家最容易误解的。体积大小不与分辨率成正比，而与码率成正比。</p><p>用4K蓝光压制的720p/1080p，命名时一般会包括：4K、Remastered等字眼，或同时包括。</p><p>举例说明：Spider-Man.Trilogy.2002-2007.<code>4K</code>.Remastered.BluRay.1080p.x264.DTS-HD.MA.5.1-HDWinG</p><p>*也许有人疑问，4K的片源转成成720p有什么意义？这里主页君个人的理解是，我们说4K画质好，不单是因为分辨率高了，而是细节、色彩等很多元素的配套提升，单单只提高分辨率不可能提升画质，比如一张几直Kb的图片，你可以人为用图片处理软件，拉伸成4K（4096×2160）的分辨率，但很显然，拉伸后，会显得模糊。</p><p>*同样的，相同分辨率也不意味着相同的画质，例如，iPhone 800相素 和小米800相素拍出来的图片，清晰度能一样吗？所以画质清晰度跟分辨率成正比的关系，要在一定条件也才能成立。</p><h3 id="19、上面讲的资源的来源，再谈谈影片的来源："><a href="#19、上面讲的资源的来源，再谈谈影片的来源：" class="headerlink" title="19、上面讲的资源的来源，再谈谈影片的来源："></a>19、上面讲的资源的来源，再谈谈影片的来源：</h3><p>母盘：在电影拍摄完成后经过拍摄素材的剪辑拼接和后期制作，生成的正式影片最原始的版本，也是内容最完整细节最丰富的版本（体积极大，分辨率高）。受到时代和拍摄方式的影响（拓展阅读：基努李维斯策划的纪录片—<a href="http://movie.douban.com/subject/10438697/" target="_blank" rel="noopener">阴阳相成 (豆瓣)</a>），过去胶片时代使用的是母盘胶片，现在数码时代使用的是数字文件保存在存储介质中。随着现在技术的发展可以使用胶转数设备，通过数字修复的方式将胶片转换成数字格式保存（质量好的母版胶片转换后相当于4K-3840x2160分辨率）,这也是为什么现在我们可以买到一些老电影的蓝光碟（许多朋友观念中对老电影就不可能有高清版的认识是错误的）。母盘是用于制作影院电影拷贝和后期发行音像制品的模板，一旦保存发生意外后果不堪设想！这也是为什么许多老电影因原版胶片损坏或遗失无法修复，一些新电影因为母盘损坏耽搁上映。（拓展阅读：1.<a href="http://art.china.cn/movie/2012-03/19/content_4884649.htm" target="_blank" rel="noopener">胶片修复热：拯救电影需要责任心和耐心</a> 2.<a href="http://ent.163.com/12/0914/03/8BB78MNA00032DGD.html" target="_blank" rel="noopener">《白鹿原》母盘修复完毕近期上映</a>）<br>院线拷贝：属于专业放映领域。过去使用胶片拷贝放映，一个片子要被分成四五段拷贝（这也是为什么过去在影院看电影有时候会断一会儿的原因）。现在使用的是数字拷贝，单片体积大概是400-500G左右，存储于存储介质当中，配有播放密钥。目前院线使用的数字拷贝分辨率主要是2K-2048×1080分辨率，有些好的影院已经达到了4K-3840x2160分辨率。<br>音像发行：民用播放领域。通常由发行公司通过碟片的形式实体发行，但近年随着网络的发展也采用数字渠道（iTunes,Amazon等）。实体碟片早期就是大家熟悉的VCD-352x240标准分辨率和DVD-960x540标准分辨率（DVD后期按容量又分为D9和D5，即9G和5G），现在主流的碟片就是下载电影时经常能看到的一个词—蓝光（BD）。（来自知乎：<a href="http://www.zhihu.com/question/20106926）" target="_blank" rel="noopener">http://www.zhihu.com/question/20106926）</a></p><hr><h2 id="二、常见高清视频“扩展名”、视频标准"><a href="#二、常见高清视频“扩展名”、视频标准" class="headerlink" title="二、常见高清视频“扩展名”、视频标准"></a>二、常见高清视频“扩展名”、视频标准</h2><h3 id="1-AVI——廉颇老矣"><a href="#1-AVI——廉颇老矣" class="headerlink" title="1.AVI——廉颇老矣"></a>1.AVI——廉颇老矣</h3><p>AVI英文全称为Audio Video Interleaved，即音频视频交错格式。是将语音和影像同步组合在一起的文件格式。它对视频文件采用了一种有损压缩方式，但压缩比较高，因此尽管面面质量不是太好，但其应用范围仍然非常广泛。(就目前来看，随着观众对电影品质要求的提升，，且Mkv格式的普及，AVI格式越来越力不从心了，新片基本很少有人压avi格式了)。</p><p>现在，AVI在DVD时代很普遍，但现在高清普及了，已经很少、很少有人会压制AVI格式的高清资源。</p><p>举例说明：Breaking.News.2004.DVDRip.XViD-TLF.avi(大事件avi格式版本)</p><h3 id="2-MKV——当下主流"><a href="#2-MKV——当下主流" class="headerlink" title="2.MKV——当下主流"></a>2.MKV——当下主流</h3><p>MKV不是一种压缩格式，而是一种新的多媒体封装格式，也称多媒体容器 (Multimedia Container)。它可将多种不同编码的视频及16条以上不同格式的音频和不同语言的字幕流封装到一个Matroska Media文件当中。MKV最大的特点就是能容纳多种不同类型编码的视频、音频及字幕流。</p><p>MKV不同于DivX、XviD等视频编码格式，也不同于MP3、Ogg等音频编码格式。MKV只是为这些音、视频提供外壳的“组合”和“封装”格式。换句话说就是一种容器格式，常见的 AVl、VOB、MPEG、RM 格式其实也都属于这种类型。但它们要么结构陈旧，要么不够开放，这才促成了MKV这类新型多媒体封装格式的诞生。</p><p><img src="http://ww2.sinaimg.cn/mw690/9f0724e6gw1ekdntyz70vj20ia02qq36.jpg" alt=""></p><blockquote><p>举例说明：Children.Of.Man.2006.BDRE.1080p.x264.AC3-SiLUHD.mkv(人类之子MKV封装版本)</p></blockquote><h3 id="3-MOV——高清预告片首选"><a href="#3-MOV——高清预告片首选" class="headerlink" title="3.MOV——高清预告片首选"></a>3.MOV——高清预告片首选</h3><p>它是Apple公司开发的一种音频、视频文件格式。QuickTime文件格式支持25位彩色，提供150多种视频效果，并配有提供了200多种MIDI兼容音响和设备的声音装置。它无论是在本地播放还是作为视频流格式在网上传播，都是一种优良的视频编码格式。QuickTime因具有跨平台、存储空间要求小等技术特点，得到业界的广泛认可。</p><p>现在MOV格式常常被用来制作高清电影预告片，可以达到1080P的所谓全高清标准。</p><p>举例说明：terminatorsalvation-tlr1_h1080p.mov(终结者4高清预告片)</p><p>*主页君不太明白，为什么预告片发布都首选MOV格式，难道是因为在Mac电脑上编辑的缘故。</p><h3 id="4-MP4——手机、平板的新宠儿"><a href="#4-MP4——手机、平板的新宠儿" class="headerlink" title="4.MP4——手机、平板的新宠儿"></a>4.MP4——手机、平板的新宠儿</h3><p>有的电影是MP4格式的，这代表着它采用了MPEG-4视频压缩编码，但是具体是哪一种编码格式并不确定，一般来说是DIVX或者XVID。总之感觉是个很鸡肋的格式，一般是用在掌上便携设备上（IOS/安卓平台，如手机、平板），电脑用户不推荐。</p><p>举例说明：Friends.S01E01.The.One.Where.Monica.Gets.A.New.Roommate.iPod-mp4.chs-en.mp4(老友记第一季第一集，ipd专用版本，mp4格式)</p><h3 id="5-TS——此TS非彼TS"><a href="#5-TS——此TS非彼TS" class="headerlink" title="5.TS——此TS非彼TS"></a>5.TS——此TS非彼TS</h3><p>这个TS代表的是文件后缀名为.TS的高清格式。这种格式的优点在于对硬件的要求不高，即使是1080P的电影这两年的家用电脑都可以轻松播放，不过缺点同样明显——超大的文件体积，动辄三四十个G。</p><p>举例说明：<a href="mailto:Silent.Hill.Blu-ray.REMUX.MPEG2.1080P.LPCM.DTS.Orbitlee@Silu.ts" target="_blank" rel="noopener">Silent.Hill.Blu-ray.REMUX.MPEG2.1080P.LPCM.DTS.Orbitlee@Silu.ts</a>(寂静岭TS版，9碟，完全大小37.9G，单碟4.3G)</p><h3 id="6-RMVB——明日黄花"><a href="#6-RMVB——明日黄花" class="headerlink" title="6.RMVB——明日黄花"></a>6.RMVB——明日黄花</h3><p>RMVB由于很多年没有更新编码，再加上当初开发RMVB是为了做网络流媒体的，所以使用RMVB来压制高清是没有意义的，当RMVB码率达到1500KB以上就没有任何优势，甚至是出现劣势，因为算法关系，RMVB在处理细节和动态场景上是模糊的，无法展现细节，再加上他的音频是编码过的RA格式，严重丢失原声。</p><p>按理来说RMVB是早就应该淘汰的格式了，只有在中国这种特殊环境才得以生存。</p><h3 id="7-XviD——常见标准"><a href="#7-XviD——常见标准" class="headerlink" title="7.XviD——常见标准"></a>7.XviD——常见标准</h3><p>一种常见的视频编码标准。</p><p>最常用的MPEG-4视频压缩编码格式，我们下载的很多电影基于这种编码。</p><p>举例说明：Connected.2008.DVDRip.XviD-BiEN.avi(保持通话，xvid编码)</p><h3 id="8-X264——业界先锋"><a href="#8-X264——业界先锋" class="headerlink" title="8.X264——业界先锋"></a>8.X264——业界先锋</h3><p>一种常见的视频编码标准。</p><p>x264是一种免费的、具有更优秀算法的H.264/MPEG-4 AVC视频压缩编码格式。它同xvid一样都是开源项目，但x264是采用H.264标准的，而xvid是采用MPEG-4早期标准的。由于H.264是2003年正式发布的最新的视频编码标准，因此，在通常情况下，x264压缩出的视频文件在相同质量下要比xvid压缩出的文件要小，或者也可以说，在相同体积下比xvid压缩出的文件质量要好（*注：XviD、x264这点比较，摘自网上，不敢确定）。</p><p>举例说明：WALL.E.2008.BDRip.X264-TLF.mkv(机器人总动员，X264编码)</p><h3 id="9、x265-HEVC——下一代视频编码标准"><a href="#9、x265-HEVC——下一代视频编码标准" class="headerlink" title="9、x265/HEVC——下一代视频编码标准"></a>9、x265/HEVC——下一代视频编码标准</h3><p>下一代视频编码标准。</p><p>x265是一个开源项目，是一个将视频编码为H.265/高效率的视频编码（HEVC）格式的免费的库。</p><p>现在普通的是x264（H.264）编码标准，H.265理论上会比H.264更节省空间，理论上能减小一半体积，但编码时间长点，所以压制小组在压制时要花更多时间。但存储体积减小一半，也是很有吸引力的。并且，X265编码的视频对播放器解码能力要求也高，推荐使用最新的Potpayer，其带的解码器能完美解码x265编码视频，否则会出现马赛克、很卡、黑屏等现象，国产播放器目前一般还不支持x265解码。</p><p>举例说明：Rise.of.the.Planet.of.the.Apes.2011.BluRay.1080p.DTS.x265-CHD（猩球崛起，7.36GB）</p><p>举例说明：Rise.of.the.Planet.of.the.Apes.2011.BluRay.REPACK.1080p.DTS.2Audio.x264-CHD（11.43 GB）</p><p>体积明显减小（没有减小一半是因为为保障画质，提高了码率）。等</p><p>所以，等技术成熟了，x265势必会成为下一代标准，更加节省存储空间。</p><h3 id="10、8bit-10bit——下一代标准？"><a href="#10、8bit-10bit——下一代标准？" class="headerlink" title="10、8bit/10bit——下一代标准？"></a>10、8bit/10bit——下一代标准？</h3><p>主流的视频都是8bit，10bit应用较少。</p><p>10bit压制是为了用更低的码率的同时保证更好的质量。这个术语太专业了，有兴趣可以百度8bit、10bit，不作过多介绍了，都是关于压制的专业知识，普通网友不需要搞懂这些，没意义。</p><p>需要说的，10bit与x265类似，都是在不降低画质的前提下，以求达到更小的体积。为了同一个目的，两种技术而已。</p><p>举例说明：Blind.Detective.2013.BluRay.1080p.x264-10bit.2Audio.AC3-HDTime（盲探 ，8.14GB）</p><hr><h2 id="三、常见高清资源中的音频标准"><a href="#三、常见高清资源中的音频标准" class="headerlink" title="三、常见高清资源中的音频标准"></a>三、常见高清资源中的音频标准</h2><blockquote><p>音频标准中两家争夺比较厉害：杜比公司（Dolby Digital）和DTS公司(Digital Theatre System)。</p></blockquote><blockquote><p>以下介绍的音频标准，也是这两家同类型产品的竞争。</p></blockquote><h3 id="1-AC3——DTS的5-1声道"><a href="#1-AC3——DTS的5-1声道" class="headerlink" title="1.AC3——DTS的5.1声道"></a>1.AC3——DTS的5.1声道</h3><p>常见的电影音频格式。是DTS的。</p><p>杜比AC-3提供的环绕声系统由5个全频域声道和1个超低音声道组成，被称为5.1声道。5个声道包括左前、中央、右前、左后、右后。低音声道主要提供一些额外的低音信息，使一些场景，如爆炸、撞击等声音效果更好。</p><p>举例说明：Crank.2006.DVDRip.XviD.AC3-lsqh2002.avi(怒火攻心，音频格式AC3)</p><h3 id="2-DD5-1——杜比的5-1声道"><a href="#2-DD5-1——杜比的5-1声道" class="headerlink" title="2.DD5.1——杜比的5.1声道"></a>2.DD5.1——杜比的5.1声道</h3><p>常见的电影音频格式。是的杜比。</p><p>5.1声道就是使用5个喇叭和1个超低音扬声器来达到一种身临其境感觉的音乐播放方式，由杜比公司开发。一般来讲，只有高清视频才采用这种音轨。</p><p>举例说明：Upside.Down.2012.Extended.Cut.720p.BluRay.DD5.1.x264-EbP</p><p>*以介绍的是两家的5.1声道的音频标准，根据资源命名，还有可以遇到2.0、7.1声音。音频标准的水太深了，要太深厚的专业知识才能谈，主页君点到为止，有兴趣谷歌吧。</p><h3 id="3-次世代音轨——下一代音频标准，未来的发展方向"><a href="#3-次世代音轨——下一代音频标准，未来的发展方向" class="headerlink" title="3.次世代音轨——下一代音频标准，未来的发展方向"></a>3.次世代音轨——下一代音频标准，未来的发展方向</h3><p>人类的耳朵越来越会享受，音响设备越来越高端。</p><p>音频的发展是从声道数和码率上提高，从2.0声道发展到4.0、5.1、6.1、7.1……从kbps发展到Mbps、10Mbps……从有损压缩编码发展到无损压缩编码、无压缩编码……“次世代”音频就是无压缩编码。</p><p>次世代高清音轨，简单的说，是以下5种规格，LPCM（无损压缩）、杜比数字Plus（有损压缩）、杜比TRUEHD（无损压缩）、DTS-HD High resolution（有损压缩）、DTS-HD Master Audio（无损压缩）。这5种音轨，都是蓝光碟中新出现的音轨格式。普通音轨和次世代音轨相比就像256kbps码率的mp3和CD压缩的无损flac、ape相比一样，音质差距十分明显。</p><p>根据上面5种规格的命名，容易知道主要还是杜比、DTS两家的竞争，目前DTS处于上方。大部分蓝光原盘都使用的DTS“次世代”无损压缩。</p><p>因为一条次世代音轨少则1-2G，多则3-4G，太占地方了。所以，次世代音轨多在蓝光原盘、Remux、少量1080p资源中。720p及以下基本没有。</p><p>举例说明：Maleficent.2014.1080p.BluRay.REMUX.AVC.DTS-HD.MA7.1-RARBG （DTS的次世代音轨7.1声音）</p><hr><h2 id="四、电影资源的版本"><a href="#四、电影资源的版本" class="headerlink" title="四、电影资源的版本"></a>四、电影资源的版本</h2><h3 id="1-REPACK——重新打包版"><a href="#1-REPACK——重新打包版" class="headerlink" title="1.REPACK——重新打包版"></a>1.REPACK——重新打包版</h3><p>新片刚出时，有些电影压制小组，为了抢时间首发，难免乱中出错，导致视频压制错误，例如：压制视频时出些MSK（马赛克）、不能播放、失声等问题。所以，如果视频压制组织发布了一个坏的版本，他们会发布REPACK来解决这些问题。</p><p>增加Repack字眼，以区别上一版本，方便辨识。</p><p>举例说明：Divergent.2014.BluRay.Repack.720p.x264.DTS-HDWinG.mkv(歧者:异类觉醒，Repack版本)</p><h3 id="2-PROPER——竞争的结果"><a href="#2-PROPER——竞争的结果" class="headerlink" title="2.PROPER——竞争的结果"></a>2.PROPER——竞争的结果</h3><p>Proper，英语解释，合适的，寓意更合适，说明发布的版本比前一版本更好。一般用户不要纠结于此，有电影看就可以了，电影收藏发烧友才需要关注。有时与Repack混用。</p><p>举例说明：Pirates.Of.The.Caribbean.At.Worlds.End.PROPER.DVDRip.XviD-HooKah-CD1.avi(加勒比海盗3世界尽头proper版本)</p><p>以上两种版本是由于压制小组导致的，与原片源无关。以下说的版本，与电影发行方有关、或与片源有关。</p><h3 id="3-Director’s-Cut——导演剪辑版"><a href="#3-Director’s-Cut——导演剪辑版" class="headerlink" title="3.Director’s Cut——导演剪辑版"></a>3.Director’s Cut——导演剪辑版</h3><p>导演剪辑版，按导演拍摄电影的意愿剪辑的。因为影院上映的很多导演都没有优先剪辑权，要受投资方、制片人、市场等因素限制，不能按导演意思行事。</p><p>该版本主要用于碟片发行中，因为出于商业的、票房的原因，在影院上映的影片未必是导演最终剪辑后的版本。故而碟商们推出了所谓导演剪辑版，与影院版有所区别，也是为了满足一部分追求“原汁原味”的观众的要求，同时多了一条生财之道。</p><p>导演剪辑版与影院版，有的差别较大(无论是放映时间还是镜头)，有的则差别不大，因人因片而异。至于艺术成就，更是很难笼统而言。因为有人看重导演的主动权，但导演剪辑版也可能不如影院版更精炼，见仁见智而已。</p><p>举例说明：Saw.Director’s.Cut.HD.DVD.REMUX.VC1.1080p.DTS-HD.Silu.ts(电锯惊魂导演剪辑版)</p><h3 id="4-Unrated-Theatrical-Cut——未分级版-剧场版（影院上映版本）"><a href="#4-Unrated-Theatrical-Cut——未分级版-剧场版（影院上映版本）" class="headerlink" title="4.Unrated/Theatrical.Cut——未分级版/剧场版（影院上映版本）"></a>4.Unrated/Theatrical.Cut——未分级版/剧场版（影院上映版本）</h3><p>根据分级审查区分： 主要分为公映版和未分级版(Unrated）。MPAA(美国电影协会)根据电影的内容，会评定一个等级，如：R、NC-17、PG13、PG、G (越往后越小孩不宜)等。</p><p>有时为了照顾院线上映，适合上至成年人、下至儿童小孩，会对裸露、暴力、血腥、粗口等方面加以限制，删减某些片段。但是是在后面发行光盘时，限制就少了许多。加上未分级版（Unrated）字眼，也可以做为噱头宣传，增加发售量。</p><p>举例说明：Dawn.Of.The.Dead.UNRATED.Directors.Cut.2004.720p.BluRay.x264.AAC-iHD （活死人黎明，未分级导演剪辑版）</p><p>举例说明：Carrie.2013.2-in-1.Theatrical.&amp;.Extended.Cut.Blu-ray.CEE.1080p.AVC.DTS.5.1-HDCLUB（女嘉莉，剧场版/加长版2合1版本）</p><h3 id="5-LIMITED——限制级版"><a href="#5-LIMITED——限制级版" class="headerlink" title="5.LIMITED——限制级版"></a>5.LIMITED——限制级版</h3><p>LIMITED电影指该电影只在有限的电影院放映，通常少于250家。通常较小的电影(比如艺术电影)的发行是LIMETED。</p><p>举例说明：Frank.2014.LIMITED.720p.BluRay.x264-GECKOS (弗兰克limited版)</p><h3 id="6-Extended——加长版"><a href="#6-Extended——加长版" class="headerlink" title="6. Extended——加长版"></a>6. Extended——加长版</h3><p>情形和导演剪辑版类似，很多的加长版是用来圈钱的,有的干脆就是把花絮里的删除段落直接加进去,也就长了几分钟而已。也有很厚道的,比如指环王的加长版,一部就加长了近50分钟,肯定对剧情有影响的。</p><p>举例说明：The.Lord.Of.The.Rings-Return.Of.The.King.EXTENDED.EDITION.DVDRip.XViD-ALLiANCE(指环王3，加长版)</p><h3 id="7-IMAX——所谓巨幕"><a href="#7-IMAX——所谓巨幕" class="headerlink" title="7.IMAX——所谓巨幕"></a>7.IMAX——所谓巨幕</h3><p>IMAX(即Image Maximum的缩写，意为“最大影像”)是一种能够放映比传统胶片更大和更高解像度的电影放映系统。</p><p>整套系统包括以IMAX规格摄制的影片拷贝、放映机、音响系统、银幕等。标准的IMAX银幕为22米宽、16米高，但完全可以在更大的银幕播放，而且迄今为止不断有更大的IMAX银幕出现。 许多热门大片有普通和IMAX两种版本。</p><p>举例说明：Star.Trek.Into.Darkness.2013.IMAX.1080p.BluRay.x264-WiKi（星迹迷航，IMAX版）</p><h3 id="8、Anniversary-Edition——周年纪念版"><a href="#8、Anniversary-Edition——周年纪念版" class="headerlink" title="8、Anniversary.Edition——周年纪念版"></a>8、Anniversary.Edition——周年纪念版</h3><p>某某周年纪念版。</p><p>举例说明：Dr.Strangelove.45th.Anniversary.Special.Edition.1964.1080p.US.Blu-ray.AVC.TrueHD 5.1-i6henl@TTG（奇爱博士，45周年纪念版）</p><h3 id="9、CEE-EUR——中欧-欧版等"><a href="#9、CEE-EUR——中欧-欧版等" class="headerlink" title="9、CEE/EUR——中欧/欧版等"></a>9、CEE/EUR——中欧/欧版等</h3><p>跟DVD光盘类似，蓝光光盘在全球也是分区的，某区的光盘不能在其他区的光驱上播放，或有次数限制 。</p><p>一般分为美版、CEE版（中欧版)、韩版、日版、港版、台港、中国大陆版等多个版本。 其中美版大多画质和音效的配备较高，当然也不是绝对、也有不少节目是各国版本画面、音效一致，不同版本主要是在字幕语言和多国语言音轨的配置方面。如阿凡 达就是各国版本音画一致。但美版大多没有中文字幕，而CEE中欧版则多会加入中文字幕，因此受到很多国内用户的喜爱。</p><p>港版、日版等也大多配置中文字幕，但多数是繁体中文字幕，中国大陆版一般会添加简体中文字幕及普通话国语音轨。区分这些不同国家的版本，主要还得从BD Info信息来看画面码率、音轨配置、及字幕语言等详细信息来判断那个版本更为适合。</p><p>现全球范围内发行的蓝光版本为：</p><p>[大区]EUR,CEE,US,NODIC,</p><p>[部分国家地区]UK,FRA,GRE,HK,TW,JPN,KR</p><ul><li>EUR：是指在整个欧洲范围发行，字幕以英语为主，包括欧洲其他国家的小种语言，但是近来在欧洲的亚洲移民较多，同时也考虑到向亚洲范围内发行，所以现在部分EUR版蓝光有了中文，韩文，日语等字幕。</li><li>CEE：是指中欧国家经济体，也就是包括了中欧以及东欧地区的小国家，这个地区发行的蓝光原盘中文字幕较多。  而且有时画质也比其他区的好，极具有收藏价值。<br>US：是指美版蓝光，通常是在美国以及美洲地区首发，英语字幕为主，但为了照顾美洲其他国家，同时也有西班牙字幕，部分美版蓝光也有中，日，韩等字幕，因片而异。</li><li>NODIC：是指北欧地区，丹麦，挪威，冰岛等国家，这种版本的蓝光通常连英语字幕都没有，只有北欧国家的鸟语字幕，更不用说中文字幕了。很少见。</li><li>HK及TW：港版和台版，现在蓝光在香港以及台湾普遍的开始陆续发行，色戒，集结号等在港台上映的影片均发行了蓝光，欧美大片在港台发行已经有了相当数量，并面向东南亚地区发行，港台版本影片一般含有中文字幕（包括简体和繁体），卡通片以及纪录片带国语音轨也较多。</li><li>JPN,KR：日版和韩版。部分蓝光有中文字幕，甚至有国语音轨。因片而异。</li><li>UK,FRA,GRE：是指英国，法国，德国，这三个国家发行的蓝光均面向本土，故没有中文字幕，以英文字幕，法语字幕，德文字幕为主。<br>举例说明：Snatch.2000.JPN.Blu-ray.1080p.AVC.DTS-HD.MA.5.1-TTG（偷拐抢骗，日版蓝光，含中英日等多国字幕）</li></ul><p>举例说明：Puss.In.Boots.2011.HK.720p.BluRay.x264-WiKi (穿靴子的猫，香港版）</p><h3 id="10、REMASTERED-4K——重新灌录版-4K版"><a href="#10、REMASTERED-4K——重新灌录版-4K版" class="headerlink" title="10、REMASTERED/4K——重新灌录版/4K版"></a>10、REMASTERED/4K——重新灌录版/4K版</h3><p>Remastered主要用于CD，意为重新缩混的版本、重新灌录。</p><p>电影资源现在也引入这个词语，尤其是4K蓝光版是。许多老片蓝光修复、或4K蓝光修复、或某某周年纪念版时。</p><p>例如：Ghostbusters.II.1989.25th.Anniversary.Edition.Mastered.in.4K.Blu-ray.EUR.1080p.AVC.DTS-HD.MA.5.1-PCH（捉鬼敢死队2，25周年纪录版）</p><h3 id="11、Open-Matte——满屏版"><a href="#11、Open-Matte——满屏版" class="headerlink" title="11、Open.Matte——满屏版"></a>11、Open.Matte——满屏版</h3><p>和普通版本的的区别在于：画面比例。</p><p>例如《泰坦尼克》最初的BD版是1998年公映版，1998年的泰坦尼克采用的是传统胶片拍摄，画面比例为2.35:1，之后的16:9版本是2012年重映版，2012年重映采用了IMAX修复技术，修改画面比例为1.78:1，前者画面大小相对后者较小，后者的画面更加大，同一个镜头下能够容下更多的内容。两者并没有片长或者片质上的区别。</p><p><img src="http://ww4.sinaimg.cn/mw690/9f0724e6jw1ekes1dy1gsj20gs04oaap.jpg" alt=""></p><p>举例说明：I.Robot.2004.Open.Matte.1080p.BluRay.x264.DTS-WiKi（机械公敌，满屏版），满屏版(1.78:1)、宽屏版(2.35:1)</p><blockquote><p>注：视频编码方式/音频规格/封装方式等方面没有正式、统一的标准，不像其他行业，有政府或组织协会发布行业标准。这里没有标准，大家在这方面的见解、认识也是仁者见仁，智者见智。水很深，本文不可能完全正确，权作投砖引玉，高领悟人士可能会发现本文有纰漏，大家可以相互交流探讨。</p></blockquote><h2 id="五、通过NFO文件，查看压制参数"><a href="#五、通过NFO文件，查看压制参数" class="headerlink" title="五、通过NFO文件，查看压制参数"></a>五、通过NFO文件，查看压制参数</h2><p>通过一部部影片标题，可以看出很多信息，如</p><blockquote><p>The.Wolverine.2013.BluRay.720p.DTS.x264-OnlyHD </p></blockquote><p>（The.Wolverine.2013）：影片英文名称+出品年份<br>（BluRay）：蓝光版，常见的还有BRRip/BDRip，HDrip，DVDRip，DVDscr(预售先行版），R5，TS/TC/CAM（枪版），WEB-DL（在线高清收费破解版），详见上述！<br>720P，分辨率，一般的有720P、1080P、480p等。<br>（x264）：格式视频编码，如若是MKV格式一般为x264编码<br>（DTS）：音频格式，其外常见的还有AAC格式、mp3、Flac等。<br>（OnlyHD ）：影片压制小组，不同组压制的风格和水平不同，影片质量也不同。<br>我们在网上下到一部电影的时候，除了通过命名，还有什么方法了解资源的特性吗？答案是肯定的。我们下载资源，一般都包含如下三个文件：.mkv是正片，sample.mkv是样片（方便下一段验证资源的好坏）、.nfo是资源详细说明文件。<br><img src="http://ww4.sinaimg.cn/mw690/9f0724e6jw1ekeskvnxguj20fe01y0t5.jpg" alt=""><br>如上图红框中所示的nfo文件，可以用记事本打开。如下：<br><img src="http://ww4.sinaimg.cn/mw690/9f0724e6jw1ekesnnfe6xj20oa0a176w.jpg" alt=""><br>这里所指的资源，强调的是高清资源，或正规小组出的AVI,MKV格式的影片，非水印漫天飞的RMVB格式。另外，并不是高清格式区影片就一定比RMVB区的清晰，关键要看影片的版本、压制参数、码率、分辨率等等，在高清格式的影片都有具体的影片压制参数：视频编码、分辨率、帧、码率等，音频格式，比特率等，大家要学会看懂。更多这方面的信息，可以参考：NFO格式文件相关资料</p><p>这是举例，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Codec................: AC3 （音频格式）</span><br><span class="line">Bitrate..............: 448 Kbps （音频比特率）</span><br><span class="line">Channels.............: 6</span><br><span class="line">Language.............: English | Mandarin | Cantonese（音频语言：英语、普通话、粤语）</span><br><span class="line">Subtitles............: English | French| Japanese | Chinese （字幕:英语、法语、日语、中文）</span><br><span class="line">Encoded By...........: Reidy   （视频重编码者的网络昵称）</span><br><span class="line">Codec ID.............: XViD （视频编码）</span><br><span class="line">Type.................: AVI （视频格式）</span><br><span class="line">Resolution...........:1280x544 （视频分辨率）</span><br><span class="line">Aspect Ratio.........:2.35:1 （画面比例）</span><br><span class="line">Q Frame..............: 0.120</span><br><span class="line">Bitrate..............: 2 997 Kbps （视频码率）</span><br><span class="line">Framerate............: 23.976 fps （帧）</span><br></pre></td></tr></table></figure><p>所以，通过，阅读nfo文件，可以对资源的压制参数（字幕、音轨等），一目了然。</p><hr><h2 id="六、什么清晰画质，什么是质量好的资源"><a href="#六、什么清晰画质，什么是质量好的资源" class="headerlink" title="六、什么清晰画质，什么是质量好的资源"></a>六、什么清晰画质，什么是质量好的资源</h2><h3 id="①rmvb、avi、mkv格式基本退出舞台，为什么mkv格式越为越流行？！"><a href="#①rmvb、avi、mkv格式基本退出舞台，为什么mkv格式越为越流行？！" class="headerlink" title="①rmvb、avi、mkv格式基本退出舞台，为什么mkv格式越为越流行？！"></a>①rmvb、avi、mkv格式基本退出舞台，为什么mkv格式越为越流行？！</h3><h4 id="1、在体积相等的情况下，RMVB和MKV这两种格式哪个更清晰？"><a href="#1、在体积相等的情况下，RMVB和MKV这两种格式哪个更清晰？" class="headerlink" title="1、在体积相等的情况下，RMVB和MKV这两种格式哪个更清晰？"></a>1、在体积相等的情况下，RMVB和MKV这两种格式哪个更清晰？</h4><p>没可比性，MKV只是个封装方式，RMVB只是个编码格式，而且不可能体积一样。</p><p>因为mkv、avi、mp4等只是视频的封装格式，要分析那种视频更清晰的话，要看这些视频文件使用了什么视频编码。</p><p>如果真要比，推荐Mkv格式，rmvb为了达到体积小、清晰，使用模糊细节造成清晰的错觉，而mkv封装的电影更强调细节，视觉效果更好。</p><p>并且，rmvb格式的电影现在乱象丛生。现在，许多rmvb标注的神马高清BD，高清DVD，大多是吸引眼球，赢取点击而达到盈利的目的，广告水印亦是如此。一些网站为了广告，简单压制成rmvb，打上水印，就传到网上。而mkv压制电影的小组，相比来说专业点，虽然可能出于爱好，但更多是出于热爱！！</p><p>另外，RMVB资源命名也不规范，没有上面介绍的那些专业命名术语，都是简单的中文名，好的还可能加上音轨、字幕等信息，简单粗暴，既不专业，也不能让网友了解压制参数。</p><h4 id="2、一般电影观众下什么格式的电影、多大体积？"><a href="#2、一般电影观众下什么格式的电影、多大体积？" class="headerlink" title="2、一般电影观众下什么格式的电影、多大体积？"></a>2、一般电影观众下什么格式的电影、多大体积？</h4><p>一般1-2G左右大小，即BDRip、WEBRip、HDTVRip等，即可满足大众需要；再清晰画质的720P是最好了，4-6G左右，在有限网速下，最大满足视觉享受。</p><p>对电影发烧友，收藏者，首选1080P、720P。当然，再发烧，蓝光原盘、DIY蓝光原盘、Remux收藏的也是很不错的选择！！</p><h3 id="②同一部电影为什么同是720p，体积大小会相关很大呢？或者，同一部电影，720p为什么会比1080p大呢"><a href="#②同一部电影为什么同是720p，体积大小会相关很大呢？或者，同一部电影，720p为什么会比1080p大呢" class="headerlink" title="②同一部电影为什么同是720p，体积大小会相关很大呢？或者，同一部电影，720p为什么会比1080p大呢?"></a>②同一部电影为什么同是720p，体积大小会相关很大呢？或者，同一部电影，720p为什么会比1080p大呢?</h3><p>上面也有写过的，720p/1080p只是分辨率，仅此而已，在其他条件没确定的情况下，不与体积大小成正比。一部视频大小只与码率成成比。</p><p>上面讲分辨率的时候说到，分辨率挺重要，但决定一段影片细节的最重要的还是码率。码率就是比特率，是指每秒传送的比特(bit)数。单位为 bps，比特率越高，单位时间内传送的数据量越大。码率和质量成正比，也与文件体积成正比。这就是为什么重编码视频体积大，蓝光原盘体积更大。蓝光原盘BD50码率在30Mbps左右，BD25在20-25Mbps左右，质量较好的1080P视频主流码率在10Mbps左右，720p码率在4-6Mbps左右。</p><p>码率对视频质量和体积影响真的很大，这也导致你下电影的时候会因发现同一个电影，出现文件体积：720P(低码率)＜1080P(低码率)＜720P(高码率)＜1080P(高码率) 的情况而百思不得其解。这种时候720P(高码率)的画质要好于1080P(低码率)，因为细节更为丰富。</p><p>一部电影体积大小=码率*片长，所以一部电影跟片长也有关系的。一般而言：</p><ul><li>720p（低码率）1-4G左右、1080p（低码率）1-4G左右。</li><li>720p（高码率）4-8G左右、1080p（高码率）6-10G左右。</li></ul><p>选择下载哪个片子就很明显了（一般推荐前3种）：</p><ul><li>如果你空间充足追求品质你就下载原盘或者1080P(高码率)。</li><li>如果你空间不足但也在意细节，希望好点，就下720P(高码率)。</li><li>如果你空间不足又想看的差不多就下720P(低码率)。</li><li>如果你在乎分辨率又不是憋着看画面细节那种你就下1080P(低码率)。</li></ul><p>详情可以看这篇文章：视频码率、帧率和分辨率到底哪一个影响电影的清晰度啊？</p><h3 id="③到哪里查询电影发售时间？为什么高清资源基本都没有中文字幕？怎么加载外挂字幕？"><a href="#③到哪里查询电影发售时间？为什么高清资源基本都没有中文字幕？怎么加载外挂字幕？" class="headerlink" title="③到哪里查询电影发售时间？为什么高清资源基本都没有中文字幕？怎么加载外挂字幕？"></a>③到哪里查询电影发售时间？为什么高清资源基本都没有中文字幕？怎么加载外挂字幕？</h3><p>详情看这篇文章，这里不再赘述了。关于出片时间，下载速度，电影字幕的说明 </p><hr><p>转载自蓝影网：<a href="https://web.archive.org/web/20150315022255/http://www.lanyingwang.com/cam-ts-tc-dvd-hd-bd-tvrip.html" target="_blank" rel="noopener">https://web.archive.org/web/20150315022255/http://www.lanyingwang.com/cam-ts-tc-dvd-hd-bd-tvrip.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高清知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCDecNV / DGIndexNV 2052 破解版</title>
      <link href="/2016/09/06/20/"/>
      <url>/2016/09/06/20/</url>
      
        <content type="html"><![CDATA[<p>Build 2052</p><ul><li><p>Fixed MP4 parsing to properly handle ‘largesize’ atoms.</p></li><li><p>For some streams in an unwritable location, DGIndexNV was crashing when the stream<br>was opened. Fixed.</p></li><li><p>Modified DGDecodeNV to allow it to open compatible older DGI files, without generating<br>the version mismatch popup.</p></li><li><p>Fixed a problem that (rarely) caused DGIndexNV to hang at startup until an arrow key<br>is pressed.</p><a id="more"></a></li><li>DGIndexNV adds a CLI option to specify the angle when opening an MPLS file from a bluray.</li></ul><p>Example: dgindexnv -i 00001.mpls -ang 0</p><p>If a valid angle is specified then the angle popup dialog is avoided.</p><ul><li><p>Fix for random failures of DGIndexNV to startup.</p></li><li><p>Added a new auxiliary INI file option Force_Zoom. For example, if you want DGIndexNV to always use<br>a zoom factor of 1/2, then set Force_Zoom to 2.</p></li><li><p>Fixed bug in which the CLI progress report percentage could go backwards.</p></li><li><p>Added a new CLI option -nc to disable automatic cropping for CLI invocation. For example, if you have<br>a stream with height 1088 and you do not want it to be automatically cropped to 1080, include -nc on<br>the CLI invocation.</p></li><li><p>Fixes crashes when an MKV file has more than 32 tracks.</p></li><li><p>Improved handling when opening zero-length files (for both CLI and GUI).</p></li><li><p>Fixed a bug that could cause a GOP back operation in DGIndexNV to fail.</p></li><li><p>Added GTX 1070 and GTX 1080 to the GPUs database.</p></li><li><p>Rebuilt DGDecodeNV for Avisynth 2.6 compatibility. Avisynth 2.5 is no longer supported.</p></li></ul><hr><blockquote><p>网盘<br><a href="https://pan.baidu.com/s/1slAIWqD" target="_blank" rel="noopener">https://pan.baidu.com/s/1slAIWqD</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频压制 </tag>
            
            <tag> megui </tag>
            
            <tag> DGIndexNV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反电信劫持路由器猫</title>
      <link href="/2016/09/06/21/"/>
      <url>/2016/09/06/21/</url>
      
        <content type="html"><![CDATA[<h2 id="登入路由器猫"><a href="#登入路由器猫" class="headerlink" title="登入路由器猫"></a>登入路由器猫</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.1</span><br></pre></td></tr></table></figure><h2 id="登录电信管理帐号"><a href="#登录电信管理帐号" class="headerlink" title="登录电信管理帐号"></a>登录电信管理帐号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">帐户:</span><br><span class="line">telecomadmin</span><br><span class="line">密码:</span><br><span class="line">nE7jA%5m</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="删除页面推送"><a href="#删除页面推送" class="headerlink" title="删除页面推送"></a>删除页面推送</h2><p>如图，基础配置-网络配置-页面推送-找到地方，删除或者关闭~~<br><img src="http://xiedandan.com/wp-content/uploads/2015/09/QQ20150911105147.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反劫持 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源搜索技术四之德国篇</title>
      <link href="/2016/06/04/19/"/>
      <url>/2016/06/04/19/</url>
      
        <content type="html"><![CDATA[<p>　　今天来谈的是德国资源搜索。想必看过前三篇的朋友也有一定数量了，本来不想再写，但是因为前三篇是很久之前就写好的，而且随着时间的流逝，很多之前的搜索方法已逐渐不再适用，或者之前推荐过的资源站点已经不复存在，所以这里我决定还是继续写下去，以便让朋友们能够及时跟进。</p><p>　　惯例总结一下德国资源的特点。一、网盘下载方式主导二、独立电影盛行三、论坛形式广泛四、usent下载方式普遍<br><a id="more"></a><br>　　一、德国人做事情很严谨，也很周全，所以连网盘设计这个地方都能彰显魅力。一般的国外网盘免费下载方式基本都以输入验证码及读秒的方式完成，但是德国人做网盘，会出现许多新花样，需要度过层层关卡才会达到最终下载章节，虽然这种方式增加了下载的繁琐程度，但却也让喜欢探索的人有了新的乐趣。德国人网盘下载与其他国家不同，并不善用idm，而是更喜欢使用jdownloader，jd有利有弊，可以自行抓取媒体流及探索压缩包密码，但有时候下载容易中断且不能续连，所以一般网络不稳定的朋友并不建议使用。</p><p>　　二、德国人血脉中有比较野性的一面，特别是喜好极端艺术，尤以血腥暴力为主，不论是电影还是音乐，德国都存在着对哥特式死亡的崇尚，这在全欧洲来说也是别具一格的。单从电影来说，大部分独立血浆影片来自德国，其拍摄水准也达到了同行业至高点，成为了重口迷的津津乐道之处。不过虽然德国独立影片在粉丝群中火爆，但在全世界范围内，依然属于小众，这也使其资源并不是唾手可得，增加了资源搜索的难度。</p><p>　　三、第三点也是主要讲的一点，德国电影大多以论坛形式传播，论坛则多以网盘及usent方式下载。德国的论坛非常多，比较著名的有nox、bloodsuckerz、boerse、mygully、3dl.tv、warez-world等等。德站的资源质量都比较不错，正规论坛站点很少出现渣画质的压制品，这也体现了德国人做事的认真。论坛是德国电影爱好者的主要活动区域，你不但可以在论坛里得到电影，还可以得到其他相关资源，而且可以很友好地与德国人聊天。德国电影的搜索方式也同样是可以使用谷歌关键词堆砌及图搜等相关方式完成，一些重要的ptbt站点也有很多德国影视资源，这个在前几篇就提到过，所以就不在复述。</p><p>　　四、之所以把usent放到最后来说是因为usnet在国内还不够普遍，但是在德国是比较盛行的。usenet又称”新闻组”(newsgroups)，是一个全球性的文件交换网络，主要是付费的形式，当然，通过一些操作也可以实现免费的试用过程。这里有一个关于usent使用很好的教程，来自阮一峰的个人网站，在此借用并表示非常感谢。大家有时间可以参考一下。<a href="http://www.ruanyifeng.com/docs/usenet/" target="_blank" rel="noopener">http://www.ruanyifeng.com/docs/usenet/</a></p><p>　　以上便是对德国资源的一些介绍，资源搜索系列还会写下去，下一篇应该是法国篇或者意大利篇，也会对我个人对于不同国家资源及站点的一些理解看法，希望大家可以继续支持下去。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的团长我的团.1080p.WEB-DL.[百度网盘]</title>
      <link href="/2016/06/02/18/"/>
      <url>/2016/06/02/18/</url>
      
        <content type="html"><![CDATA[<blockquote><p>目前画质最好的版本</p></blockquote><p><img src="https://ww4.sinaimg.cn/large/92253953jw1f4gzgp2sekj20k80sndk4.jpg" alt=""></p><p>【剧　　名】：我的团长我的团<br>【集　　数】：43集<br>【年　　份】：2009<br>【语　　言】：中文<br>【字　　幕】：简体中文<br>【导　　演】：康洪雷<br>【主要演员】：段奕宏–饰龙文章(团长)<br>　　　　　　　张　译–饰孟烦了<br>　　　　　　　张国强–饰迷　龙<br>　　　　　　　邢佳栋–饰虞啸卿(师长)<br>　　　　　　　李　晨–饰张立宪<br>　　　　　　　刘威葳–饰上官戒慈<br>　　　　　　　高　峰–饰康　丫<br>　　　　　　　袁　菲–饰陈小醉<br>　　　　　　　赵志君–饰唐基(副师长)<br>　　　　　　　罗京民–饰郝希川(兽医)<br>【剧情简介】：<br>　　时间回转到1942年，中国大地正深陷于抗日战争的苦难之中，各地军民的反抗斗争进行得如火如荼之际……<a id="more"></a><br>　　中国云南由于它特殊的地缘关系成为抗日战争时期的一个重要战场，它离海不远，可以借道出国、借船出海。向东，可以通过越南进入北部湾，通往太平洋，向 西，可以利用缅甸、泰国、印度，借助孟加拉湾到印度洋。于是，滇缅公路、滇越铁路…60年前从红土高原延伸出了这样一条条抗战生命线，它们构筑了高原新的 脊梁。中国军民如何前仆后继地浴血奋战消灭日寇保卫抗战生命线的真实历史故事，便成为了《我的团长，我的团》的整个故事背景和立意所在。<br>　　在一个离中缅边境不远叫作禅达的地方，一群来自五湖四海、不同出身不同身份甚至是不同政见的溃兵和百姓，因为种种命运际遇的原因而相会于此：北平人孟 烦了、军医郝兽医、湖南兵不辣、上海军官阿译、东北佬迷龙、豆饼、要麻、蛇屁股、康丫、川妹子小醉……战争的苦难和身体的伤病让他们过着绝望的日子，他们 互相厌憎又相依为命，不饿死不病死成为他们每天生存的最高目标。为了在严酷的战争环境下生存下来，别无选择的他们不得不摒弃前仇、恩怨、偏见、狭隘而团结 一致组成一支小分队，在现实的困境中他们认识到了民族存亡的大义，于是义无返顾共同投入到打击日本侵略者、保卫家园、捍卫尊严、为抗战胜利不惜付出生命代 价的正义斗争中，用血肉之躯书写一曲曲铁血卫国的悲壮战歌！<br>　　一场战役过后小分队死伤惨重，硝烟弥漫中突然闯进一人，这个用诡计杀死了在仓库外封杀的五个日本兵的诡异男人自称是川军团副团长龙文章！回到禅达，龙 文章被宪兵逮捕，原来他不是什么团长，只是一个在团副死后摘了团副军衔给自己挂上的中尉。其他人被关在收容站，就在众人揣测身世极端坎坷的龙文章已经被枪 毙之际，传来新师长虞啸卿正式任命龙文章为团长的消息……<br>　　在和日军凭怒江对峙的时刻，绝地求生的他们邂逅了一个有红色倾向的学生，龙文章和他相见恨晚，在理想与灵魂的辩论中面红耳赤…最后龙文章意味深长地说：我们太老，他们太年青……<br>　　不久，龙文章拉出一支十三人突击队从红色学生说过的一处没被日军监控的湾流通过怒江去铜钹救回孟烦了的双亲。日占区的疮痍让众人觉得满心罪过，而龙文 章把他所谓的搭救变成了一场渡江侦察，期间邂逅了一支共产党游击队，曾经和龙文章辩论的红色学生已经是共产党员……突击队成功撤回东岸，共产党游击队为了 不让日军发现那条过江通道而全军覆没……<br>　　虞啸卿正在准备一场大规模的渡江攻势，打算拿下已成心腹之患的南天门，一年多来日军已经把整座山改造成了庞大的堡垒，而以炮灰团从江那边得来的经验， 这样的攻势一定是必败。龙文章力止，虞啸卿给他半个月时间去寻找放弃攻击的证据。龙文章和孟烦了被迫出没西岸，在日军眼皮底下绘制南天门工事图。在龙文章 收集不可攻击的证据时，同样找到了攻下南天门的方法，但他无法说出“那个极其惨烈的方法”，因为他爱惜这个被戏称为炮灰团的每个人的性命，他心里清楚， “那个极其惨烈的方法”将意味着什么……<br>　　这是一场战争，一场从此将炮灰团深深烙在历史长轴上的惊天地、泣鬼神的死亡之战……<br>　　《我的团长，我的团》是一部主旋律题材作品，它从一 个独特的视角展现了中国各地军民联合起来共同抗击日本侵略者、承受战争苦难的历史全景图，突出了中国军民的民族大义和豪迈正气，其惨烈残酷、其艰苦卓绝、 其无与伦比的历史真实度与深刻的历史存在感，将令每一个观看此剧的观众再一次地成为这段历史的亲历者与见证人……</p><p><img src="http://ww4.sinaimg.cn/large/92253953jw1f4gzkb3pmgj20s40isafg.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/92253953jw1f4gzkwt3usj20s40isdkq.jpg" alt=""></p><p><em>百度网盘链接</em></p><blockquote><p>链接：<a href="http://pan.baidu.com/s/1hrH1xPi" target="_blank" rel="noopener">http://pan.baidu.com/s/1hrH1xPi</a> 密码：os5t</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电视剧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>资源搜索技术三之日本篇</title>
      <link href="/2016/05/27/17/"/>
      <url>/2016/05/27/17/</url>
      
        <content type="html"><![CDATA[<p>拖了好久，今天终于谈到了日本篇，而且相信这也是大家相对比较关心的一篇。因为raremovie有着大批的pinku迷。所以在这里，我将不仅仅介绍在日本网站搜索电影的方法，也会讲一讲日影的搜索收集办法。</p><hr><p>先总结一下特点：</p><p>一、版权限制严格<br>二、网盘博客<br>三、他国取种<br>四、在线视频下载（重点）</p><a id="more"></a><hr><p>（一）版权大家都理解，在日本本土，可以说版权的限制要比其他我们熟知的国家都要严重。在日本网站中，你几乎不会找到任何一个资源分享的bt或者pt论坛，也不会找到一个专业分享的网盘站（av除外）。所以，在日本本土网站取源，那么几乎全部集中到了在线视频这一点上。这个我们后面会详细提到。</p><p>（二）网盘博客。这里所说的网盘博客，指的是一些国外爱好者或者少数国内爱好者在国外开办的博客站，收集一些日本电影，常常以pinku为分类，比如我们常见的非专业（未出现日文片名）的wip，rl，相对专业（出现日文片名）的j字头网盘博客（je，jd，jf等）。虽然博客资源并不庞大，但是对于稀缺的日影来说，这些已经很给力了。</p><p>（三）日影在国外的一些论坛站点还是有许多资源的，特别是一些pt大站，比如adc，at，kg，cg，ptp等等。一些bt站比如ru，（俄罗斯比较多），kickass，海盗湾等等，这里特别提出一点，在一些亚洲其他国家，同样有着日本电影的bt，ed2k或者网盘下载，但是大家用的较少，比如（韩国，越南，泰国，伊朗）所以需要掌握一些韩国的bt站在线站.越南的网盘论坛以及泰国或者伊朗的在线站，这一点是比较独特的，会用的人不多。在非日本本土搜集日影的方法，路子和其他国家电影搜索类似，唯一不同的就是需要将日文片名替换成英文或者其他国家文字片名，之后可以按照前面讲述的两国搜索方法进行搜索。</p><p>（四）终于到了在线视频，前面其实都是铺垫。真正要讲的东西在这里。日本的“类似博客”并不少。其列表也很多，都从属“無料映画”分类。也就是免费的在线影视。国内的为“邦画”，国外的为“洋画”，通常可以找到很大的列表。之后按照列表去取影就可以了，也有自带的搜索引擎。目前最著名的两个日影博客为mhometheater与nekomoe。</p><p>我想这里很多人都会说一个名字“FC2”。的确是这样，FC2可以说是日影资源的主力军，大部分稀有日影，都是在FC2上淘来的。FC2的利用方法很简单，可以直接搜索日文片名，之后找到视频地址，利用一些下载工具就可以实现。资源体积都不大，基本都在几百兆，所以下载起来非常方便，推荐使用FVD这款浏览器插件，方便好用。FC2分为两部分，一部分是正常电影，一部分是成人分区，而大家喜欢的pinku类型，常常就在成人分区里。</p><p>FC2有时候会被墙，有时候则不会，有些页面会，有些页面又不会，需要自己把握。另外有些FC2的影视需要会员等级才可以观看下载，所以大家可以适时办理一下。</p><p>2015年对于FC2来说可以是浩劫之年，因为随着盘踞在FC2的日本资源大神一个个被封杀，FC2的稀缺资源也随之流失，万幸的是，本人与朋友在2014年下载了大部分FC2的存在文件，这是唯一让人安慰的。</p><p>对于FC2我就不再多说了，因为大家都很了解，关键要讲述的，是非FC2的视频站点，也可以好好利用起来。</p><p>一般日影的集中站点有以下几个：<br>1、FC22、youtube（翻墙） 3、dailymotion（翻墙） 4、nicovideo （翻墙）5、veoh（翻墙）6、gyao（日本ip） 7、pandora 8、pipii 9、xvideos（翻墙）10、0xdb 11、naver12、daum 13、google视频 14、vk以及其他俄罗斯在线站点 15、hulu日本（美国ip）16、B站 17、土豆 18、miomio</p><p>我想在这里，大家可能比较熟知的是FC2、youtube、dailymotion、B站。剩下的估计没有人知道完全了。所以在这里把这些视频站点为大家分享一下，其中FC2、nico、gyao、pipii、miomio都是日本本土的。pandora、naver、daum是韩国的，vk俄罗斯，B站、土豆中国，其他基本都是英文国家网站。这里列出的18个，其实只是一小部分，国外还有很多类似的影视在线站点，都有完整的日影作品，本人在搜索过程中遇到过很多，特别是一些成人网。虽然这些是个人比较常用的，但却远远不足，还需要大家去整理发现。其下载方法都比较类似，各种插件软件就可以解决。日影的搜索引擎也比较多，这里给大家推荐使用雅虎日本，只要在搜索引擎里输入日文片名或者关键字，就可以搜索到影视地址。</p><p>现在还有一类搜索方式是直接依靠国外软件，比较著名的是winny与share，（share是高级版winny）是一种数据传输软件，运用p2p的传输方式，但是有更加相对完整的保密性。具体使用方法网上已经有很多教程，因为内容相对较多，今后会单开篇章介绍，各位关注就好。</p><p>该讲的差不多了，以后想起什么再补充，这里提醒一下大家，由于日方的版权限制严格，所以很多在线视频并不长远，如果发现，需要及时下载保存，否则很可能就会被举报失效，到时候后悔莫及。以上这些都是仅仅从搜索角度讲的，很多日影大神都走的是海外购碟这条路，DMM，中古，亚马逊这些都是淘碟圣地。具体海淘方法以后会单开篇讲。相辅相成，就可以最终实现资源伟业。希望大家都努力探寻吧！</p><hr><h3 id="转载来源"><a href="#转载来源" class="headerlink" title="转载来源"></a>转载来源</h3><p><a href="http://weibo.com/p/230418ce9fdf200102wf7w" target="_blank" rel="noopener">资源搜索技术三之日本篇|丶稀有电影</a></p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim中文乱码的解决方法</title>
      <link href="/2016/05/26/16/"/>
      <url>/2016/05/26/16/</url>
      
        <content type="html"><![CDATA[<p>系统环境:cnetos6和debian7下都测试可行</p><p>在用户主目录<code>~</code>下的创建<code>.vimrc</code>文件，加上fileencodings、enc、fencs，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1</span><br><span class="line"><span class="built_in">set</span> enc=utf8</span><br><span class="line"><span class="built_in">set</span> fencs=utf8,gbk,gb2312,gb18030</span><br></pre></td></tr></table></figure><a id="more"></a><hr><p>资料来源<br><a href="https://www.zhihu.com/question/22363620/answer/56603960" target="_blank" rel="noopener">用vim打开后中文乱码怎么办？</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源搜索技术二之西班牙篇</title>
      <link href="/2016/05/23/15/"/>
      <url>/2016/05/23/15/</url>
      
        <content type="html"><![CDATA[<p>同第一篇结尾的提示一样，这里所说的西班牙，并不是特指西班牙，而是泛指那些所有使用西班牙语的国家，如阿根廷，墨西哥等。</p><hr><p>西班牙的资源站同有几个特点：</p><ul><li>一、ed2k下载方式盛行</li><li>二、网盘博客众多 </li><li>三、老式电影资源广泛 </li><li>四、论坛资源庞大</li></ul><hr><a id="more"></a><p>（一）与其他国家的种子下载方式不同，ed2k在西班牙占据主流的位置，我们可以使用常见的迅雷旋风或者电驴等进行下载，不过这里有一个问题，就是由于远在他国取源，所以其连接并不是很通畅（除非以前有人下载过，记录到了本国服务器上），一般只有通过离线的方式才能将其拖下，而且并不是100%，成功离线的可能只有50%左右，所以说西班牙的资源拖拽还是存在一定困难。而且每一个下载器对于西班牙ed2k的识别度不同，这就要求我们在下载的时候需要多种方式并存，比如拖拽西班牙ed2k的时候，迅雷完全没有速度，包括离线，但是电驴却可以收取到信号，所以需要进行多次尝试。</p><p>（二）网盘博客在西班牙是十分流行的，一般都是由一两个人开博，多的也会有四五个，然后会将类型分布好，长期更新。资源可谓十分充足，博客的下载方式以网盘为主，不过这里带一句，在此之前，博客大多都以三个经典的主流网盘为存储方式，他们分别是来自美德的megaupload，mediafire，RapidShare。同时我们也知道，此三盘也早已风光不在，megaupload被查封，转型成为mega，而之前存入megaupload的资源则全部失效。RapidShare与mediafire的命运也与之类似，资源大部分丧失，只有少部分幸存下来，所以不夸张的说，megaupload，RapidShare，mediafire这三家资源库的崩塌可谓是稀有资源界有史以来最大的浩劫。目前来看，西班牙博客的网盘存储散于各种网盘，例如mega，SpeedyShare，putlocker，4shared，iFolder，hotfile，gigasize等。</p><p>（三）老式经典资源在西班牙十分流行，可能这与西班牙语国家的怀旧情节以及热爱经典的心理有关，这里主要指那些黑白画面，特别是那种以绘画人物像形式来作为海报的影片。（例如“卡萨布兰卡”）。而且西班牙喜欢字幕制作，经常会将外文字幕翻译为西班牙文。并且有很多独立的字幕组。</p><p>（四）上面主要介绍了西班牙的资源概况，下面应该说一说具体的搜索方式，大致方法也是类似的，如果采用google的话，那么直接搜索影片的西班牙名称即可。至于西班牙语的名称，我们可以从以下途径得到，一是imdb，二是Wikipedia，三是西班牙“豆瓣”filmaffinity。imdb虽然不支持中文或者俄文等译名，但是还是支持西班牙，法文，德文等等的。西班牙的在线影视站点也很多，不过大部分都是转载其他影视站点的内容，比如youtube，vk等等，我们可以直接在google搜索películas<br>online就可以轻松的发现。不再细说。接下来简单介绍一下西班牙的论坛，西班牙的论坛资源量充足，分类明细。我们只需将其记录，当作工具直接来用即可。资源搜索也集中在此类论坛与第三条的博客之中，因为资源实在太多，所以不好列举，只说几个常用的，尖货exvagos，经典divxclasico，老式noirestyle，mini电影minifilms。西班牙的水很深，等待大家慢慢摸索发现。</p><hr><p>好了，西班牙的介绍就到这里，因为一时想不起那么多，有什么遗漏的以后慢慢增补。资源为原创，转载请注明出处，谢谢。</p><hr><h2 id="转载来源"><a href="#转载来源" class="headerlink" title="转载来源"></a>转载来源</h2><p><a href="http://blog.sina.com.cn/s/blog_ce9fdf200102wetd.html" target="_blank" rel="noopener">资源搜索技术二之西班牙篇-丶稀有电影的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源搜索技术一之俄罗斯篇</title>
      <link href="/2016/05/23/14/"/>
      <url>/2016/05/23/14/</url>
      
        <content type="html"><![CDATA[<p>本来想写个整体的叙述，但是发现内容太多，一时难以摘理，所以打算分篇来写。今天就来为大家介绍一下俄罗斯。</p><hr><p>谈到俄罗斯，我想可以用几个特点来概括：</p><ul><li>一、盗版大国</li><li>二、双语混音 </li><li>三、在线站点 </li><li>四、bt/pt及网盘或ed2k论坛 </li><li>五、网盘博客</li></ul><hr><a id="more"></a><p>（一）盗版大国，从侧面表达的意思就是其资源是相当丰富的，一些稀有影视资源均可在俄罗斯站点找到。</p><p>（二）双语混音指的就是俄站的电影一般都是在其原有音轨的基础上，再加上另一条俄配音轨，我们听上去就是两种语言在同时发声，而且配的还毫无水平，让人十分蛋疼，有些朋友会通过技术手段去除俄音轨，不过总体来说还是很麻烦。</p><p>（三）在线站点众多，成百上千毫不为过，其大多以vk为载体，成立各个影视站点。（就好比国内的多家网站以快播或百度影音为载体，虽然本质不同，但是形式上一样）不过同时存在一些其他类别影视载体，比如kinobanda，tfilm，viooz，sockr，filmix等（可以从播放器形式上加以区分）这些在线站点基本都可以在国内直接点击播放，不过缓冲速度不一。而且很多站点在在线的同时可以下载，而搜索这类影视的办法主要有两种。</p><p> 1、google关键词堆砌。</p><p> 一般俄罗斯影视站点的排列顺序是这样的（俄文名）（英文名）（смотреть фильм）（年份信息等）或者（Смотреть онлайн фильм）（俄文名） （英文名）（年份信息等）括号里的俄文基本都为在线观看的意思。那么这里会遇到一个问题，怎么才可以知道一部电影的俄文名？我想和我们一样，我们知道一部电影的英文名大部分是在豆瓣或者时光一类的网站上搜索中文名，之后就可在相关资料中发现英文名，其实俄罗斯也有“豆瓣”，而这个“豆瓣”，使用范围最广的，就是kinopoisk，俄文表达是：КиноПоиск。只要你在导航里搜索英文名，就可得到此部影片的相关俄文资料，俄名也自在其中，只需将其记录即可。</p><p>2、google海报图搜。</p><p>这里的方法其实很通用，不仅仅适用于俄罗斯站，可以适用绝大多数影视站点。但是为什么会在这里列出，因为俄罗斯在线站有个很显著的特点，就是在自己的播放的整体页面，一般都会有一张海报与之相对，这就大大提高了图搜俄站的概率，而且，通过经验可以得知，一但图搜海报出现了俄站字符，你就可以通过（俄文）（英文名）（俄文）这种排列方式来却是此站是否是俄在线站。还有如果图搜时候出现了播放视频并伴有俄字符，那么其基本就可以确定是俄在线了。不过这里有一点十分要注意：俄在线有一种欺骗站，这种网站并不可以播放，但是图搜的时候依然会出现播放界面，区别的方法就是：真正的俄在线站都是以影片某个画面作为截图视频，如果你看到的播放界面是一个“开场”，那么你就不必浪费时间去点击摸索了，避免了这个可以提高搜索效率。</p><p>（四）btpt及网盘或ed2k论坛，俄站的btpt及论坛的数量也数不胜数，论坛也大多数以种子下载为主，不过部分会出现网盘以及ed2k下载方式。bt比较著名的是rutracker，我想大家应该都知道，一个综合站，其实这种类型的综合站还有很多，比如rutor，凤凰fenixclub，tomi等等，不再一一列举。其在google的搜索方式也可以（俄文名）（torrent或者торрент）pt也都能理解，与bt类似，不过属于私密系，但由于俄bt的强大常常将pt掩没。俄在线的影视基本都可在btpt找到，而且格式更加多种，内容更加丰富。俄网盘或ed2k论坛在内容上与bt类似，只是下载方式不同，不过这里有一点要提，就是俄罗斯的童影控与艺术控很多，拥有众多的童影论坛，如endigo，nnm-club等，世界上的童影大神大多集中在俄罗斯。</p><p>（五）网盘博客，这个可以好好说一下，俄站的网盘博客了大多以童影，艺术，QS，恐怖为主题。例如最为著名的wip（本人就在为wip工作），其他著名的包括asiamorte，medik，tbt等，且下载网盘不一，这里说一个俄本土网盘rusfolder，速度极快，但是下载过程相对复杂，在raremovie论坛里我曾写过教程，这里就不再赘述。</p><blockquote><p>补充：俄搜索引擎也有很多，这个大家可以自己寻找，这里只为大家介绍一个常用的potorentam或者yandex.ru/video/，一般就相当于我们的百度视频。</p></blockquote><p>好了，关于俄罗斯的搜索介绍暂时介绍到这里，其实这里说的俄罗斯，并不是特指俄罗斯，而是泛指所有使用俄语的国家，如格鲁吉亚，内容上有很多不足，希望大家多多提出，以后会慢慢弥补。内容为原创手打，转载请注名出处。</p><hr><h2 id="转载来源"><a href="#转载来源" class="headerlink" title="转载来源"></a>转载来源</h2><p><a href="http://blog.sina.com.cn/s/blog_ce9fdf200102wcji.html" target="_blank" rel="noopener">资源搜索技术一之俄罗斯篇-丶稀有电影的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ServerSpeeder最全破解教程</title>
      <link href="/2016/05/21/13/"/>
      <url>/2016/05/21/13/</url>
      
        <content type="html"><![CDATA[<h2 id="下载手动安装包"><a href="#下载手动安装包" class="headerlink" title="下载手动安装包"></a>下载手动安装包</h2><blockquote><p><a href="http://pan.baidu.com/s/1hqMrL1U" target="_blank" rel="noopener">http://pan.baidu.com/s/1hqMrL1U</a></p></blockquote><p>选择对应的内核包</p><h2 id="破解序列号"><a href="#破解序列号" class="headerlink" title="破解序列号"></a>破解序列号</h2><p>需要用到Python<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line">import fcntl, socket, struct</span><br><span class="line"></span><br><span class="line">def getHwAddr(ifname):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    info = fcntl.ioctl(s.fileno(), 0x8927,  struct.pack(<span class="string">'256s'</span>, ifname[:15]))</span><br><span class="line">    <span class="built_in">return</span> <span class="string">':'</span>.join([<span class="string">'%02x'</span> % ord(char) <span class="keyword">for</span> char <span class="keyword">in</span> info[18:24]])</span><br><span class="line"><span class="built_in">print</span> getHwAddr(<span class="string">'eth0'</span>)</span><br><span class="line">MAC=getHwAddr(<span class="string">'eth0'</span>).replace(<span class="string">':'</span>,<span class="string">''</span>)</span><br><span class="line">KEY = <span class="string">'%02X%02X%02X%02X%02X%02X%02X%02X'</span>%((int(MAC[0:2],16)+int(MAC[4:6],16)+10)%256,(int(MAC[2:4],16)+int(MAC[6:8],16)+13)%256,(int(MAC[4:6],16)+int(MAC[8:10],16)+16)%256,(int(MAC[6:8],16)+int(MAC[10:12],16)+19)%256,(int(MAC[8:10],16)+int(MAC[0:2],16)+16)%256,(int(MAC[10:12],16)+int(MAC[2:4],16)+19)%256,(int(MAC[0:2],16)+int(MAC[4:6],16)+22)%256,(int(MAC[2:4],16)+int(MAC[6:8],16)+26)%256)</span><br><span class="line"><span class="built_in">print</span> KEY</span><br><span class="line">def gen_lrc(s):</span><br><span class="line">    lic_6479 = <span class="string">''</span></span><br><span class="line">    rd = [162,15,239,202,57,14,45,164,147,232,120,90,117,15,239,232]</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        lic_6479 += <span class="string">'%02X'</span> %((ord(s[idx]) + rd[idx]) % 256) + <span class="string">' '</span></span><br><span class="line">    <span class="built_in">return</span> lic_6479</span><br><span class="line"><span class="built_in">print</span> gen_lrc(KEY);</span><br></pre></td></tr></table></figure></p><h2 id="修改lic文件"><a href="#修改lic文件" class="headerlink" title="修改lic文件"></a>修改lic文件</h2><p>需要用到的软件：winhex</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> ServerSpeeder </tag>
            
            <tag> 锐速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过配置多个ssh key将博客同时推送至github/coding</title>
      <link href="/2016/05/20/12/"/>
      <url>/2016/05/20/12/</url>
      
        <content type="html"><![CDATA[<h2 id="生成并添加第一个ssh-key"><a href="#生成并添加第一个ssh-key" class="headerlink" title="生成并添加第一个ssh key"></a>生成并添加第一个ssh key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail@yourcompany.com"</span></span><br></pre></td></tr></table></figure><p>这时可以一路回车，不输入任何字符，将自动生成<code>id_rsa</code>和<code>id_rsa.pub</code>文件。</p><h2 id="生成并添加第二个ssh-key"><a href="#生成并添加第二个ssh-key" class="headerlink" title="生成并添加第二个ssh key"></a>生成并添加第二个ssh key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail@gmail.com"</span></span><br></pre></td></tr></table></figure><p>注意，这时不能一路回车，否则邮箱将覆盖上一次生成的ssh key，给这个文件起一个名字， 比如叫 <code>id_rsa_coding</code>, 所以相应的也会生成一个 <code>id_rsa_coding.pub</code> 文件。<br><a id="more"></a><br>此时查看.ssh目录下的文件，可以发现多了<code>id_rsa_coding</code>和<code>id_rsa_coding.pub</code>两个文件。</p><h2 id="添加私钥"><a href="#添加私钥" class="headerlink" title="添加私钥"></a>添加私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br><span class="line">ssh-add ~/.ssh/id_rsa_coding</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在 ~/.ssh 目录下新建一个config文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch config</span><br></pre></td></tr></table></figure></p><p>并添加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># coding</span></span><br><span class="line">Host git.coding.net</span><br><span class="line">    User xxx@email.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_coding</span><br></pre></td></tr></table></figure></p><h2 id="给github-coding添加SSH公钥"><a href="#给github-coding添加SSH公钥" class="headerlink" title="给github/coding添加SSH公钥"></a>给github/coding添加SSH公钥</h2><p>可以用记事本打开<code>id_rsa.pub</code>和<code>id_rsa_coding.pub</code>，然后将其中的内容分别复制添加到github和coding的用户设置中的公钥里。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>(遇到询问是否信任服务器公钥，输入 yes 即可)</p><p>如果输出<code>Hi BFDZ! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>，说明成功的连上github了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><p>输出<code>Hello BFDZ You&#39;ve connected to Coding.net by SSH successfully!</code>，说明成功连上了coding。</p><h2 id="配置Hexo部署参数"><a href="#配置Hexo部署参数" class="headerlink" title="配置Hexo部署参数"></a>配置Hexo部署参数</h2><p>打开hexo的主配置文件<code>_config.yml</code> ,修改deploy部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">- <span class="built_in">type</span>: git </span><br><span class="line">  repo: git@github.com:BFDZ/bfdz.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">- <span class="built_in">type</span>: git </span><br><span class="line">  repo: git@git.coding.net:BFDZ/bfdz.git</span><br><span class="line">  branch: coding-pages</span><br></pre></td></tr></table></figure><p>同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer。</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://xuyuan923.github.io/2014/11/04/github-gitlab-ssh/" target="_blank" rel="noopener">github/gitlab同时管理多个ssh key</a><br><a href="https://coding.net/help/doc/git/ssh-key.html" target="_blank" rel="noopener">配置SSH公钥</a><br><a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">Hexo文档|部署</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Openvz架构vps下Rsyslogd进程资源占用异常</title>
      <link href="/2016/05/14/11/"/>
      <url>/2016/05/14/11/</url>
      
        <content type="html"><![CDATA[<p>从后台面板查看vps的情况时，看到内存总占用到了50%，但我的博客全是静态文件，应该不会产生这么高的内存占用的。于是登录shell使用<code>top</code>命令查看进程，发现Rsyslogd的内存占用明显高于其他进程，那么问题应该就出在这货身上。<br><a id="more"></a><br>经过google后，发现禁用imklog就可以解决了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i  <span class="string">'s/^\$ModLoad imklog/#\$ModLoad imklog/g'</span> /etc/rsyslog.conf</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Openvz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache/Nginx 配置 301 重定向</title>
      <link href="/2016/05/13/10/"/>
      <url>/2016/05/13/10/</url>
      
        <content type="html"><![CDATA[<h2 id="前话"><a href="#前话" class="headerlink" title="前话"></a>前话</h2><p>相信很多人都有自己的域名吧，不管是作为博客还是其他方便的应用，我们总会希望其他人可以通过 www 或者没有 www 都能访问我们的域名，比如我们访问 <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 和 example.com 都能访问同一个资源，要实现这样的效果有很多的方法，但是其中最为“有效”的方法则是设置 301 重定向 (301 Redirect)。</p><p>但是最好只保留其中的一种，带或者不带 www，因为这样可以更好的做到搜索引擎优化 (SEO)。<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>当然了，这个前提你要有自己的服务器，而且要有完全的控制权限，这点应该不用多做解释吧。</p><p>其次你的服务器上要有安装 Nginx 或者 Apache，因为本篇文章就是要介绍 Apache/Nginx 下的 301 重定向配置，有了这些准备后继续往下。</p><h2 id="DNS-解析设置"><a href="#DNS-解析设置" class="headerlink" title="DNS 解析设置"></a>DNS 解析设置</h2><p>如何让用户打开 <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 和 example.com 都能访问到你的资源呢？当然要先把这两个域名都解析到你服务器的 IP 对吧。</p><p>这么一来你不管访问有没有带 www 的域名都能解析到你的服务器上，接下去。</p><h2 id="Nginx-配置重定向"><a href="#Nginx-配置重定向" class="headerlink" title="Nginx 配置重定向"></a>Nginx 配置重定向</h2><p>为了实现 301 重定向，需要在原有的配置文件里多添加一段代码，比如这是我原来的 Nginx 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server </span><br><span class="line">&#123;</span><br><span class="line">listen 80;</span><br><span class="line">listen [::]:80;</span><br><span class="line"></span><br><span class="line">root /var/www/html;</span><br><span class="line"></span><br><span class="line">server_name www.example.com example.com;</span><br><span class="line">index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include snippets/fastcgi-php.conf;</span><br><span class="line">fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我现在要让所有访问带 www 的都重定向到不带 www 的，则需要改成这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server </span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.example.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://example.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line"></span><br><span class="line">root /var/www/html;</span><br><span class="line"></span><br><span class="line">server_name www.example.com example.com;</span><br><span class="line">index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include snippets/fastcgi-php.conf;</span><br><span class="line">fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要让所有访问不带 www 的都重定向到带 www 也是依葫芦画瓢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server </span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name example.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://www.example.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server </span><br><span class="line">&#123;</span><br><span class="line">listen 80;</span><br><span class="line"></span><br><span class="line">root /var/www/html;</span><br><span class="line"></span><br><span class="line">server_name www.example.com example.com;</span><br><span class="line">index index.html index.htm;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include snippets/fastcgi-php.conf;</span><br><span class="line">fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后不要忘了重新加载一下 Nginx 的配置文件或者重启一下 Nginx 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure></p><p><strong>注意：如果是 https 服务器，则将 80 端口改成 443 即可。</strong></p><h2 id="Apache-配置重定向"><a href="#Apache-配置重定向" class="headerlink" title="Apache 配置重定向"></a>Apache 配置重定向</h2><h3 id="启用-Rewrite-模块"><a href="#启用-Rewrite-模块" class="headerlink" title="启用 Rewrite 模块"></a>启用 Rewrite 模块</h3><p>要使用重定向的功能的话首先得先启动 Apache 的 mod_rewrite 模块，然后重启 Apache 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a2enmod rewrite</span><br><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure><p>启用了 Rewrite 模块后就可以愉快的使用 <code>.htaccess</code> 文件来设置 Rewrite 规则了，使用过 WordPress 之类的 CMS 系统的朋友们是不是很眼熟呢？</p><h3 id="启用-htaccess-文件"><a href="#启用-htaccess-文件" class="headerlink" title="启用 .htaccess 文件"></a>启用 .htaccess 文件</h3><p>打开 Apache 的配置文件，在原有配置文件基础上加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /var/www/html&gt;</span><br><span class="line">Options Indexes FollowSymLinks MultiViews</span><br><span class="line">AllowOverride All</span><br><span class="line">Order allow,deny</span><br><span class="line">allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>其中 <code>/var/www/html</code> 换成你的实际路径，也就是你在配置文件中设置的 <code>DocumentRoot</code>。</p><p>保存并重启 Apache 服务~</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure><h3 id="配置-Rewrite-模块"><a href="#配置-Rewrite-模块" class="headerlink" title="配置 Rewrite 模块"></a>配置 Rewrite 模块</h3><p>切换到文档根目录，创建一个 .htaccess 文件，然后用 Vim 之类的编辑器打开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">touch .htaccess</span><br><span class="line">vim .htaccess</span><br></pre></td></tr></table></figure><p>如果要让所有访问带 www 的都重定向到不带 www 的，则往 <code>.htaccess</code> 文件中写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^www\.(.*)$ [NC]</span><br><span class="line">RewriteRule ^(.*)$ http://%1/<span class="variable">$1</span> [R=301,L]</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">如果要让所有访问不带 www 的都重定向到带 www 的，则改成</span><br><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; !^www\. [NC]</span><br><span class="line">RewriteRule ^(.*)$ http://www.%&#123;HTTP_HOST&#125;/<span class="variable">$1</span> [R=301,L]</span><br></pre></td></tr></table></figure><p>最后重启一下 Apache 服务就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure><p><strong>同样的，如果你使用的是 https 服务器，则只需要将上述的 Rewrite 规则中的 http 改成 https 即可。</strong></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用 curl 命令测试一下重定向是否生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I http://example.com</span><br></pre></td></tr></table></figure><p>假设我们是把所有不带 www 的都重定向到带 www 了，则返回的结果应该类似于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 301 Moved Permanently</span><br><span class="line">Server: nginx/1.6.2</span><br><span class="line">Date: Tue, 16 Jun 2015 09:36:09 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 193</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: http://www.example.com/</span><br></pre></td></tr></table></figure><p>重点的是 <strong>301 Moved Permanently</strong> 以及下方的 <strong>Location</strong>。</p><hr><p>文章作者:梦路<br>原始链接:<a href="https://blog.ikke.moe/posts/apache-nginx-301-redirect/" target="_blank" rel="noopener">https://blog.ikke.moe/posts/apache-nginx-301-redirect/</a><br>许可协议: “<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">署名-非商用-相同方式共享 4.0</a>“ 转载请保留原文链接及作者。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache </tag>
            
            <tag> nginx </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vps使用iptables防火墙封常用邮件端口</title>
      <link href="/2016/05/13/9/"/>
      <url>/2016/05/13/9/</url>
      
        <content type="html"><![CDATA[<p>添加规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m multiport --dport 25,110,465:587,993:995 -j DROP</span><br><span class="line">iptables -A INPUT -p udp -m multiport --dport 25,110,465:587,993:995 -j DROP</span><br><span class="line">iptables -A OUTPUT -p tcp -m multiport --dport 25,110,465:587,993:995 -j DROP</span><br><span class="line">iptables -A OUTPUT -p udp -m multiport --dport 25,110,465:587,993:995 -j DROP</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>保存规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables save</span><br></pre></td></tr></table></figure></p><p>再使用命令 <code>netstat –lnp</code> 检查一下开启的端口里面还有没有邮件端口。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> linux </tag>
            
            <tag> iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装shadowsocks-go版本</title>
      <link href="/2016/05/05/8/"/>
      <url>/2016/05/05/8/</url>
      
        <content type="html"><![CDATA[<p>服务端环境：debian 7 x86</p><p>1，下载go环境。点<a href="https://golang.org/dl/" target="_blank" rel="noopener">这里</a>下载go环境（需翻墙），注意下载适合vps系统的版本，Linux 32位须下载go1.4.2.linux-386.tar.gz，Linux 64位须下载go1.4.2.linux-amd64.tar.gz，上传到vps任一目录下，或者直接wget下载。<br><a id="more"></a></p><p>2，配置go环境。以我的debian 7 x86系统为例，cd到go1.4.2.linux-386.tar.gz所在目录，运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.4.2.linux-386.tar.gz</span><br></pre></td></tr></table></figure></p><p>修改/etc/profile文件，最后加入一行<code>export PATH=$PATH:/usr/local/go/bin</code>，保存并退出。</p><p>运行命令<code>source /etc/profile</code>，这样就完成了go环境的配置，运行命令<code>go version</code>可以查看go环境版本信息。</p><p>3，下载shadowsocks-go文件。点<a href="http://dl.chenyufei.info/shadowsocks/" target="_blank" rel="noopener">这里</a>下载编译好的文件，同样要注意下载适合vps的版本，博主下载的是shadowsocks-server-linux32-1.1.4.gz，上传或者wget下载到vps的/root/ss目录下。</p><p>4，配置shadowsocks-go。<br>运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ss</span><br><span class="line"> </span><br><span class="line">gzip -d shadowsocks-server-linux32-1.1.4.gz　　　　　<span class="comment">#解压文件到同一目录下</span></span><br><span class="line"> </span><br><span class="line">chmod 777 shadowsocks-server-linux32-1.1.4          <span class="comment">#设置文件权限为777</span></span><br><span class="line"> </span><br><span class="line">mv shadowsocks-server-linux32-1.1.4  shadowsocks-server        <span class="comment">#修改文件名</span></span><br></pre></td></tr></table></figure></p><p>在该目录下新建文件config.json。内容如下（go版本默认支持chacha20加密方式，）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"server"</span>:<span class="string">"yourip"</span>,</span><br><span class="line"><span class="string">"server_port"</span>:443,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"1111"</span>,</span><br><span class="line"><span class="string">"timeout"</span>:600,</span><br><span class="line"><span class="string">"method"</span>:<span class="string">"chacha20"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多用户配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"server"</span>: <span class="string">"yourip"</span>,</span><br><span class="line"><span class="string">"port_password"</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"8381"</span>: <span class="string">"foobar1"</span>,</span><br><span class="line"><span class="string">"8382"</span>: <span class="string">"foobar2"</span>,</span><br><span class="line"><span class="string">"8383"</span>: <span class="string">"foobar3"</span>,</span><br><span class="line"><span class="string">"8384"</span>: <span class="string">"foobar4"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"timeout"</span>: 300,</span><br><span class="line"><span class="string">"method"</span>: <span class="string">"chacha20"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>5，设置开机启动。修改/etc/rc.local文件，最后加入两行，并去掉<code>exit 0</code>（如果有的话）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ss</span><br><span class="line">./shadowsocks-server &gt; <span class="built_in">log</span> &amp;</span><br></pre></td></tr></table></figure></p><p>6，重启vps，完成。</p><p>ps：目前go版本的shadowsocks并不支持udp转发。</p><hr><p>转载自<a href="https://php-rmcr7.rhcloud.com/ss-go/" target="_blank" rel="noopener">https://php-rmcr7.rhcloud.com/ss-go/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCDecNV / DGIndexNV 2051/2050 破解版</title>
      <link href="/2016/04/22/7/"/>
      <url>/2016/04/22/7/</url>
      
        <content type="html"><![CDATA[<p>Build 2051</p><ul><li><p>Added support for HEVC video. Refer to the Readme.txt file for limitations<br>on HEVC support.</p></li><li><p>Changed the ‘Display HD Full-Sized’ option to a ‘Zoom’ option. The new<br>option allows for scaling the video at full-size, half-size, or quarter size.</p></li><li><p>Removed the use_D3D parameter from DGSource(). It is now read automatically<br>from the DGI file.</p><a id="more"></a></li></ul><hr><p>Build 2050</p><ul><li><p>Added cards to the GPU information lookup table.</p></li><li><p>Changed the licensing scheme so that it is now stable across Windows updates.<br>The only thing that will change the machine ID now is a change of motherboard.</p></li><li><p>For MKV files the FPS value is now taken from the container and not the elementary stream.</p></li><li><p>The CL interface with -h now no longer generates a pop-up for a bad license but<br>prints a console error message instead. Also, the CLI now returns values as follows:</p></li></ul><p>0: everything OK<br>1: input file cannot be opened<br>2: bad license</p><hr><p>DGIndexNV 2051<br><a href="https://yunpan.cn/cPK58BGLBwNnT" target="_blank" rel="noopener">https://yunpan.cn/cPK58BGLBwNnT</a> （提取码：3b44）<br>链接：<a href="http://pan.baidu.com/s/1bZS5g6" target="_blank" rel="noopener">http://pan.baidu.com/s/1bZS5g6</a> 密码：9v7g</p><p>DGIndexNV 2050<br>链接：<a href="http://pan.baidu.com/s/1hr3SkgG" target="_blank" rel="noopener">http://pan.baidu.com/s/1hr3SkgG</a> 密码：kf8o</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://dgtoolz.blogspot.com/" target="_blank" rel="noopener">https://dgtoolz.blogspot.com/</a> </p>]]></content>
      
      
      <categories>
          
          <category> 视频压制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频压制 </tag>
            
            <tag> megui </tag>
            
            <tag> DGIndexNV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian/CentOS下编译安装shadowsocks-libev</title>
      <link href="/2016/04/20/6/"/>
      <url>/2016/04/20/6/</url>
      
        <content type="html"><![CDATA[<h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br></pre></td></tr></table></figure><p>下载源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-libev.git</span><br></pre></td></tr></table></figure></p><p>开始编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> shadowsocks-libev</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure --prefix=/usr &amp;&amp; make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>准备必须的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/shadowsocks-libev</span><br><span class="line">cp ./debian/shadowsocks-libev.init /etc/init.d/shadowsocks-libev</span><br><span class="line">cp ./debian/shadowsocks-libev.default /etc/default/shadowsocks-libev</span><br><span class="line">cp ./debian/shadowsocks-libev.service /lib/systemd/system/</span><br><span class="line">cp ./debian/config.json /etc/shadowsocks-libev/config.json</span><br><span class="line">chmod +x /etc/init.d/shadowsocks-libev</span><br></pre></td></tr></table></figure></p><p>编辑配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks-libev/config.json</span><br></pre></td></tr></table></figure></p><p>启动服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service shadowsocks-libev start</span><br></pre></td></tr></table></figure></p><h2 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br></pre></td></tr></table></figure><p>编译环境准备&amp;安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc automake autoconf libtool make build-essential autoconf libtool</span><br><span class="line">yum install -y curl curl-devel unzip zlib-devel openssl-devel perl perl-devel cpio expat-devel gettext-devel</span><br></pre></td></tr></table></figure></p><p>下载源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/shadowsocks/shadowsocks-libev/archive/master.zip</span><br><span class="line">unzip master.zip</span><br></pre></td></tr></table></figure></p><p>开始编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> shadowsocks-libev*</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure --prefix=/usr &amp;&amp; make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>准备必须的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/shadowsocks-libev</span><br><span class="line">cp ./rpm/SOURCES/etc/init.d/shadowsocks-libev /etc/init.d/shadowsocks-libev</span><br><span class="line">cp ./debian/config.json /etc/shadowsocks-libev/config.json</span><br><span class="line">chmod +x /etc/init.d/shadowsocks-libev</span><br></pre></td></tr></table></figure></p><p>编辑配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks-libev/config.json</span><br></pre></td></tr></table></figure></p><p>启动服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service shadowsocks-libev start</span><br></pre></td></tr></table></figure></p><hr><p>备注：配置文件中”server”:”127.0.0.1”可改成服务器ip。”method”默认是<code>aes-256-cfb</code>,改成<code>rc4-md5</code>对连接速度有略微提升。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shadowsocks </tag>
            
            <tag> Centos </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows7系统更改时间同步服务器</title>
      <link href="/2016/04/18/5/"/>
      <url>/2016/04/18/5/</url>
      
        <content type="html"><![CDATA[<p>最近发现电脑的时间慢了几分钟，并且与默认的windows.com、nist.gov网络时间同步服务器同步时连接总是超时。于是搜索了一下解决方法，找到一个很好的网络时间同步服务器地址，就是pool.ntp.org。按照地理位置我选择了asia.pool.ntp.org。之前选cn.pool.ntp.org，网页上有提示服务器过少，建议选亚洲区。按照目前网页上显示的数量，国内有4台服务器，而亚洲总共有169台服务器，所以为了减少出问题的几率，还是用asia.pool.ntp.org比较好。</p><p>网上有很多方法是通过修改注册表更改默认网络时间同步服务器，实际上有更简单的方法。步骤如下：<br><a id="more"></a><br>1、点击桌面右下角的时间。</p><p>2、系统将显示当前时间的对话框，点击下面的“更改日期和时间设置…”。</p><p>3、弹出“日期和时间”对话框，点击“Internet时间”选项卡。</p><p>4、在“Internet时间”选项卡中选择“更改设置”。</p><p>5、弹出“Internet时间设置”对话框，然后在“服务器”对话框中输入 asia.pool.ntp.org”，点击确定，也可以点击“立即更新”按钮立即更新系统时间，如下图所示。</p><p><img src="https://ww4.sinaimg.cn/large/92253953gw1f30zjg69o6j20cb085jsd.jpg" alt=""></p><p>6、在日期和时间对话框点击“确定”即可。</p><p><img src="https://ww3.sinaimg.cn/large/92253953gw1f30zjtqoubj20cv0eogn0.jpg" alt=""></p><hr><p><strong>参考资料</strong></p><p><a href="http://www.pool.ntp.org/" target="_blank" rel="noopener">NTP POOL PROJECT</a><br><a href="http://ntp.neu.edu.cn/archives/100" target="_blank" rel="noopener">Windows 7用户同步时间设置</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 网络时间同步 </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记本安装CentOS7过程以及双系统引导方法</title>
      <link href="/2016/04/15/4/"/>
      <url>/2016/04/15/4/</url>
      
        <content type="html"><![CDATA[<p>笔记本上现有的系统是windows7 64位，目的是通过U盘安装CentOS7，形成windows+linux双系统。</p><h2 id="准备部分"><a href="#准备部分" class="headerlink" title="准备部分"></a>准备部分</h2><ol><li>CentOS7镜像 （官方网站<a href="https://www.centos.org/）" target="_blank" rel="noopener">https://www.centos.org/）</a></li><li>最新版UltraISO （用9.3.6版及以前的会出问题）</li><li>容量至少8G的U盘（没有U盘可以用手机的内存卡+读卡器代替）</li><li>至少20G的磁盘空间 </li></ol><a id="more"></a><h2 id="压缩磁盘空间"><a href="#压缩磁盘空间" class="headerlink" title="压缩磁盘空间"></a>压缩磁盘空间</h2><p>首先就是要为CentOS提供系统空间，如果你是想把整块硬盘格式化或者有块空白硬盘给CentOS系统，就不需要这么做。<strong>需要注意的是不能在硬盘的主分区上建压缩卷，要在逻辑分区上给CentOS划空间，否则在安装CentOS时，磁盘只能有两个分区，无法创建更多的分区。</strong></p><ol><li>桌面上选中计算机右键–&gt;存储–&gt;磁盘管理</li><li>选中一个磁盘，右键–&gt;压缩卷</li><li>输入压缩空间量一栏就是你想要空出多少空间给CentOS使用，自己输入想要的量然后点击压缩。</li></ol><h2 id="刻录U盘"><a href="#刻录U盘" class="headerlink" title="刻录U盘"></a>刻录U盘</h2><p>刻录之前记得将U盘或内存卡中的重要资料移出来，因为刻录时会将U盘/内存卡格式化。按图中操作：</p><p>先从本地目录载入镜像，然后点击写入镜像<br><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xhiyyhiqj20lt0g0afu.jpg" alt=""></p><p>硬盘驱动器选U盘的，确认无误后点击写入<br><img src="https://ww4.sinaimg.cn/large/92253953gw1f2xhn5i3h2j20fj0ebq4g.jpg" alt=""></p><p>时间会比较长，等写入完成后，重启系统。</p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>重启后，网上有很多教程说是开机时按F2进BIOS里设置U盘为第一引导项，但我的笔记本在BIOS里是找不到U盘引导项，而是按F12直接出现一个选择引导的界面，然后选U盘就能直接进入安装程序。所以不同的机器是不一样的，具体要看你自己的开机界面提示。</p><p>载入U盘后会出现下面的界面，先用方向键选择第一项</p><p><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xirgytwaj20hp0bht91.jpg" alt=""></p><p>然后按TAB键，进入这个界面</p><p><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xiu7igo2j20iv0armxp.jpg" alt=""></p><p>将界面底部的命令修改为： </p><blockquote><p>vmlinuz initrd=initrd.img linux dd quiet</p></blockquote><p>再回车，进入下图界面，这一步是为了更准确的查看U盘的盘符，就是图中倒数第二行的<code>sr0</code> </p><p><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xj2dia59j20hf09wta0.jpg" alt=""></p><p>我的这个图是用虚拟机演示截取的，所以盘符是<code>sr0</code>，一般U盘会是<code>sdc4</code>这样的，实际情况以你自己看到的为准。放张网上的图</p><p><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xj8f9l92j20ku06bdfy.jpg" alt=""></p><p>然后按<code>C</code>再回车，等命令行刷完，出现光标，输入reboot重启电脑，或者也可以长按电源键强制关机，再手动启动。再重复之前的步骤，进入CentOS安装界面，按TAB键，将命令行改为</p><blockquote><p>vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdc4 quiet</p></blockquote><p>命令中的<code>sdc4</code>就是你看到的U盘盘符，可按实际情况更改。然后回车，如果你没有输错的话就应该会来到选择语言的界面了，再接着就是图形化设置界面了。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>选择语言<br><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xjt4fgcvj20m80godhm.jpg" alt=""></p><p>然后配置界面，日期和时间、语言支持、SECURITY、安装源、KDUMP、网络和主机名这些设置项默认就行。<br><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xjs68sbyj20m80gotag.jpg" alt=""></p><p>需要更改的项：</p><p>1、键盘</p><p>布局切换选项，选择ctrl+shift，这样符合一般在windows下的操作习惯。<br><img src="https://ww3.sinaimg.cn/large/92253953gw1f2xk2cjua9j20m80gowgj.jpg" alt=""></p><p>2、软件选择</p><p>默认是最小安装，建议新手选择GNOME 桌面，否则装完后没有图形界面。我这里是选带GUI的服务器，同时环境选项里勾选了兼容性程序库和开放工具，这是因为学习需要，大家可以自行选择需要的附带软件和环境。<br><img src="https://ww2.sinaimg.cn/large/92253953gw1f2xk5ylho7j20m80go0wo.jpg" alt=""></p><p>3、安装位置</p><p>也就是非常重要的磁盘分区。</p><p>勾选磁盘，再选我要配置分区<br><img src="https://ww2.sinaimg.cn/large/92253953gw1f2xkbozf13j20m80godhl.jpg" alt=""></p><p>进入手动分区，<strong>这里注意要先选择之前压缩出来的空间，可以通过容量辨别。如果选错了，就会把windows里其他区格式化掉</strong>(图中是虚拟机的磁盘，所以没显示出其他分区，实际安装时会看到几个ntfs格式的分区)。点击加号添加挂载点和设置容量，图中有三个挂载点(即CentOS中的分区) <code>/boot</code> <code>/</code> <code>swap</code><br><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xkdue42pj20m80goq4s.jpg" alt=""></p><p>分好区后点击完成，出现确认更改的界面，这个时候自己再检查一遍，然后点击接受更改<br><img src="https://ww1.sinaimg.cn/large/92253953gw1f2xke54mqqj20m80goacd.jpg" alt=""></p><p>完成所以的设置后，就能开始安装了</p><p><img src="https://ww3.sinaimg.cn/large/92253953gw1f2xkw92qjoj20m80gogoa.jpg" alt=""></p><p>安装的时候，自己设置好ROOT密码，还有创建一个用户，建议一般在使用时是用自己创建的用户而不是ROOT用户，同时我们也可以给自己创建的用户管理员权限。</p><p>创建时勾选将此用户作为管理员<br><img src="https://ww3.sinaimg.cn/large/92253953gw1f2xkyn5qkzj20m80goabe.jpg" alt=""></p><h2 id="第一次开机"><a href="#第一次开机" class="headerlink" title="第一次开机"></a>第一次开机</h2><p>第一次开机会出现一个选择，选完才能进入桌面</p><p><img src="https://ww4.sinaimg.cn/large/92253953gw1f2xlcyi6cyj20dw034mxc.jpg" alt=""></p><p>正确的选择步骤是</p><ol><li>输入 1 ，回车</li><li>输入 2 ，回车</li><li>输入 q，回车</li><li>输入 yes ，回车</li></ol><p><img src="https://ww2.sinaimg.cn/large/92253953gw1f2xmbscrc0j20m00hvq5f.jpg" alt=""></p><h2 id="设置双系统引导"><a href="#设置双系统引导" class="headerlink" title="设置双系统引导"></a>设置双系统引导</h2><p>当安装完CentOS7，进入桌面后，这时windows7的引导已经被删除了，所以要想使用双系统，需要设置一下windows7的引导。左上角应用程序–&gt;喜爱–&gt;打开终端</p><p>输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/grub.d/40_custom</span><br></pre></td></tr></table></figure></p><p>按<code>i</code>键进入编辑模式，如下面所示进行更改(添加6~9行的内容)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">exec</span> tail -n +3 <span class="variable">$0</span></span><br><span class="line"><span class="comment"># This file provides an easy way to add custom menu entries.  Simply type the</span></span><br><span class="line"><span class="comment"># menu entries you want to add after this comment.  Be careful not to change</span></span><br><span class="line"><span class="comment"># the 'exec tail' line above.</span></span><br><span class="line">menuentry <span class="string">'Windows7'</span>&#123;</span><br><span class="line"><span class="built_in">set</span> root=(hd0,1)</span><br><span class="line">chainloader +1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加完以后，按<code>Esc</code>键退出编辑模式，再输入<code>:wq</code>（注意w前面有个冒号）</p><p>输入下面的命令保存和重启<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure></p><p>注意，grub2中第一块磁盘的第一个分区是(hd0,1)，而不是(hd0,0)，这一点跟grub有稍许不同，还有不要自作聪明的改sda什么的。</p><p>重启后，应该能看到在CentOS的启动项下面有了一个windows7的启动项。至此，整个安装过程和添加双系统引导就完成啦！</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://www.augsky.com/599.html" target="_blank" rel="noopener">U盘安装CentOS7的最终解决方案</a></li><li><a href="http://www.ruesin.com/system/centos/centos7-grub2-193.html" target="_blank" rel="noopener">Centos7 + Windows7 双系统，通过修改grub2，重新添加 Win7 启动引导项</a></li><li><a href="http://linux.vbird.org/" target="_blank" rel="noopener">鸟哥的Linux私房菜</a></li><li><a href="http://jingyan.baidu.com/article/c35dbcb0f8525f8916fcbca8.html" target="_blank" rel="noopener">CentOS 7桌面模式选择</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周浩作品集</title>
      <link href="/2016/04/10/3/"/>
      <url>/2016/04/10/3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>周浩作品集（第二版）:<a href="https://www.bfdz.ink/2018/07/06/103/">https://www.bfdz.ink/2018/07/06/103/</a></p></blockquote><hr><h2 id="大同（2015）"><a href="#大同（2015）" class="headerlink" title="大同（2015）"></a>大同（2015）</h2><p>◎译　　名　中国市长<br>◎片　　名　大同<br>◎年　　代　2015<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　山西大同方言<br>◎上映日期　2015-01(圣丹斯电影节)<br>◎IMDb评分  6.9/10 from 72 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt4056808/" target="_blank" rel="noopener">http://www.imdb.com/title/tt4056808/</a><br>◎豆瓣评分　8.8/10 from 783 users<a id="more"></a><br>◎豆瓣链接　<a href="http://movie.douban.com/subject/26276498/" target="_blank" rel="noopener">http://movie.douban.com/subject/26276498/</a><br>◎片　　长　86分钟<br>◎导　　演　周浩 Hao Zhou<br>◎主　　演　耿彦波</p><p>◎简　　介</p><p>　　曾经繁华的中国都市大同市，如今屹立在一堆废墟的旁边。这座城市不仅污染严重，还因其陈旧的基础设施和摇摇欲坠的经济前景而濒临瘫痪。但大同市长想要改变这一切，他大胆地宣布了一项试图重塑昔日的辉煌的新计划，要知道这座城市的文明已经有1600年了。<br>　　然而，伴随着这项计划的是非常高的成本。数以千计的房屋被推倒，50万居民（占大同市总人口的百分之三十）将在他的打理下被重新安置。这位市长成功与否，完全取决于他是否能让愤怒的工人群体以及越来越忐忑的统治精英冷静下来。纪录片《中国市长》惊人地捕捉到了一个男人，甚至是一个国家疯狂跳跃着进入一个越来越动荡的未来的过程。</p><blockquote><p>BT种子 <a href="https://rarbg.to/download.php?id=ht9sij6&amp;f=Storyville%202015%20The%20Chinese%20Mayor%20576p%20x264%20HDTV%20%5BMVGroup%20org%5D-%5Brarbg.com%5D.torrent" target="_blank" rel="noopener">The.Chinese.Mayor.576p.HDTV.x264.AAC.MVGroup.org.mkv </a> 800MB</p></blockquote><hr><h2 id="急诊室-2013"><a href="#急诊室-2013" class="headerlink" title="急诊室 (2013)"></a>急诊室 (2013)</h2><p>◎译　　名　急诊/120的故事<br>◎片　　名　急诊室<br>◎年　　代　2013<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话/粤语<br>◎上映日期　2013<br>◎豆瓣评分　7.7/10 from 253 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/21340768/" target="_blank" rel="noopener">http://movie.douban.com/subject/21340768/</a><br>◎片　　长　99分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　这是导演有关中国社会公共空间系列纪录片的继续……<br>　　在中国南方的最大城市-广州一所医院的急诊室，摄制组在这前后呆十个月的时间。这是导演有关中国社会公共空间系列纪录片的继续……<br>　　在中国南方的最大城市–广州的一所医院的急诊室，摄制组在这前后呆了十个月的时间，他们跟随着日夜在市区内奔走的120急救车，用镜头去遭遇各种各样的急诊故事。<br>　　中国早已经是世界第二大经济体，但政府还是不得不承认自己是一个人口众多的发展中国家。随着城市化和工业化进程的加快，中国社会保障体系的建设远远落后于经济发展速度的矛盾日益呈现。<br>　　在急诊室，表面上离奇、荒诞的故事一一在镜头前“上演”。一方面，我们看到很多不懂得爱惜自己生命的人，另一方面，我们也表现出对一个健全有效的医疗保障体系渴望。<br>　　两千多年前，中国的哲人孟子已经提出，理想的“大同”社会应该是“老吾老以及人之老，幼吾幼以及人之幼”。近年，中国政府大张其鼓倡导的“和谐”社会似乎就是来源于此。社会理想的状况应该是让每个人都能有尊严活着，然后有尊严地死去。<br>　　最后，我们要特别感谢那些允许我们拍摄普通的中国人，成片时我们没法一一再联系到他们，并征求得他们的同意。是他们的故事让我们更加了解我们生存的社会，本片也将承诺不进行任何商业运作。</p><blockquote><p>在线观看 <a href="http://v.youku.com/v_show/id_XNTAxOTAwMjky.html?from=y1.2-2.4.22" target="_blank" rel="noopener">优酷</a></p></blockquote><hr><h2 id="棉花（2013）"><a href="#棉花（2013）" class="headerlink" title="棉花（2013）"></a>棉花（2013）</h2><p>◎片　　名　棉花<br>◎年　　代　2013<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎豆瓣评分　7.5/10 from 279 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/4195650/" target="_blank" rel="noopener">http://movie.douban.com/subject/4195650/</a><br>◎片　　长　93分钟<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　中国的一粒棉花籽最后如何成为美国零售店里的有一条牛仔裤？在这个过程里究竟有多少耐人寻味的故事？本片将跟随那些被紧紧捆绑在绵延5000公里长的棉纺产业链上的人们，以棉花为线索，讲述他们的故事、描述中国人完成“中国制造”的整个接力过程。<br>　　《棉花》前所未有地揭示了当代中国农民、企业工人、纺织品商人……也就是工贸链条上形形色色人群之间不同生活的内在联系。他们虽然生活在不同的地方，做着不同的工作，但都被紧紧捆绑在棉花的产业链上：这些棉花和被制成的衣服，将生活状态截然不同的人们联结到一起，本片通过深入直接的采访记录他们的日常生活，思索不同人们共同面对的生活命题, 展示中国经济各环节的真正面貌。</p><p>◎获奖情况</p><p>　　第51届台北金马影展 (2014)<br>　　金马奖 最佳纪录片</p><p>　　第19届釜山国际电影节 (2014)<br>　　最佳纪录片奖(提名)</p><blockquote><p>百度云下载 链接：<a href="http://pan.baidu.com/s/1gdD4iLd" target="_blank" rel="noopener">http://pan.baidu.com/s/1gdD4iLd</a> 密码：7tae</p></blockquote><hr><h2 id="差馆（2010）"><a href="#差馆（2010）" class="headerlink" title="差馆（2010）"></a>差馆（2010）</h2><p>◎片　　名　差馆<br>◎年　　代　2010<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎豆瓣评分　8.1/10 from 686 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/5343752/" target="_blank" rel="noopener">http://movie.douban.com/subject/5343752/</a><br>◎片　　长　67<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　广州火车站站前派出所，一个万象生的地方，在这里你能看到社会的各个折射面。</p><blockquote><p>在线观看 <a href="http://v.youku.com/v_show/id_XNTA4Mzc2MTU2.html" target="_blank" rel="noopener">优酷</a></p></blockquote><hr><h2 id="书记（2009）"><a href="#书记（2009）" class="headerlink" title="书记（2009）"></a>书记（2009）</h2><p>◎片　　名　书记<br>◎年　　代　2009<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　普通话/国语<br>◎上映日期　2009-03-28<br>◎IMDb评分  7.0/10 from 5 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt1859619/" target="_blank" rel="noopener">http://www.imdb.com/title/tt1859619/</a><br>◎豆瓣评分　8.5/10 from 1,042 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/3629230/" target="_blank" rel="noopener">http://movie.douban.com/subject/3629230/</a><br>◎片　　长　102分钟<br>◎导　　演　周浩 Hao Zhou<br>◎主　　演　郭永昌</p><p>◎简　　介</p><p>　　中国被划分为34个省级行政区域，它们是又由大约1500多个县组成。<br>　　近年来，中国内陆的官员，大都面临着两大问题：一是怎么吸引投资，促进地方经济的发展；二是要想尽一切办法去化解因社会发展而滋生出的各种社会矛盾。<br>　　本片讲述了一位即将离任的县委书记，在离任前三个月内发生的故事。</p><blockquote><p>百度云下载 链接：<a href="http://pan.baidu.com/s/1c0yhxFM" target="_blank" rel="noopener">http://pan.baidu.com/s/1c0yhxFM</a> 密码：y7ic</p></blockquote><hr><h2 id="龙哥（2008）"><a href="#龙哥（2008）" class="headerlink" title="龙哥（2008）"></a>龙哥（2008）</h2><p>◎片　　名　龙哥<br>◎年　　代　2008<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　普通话/国语<br>◎IMDb评分  7.3/10 from 9 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt1677711/" target="_blank" rel="noopener">http://www.imdb.com/title/tt1677711/</a><br>◎豆瓣评分　8.3/10 from 607 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/3724118/" target="_blank" rel="noopener">http://movie.douban.com/subject/3724118/</a><br>◎片　　长　104分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　导演认识了两位“朋友”。他与他们之间的交往构成了这部片子。开始，他并没有一个明确的计划要制作一部纪录片，但随着时间的推移，他开始有目的和他们交“朋友”。“朋友”们奇迹般地允许导演进入他们的生活，他们吸毒也贩毒的生活。<br>　　纪录片的制作者和被拍者之间到底应该是一种什么样的关系，这部影片给出了它的解释。</p><blockquote><p>百度云下载 链接：<a href="http://pan.baidu.com/s/1qW5Q1dy" target="_blank" rel="noopener">http://pan.baidu.com/s/1qW5Q1dy</a> 密码：1p15</p></blockquote><hr><h2 id="高三（2005）"><a href="#高三（2005）" class="headerlink" title="高三（2005）"></a>高三（2005）</h2><p>◎片　　名　高三<br>◎年　　代　2005<br>◎国　　家　中国大陆<br>◎类　　别　纪录片<br>◎语　　言　汉语普通话<br>◎上映日期　2005-11<br>◎IMDb评分  6.8/10 from 5 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt4276994/" target="_blank" rel="noopener">http://www.imdb.com/title/tt4276994/</a><br>◎豆瓣评分　8.4/10 from 23,618 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/1761854/" target="_blank" rel="noopener">http://movie.douban.com/subject/1761854/</a><br>◎片　　长　95分钟/138分钟(完整版)<br>◎导　　演　周浩 Hao Zhou</p><p>◎简　　介</p><p>　　本片纪录了中国福建省一所普通中学一个高三毕业班的真实生活。高三的生活日复一日，简单而又沉重，痛苦却也快乐。<br>　　善良严厉的班主任，紧张刻苦的尖子生，逃避生活的“差生”，执着爱情的“早恋生”，学生的父母，每个亲历高三的人都有各自的感悟和超越高三的期望。影片的纪录真实、直白，透过高三生活的纪录，让人感到的不仅仅是为理想执着拼搏的浪漫，更有一种如鲠在喉的悲哀。</p><blockquote><p>鲁豫有约完整版 链接：<a href="http://pan.baidu.com/s/1sjQhinN" target="_blank" rel="noopener">http://pan.baidu.com/s/1sjQhinN</a> 密码：hsyr<br>央视剪辑版 链接：<a href="http://pan.baidu.com/s/1sjxGRaH" target="_blank" rel="noopener">http://pan.baidu.com/s/1sjxGRaH</a> 密码：aqqw</p></blockquote><hr><h2 id="厚街（2002）"><a href="#厚街（2002）" class="headerlink" title="厚街（2002）"></a>厚街（2002）</h2><p>◎片　　名　厚街<br>◎年　　代　2002<br>◎国　　家　中国<br>◎类　　别　纪录片<br>◎豆瓣评分　7.7/10 from 220 users<br>◎豆瓣链接　<a href="http://movie.douban.com/subject/2136171/" target="_blank" rel="noopener">http://movie.douban.com/subject/2136171/</a><br>◎片　　长　91分钟<br>◎导　　演　周浩</p><p>◎简　　介</p><p>　　厚街又名后街，是珠江口的一个小镇，距离省会广州 45公里，香港80公里。20世纪80年代初至今，来自台湾、香港的资本和中国内地的大量廉价劳动力使它从农业小镇迅速发展为一个劳动密集型的工业城镇。工厂里的工人是进城打工的农民，他们从中国内地最贫困地区来到广东的厚街镇。工厂附近的出租屋是农民们进入城市的第一个落脚点，也是他们远离故乡后在千里之处建起的另一个家。本片真实记录了这些在厚街打工农民鲜为人知的生活状况，它们成为中国城市化进程中不可忽视的重要组成部分。</p><blockquote><p>阳光卫视版 链接：<a href="http://pan.baidu.com/s/1qWxcVUG" target="_blank" rel="noopener">http://pan.baidu.com/s/1qWxcVUG</a> 密码：jhb7</p></blockquote><p>　　</p>]]></content>
      
      
      <categories>
          
          <category> 纪录片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纪录片 </tag>
            
            <tag> 合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu/Debian VPS安装deluge</title>
      <link href="/2016/04/09/2/"/>
      <url>/2016/04/09/2/</url>
      
        <content type="html"><![CDATA[<p>首先，在购买了VPS或服务器后，获得root帐号及密码，然后通过SSH登录。比如常见的登录工具putty，输入ip和端口号（默认是22）就能进入shell，之后使用命令进行安装操作。</p><p>以下是输入的命令和步骤：<br><a id="more"></a></p><h2 id="升级系统"><a href="#升级系统" class="headerlink" title="升级系统"></a>升级系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install python-software-properties</span><br><span class="line">apt-get install software-properties-common</span><br></pre></td></tr></table></figure><h2 id="安装deluge"><a href="#安装deluge" class="headerlink" title="安装deluge"></a>安装deluge</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:deluge-team/ppa</span><br><span class="line">apt-get update &amp;&amp; apt-get install deluged deluge-web</span><br></pre></td></tr></table></figure><h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line">vi rc.local</span><br></pre></td></tr></table></figure><p>将“deluge-web”加入进去（没有引号,在exit 0前加入）</p><h2 id="启动deluge"><a href="#启动deluge" class="headerlink" title="启动deluge"></a>启动deluge</h2><pre><code class="bash">delugeddeluge-web --fork</code></pre><p>或者重启，之后访问你的机器吧 <code>YourIP:8112</code> 打开网页后会提醒更改密码，注意及时更换。<br>注意：如果添加正确添加种子后，却怎么也不显示添加了任务，请去设置里设置下载目录，然后再添加任务，就可以正常下载了。</p><p>ps.目前有少数PT站封禁了deluge,所以会出现无法下载的情况，不过大多数站点还是支持的。</p>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PT </tag>
            
            <tag> seedbox </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
