<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BFDZ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.bfdz.ink/"/>
  <updated>2019-12-30T12:38:02.067Z</updated>
  <id>https://www.bfdz.ink/</id>
  
  <author>
    <name>BFDZ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shadowsocks 是如何被检测和封锁的</title>
    <link href="https://www.bfdz.ink/2019/12/30/139/"/>
    <id>https://www.bfdz.ink/2019/12/30/139/</id>
    <published>2019-12-30T12:30:00.000Z</published>
    <updated>2019-12-30T12:38:02.067Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>作者:</strong> Anonymous, Anonymous, Anonymous, David Fifield, Amir Houmansadr<br>日期: 2019年12月29日，星期日<br><a href="https://gfw.report/blog/gfw_shadowsocks" target="_blank" rel="noopener">English Version: How China Detects and Blocks Shadowsocks</a></p></blockquote><p>在中国，<a href="https://shadowsocks.org/en/" target="_blank" rel="noopener"><em>Shadowsocks</em></a> 是最流行的翻墙软件之一。从2019年5月起，大量的中国网民反馈他们的Shadowsocks服务器被封锁了。这篇报告是我们对中国的防火长城（GFW）是如何检测和封锁Shadowsocks及其衍生翻墙软件的初步调查结果。通过网络测量实验，我们发现GFW会<strong>被动的监视网络流量</strong>从而识别出疑似Shadowsocks的网络流量；然后对对应的Shadowsocks服务器进行<strong>主动探测</strong>已验证其怀疑的正确与否。Shadowsocks的封锁程度可能受<strong>人为因素</strong>在政治敏感时期的控制。我们提出一种<strong>规避方法</strong>，即改变网络数据包在Shadowsocks握手阶段的大小。这种方法被证明可以在现阶段有效减少主动探测。我们会继续与开发者合作让Shadowsocks及其衍生工具变得更加难以封锁。<br><a id="more"></a></p><h2 id="主要发现"><a href="#主要发现" class="headerlink" title="主要发现"></a>主要发现</h2><ul><li>防火长城（GFW）已经启用主动探测的手段来识别Shadowsocks服务器。GFW采用被动监测与主动探测相结合的方式：其首先监测网络连接找出疑似Shadowsocks的连接，然后再把自己伪装成一个客户端，尝试对疑似Shadowsocks的服务器进行连接，从而验证自己的猜测。<a href="https://ensa.fi/active-probing/" target="_blank" rel="noopener"><em>我们知道GFW可以对多种翻墙工具进行主动探测</em></a>，现在Shadowsocks也成了其中一员。</li><li>主动探测系统可以发送多种不同类型的探测。其中一些探测是基于对之前合法客户端建立的连接的<strong>重放</strong>；而另一些探测则似乎与之前的合法连接并不相关。</li><li>如同之前的研究发现，主动探测来自<strong>大量不同的源IP地址</strong>。这使得基于源IP来过滤GFW探测包不太可行。亦如之前的研究发现，网络层面的侧通道显示这些来自数以千计的IP地址的主动探测并非完全相互独立，而是源于GFW的集中控制。</li><li>很少量的（大于13个）合法连接即足以触发对于Shadowsocks服务器的主动探测。只要合法客户端还在使用服务器，主动探测就会持续下去。GFW通常在合法连接到达服务器后的数秒内发送第一个主动探测。</li><li>一旦GFW主动识别出Shadowsocks服务器，GFW可能会丢弃所有发送自服务器IP地址，或服务器Shadowsocks端口的数据包。但GFW也可能不立即采取封锁措施。Shadowsocks的封锁程度可能受人为因素在政治敏感时期的控制。</li><li>GFW的被动监测模块至少会根据网络数据包的长度来怀疑可疑流量。改变数据包的长度，比如所在服务端安装<a href="https://github.com/NullHypothesis/brdgrd" target="_blank" rel="noopener"><em>brdgrd</em></a>，即可通过干扰被动监测模块对Shadowsocks流量的识别，进而显著减少主动探测的数量。</li></ul><h2 id="我们怎么知道的？"><a href="#我们怎么知道的？" class="headerlink" title="我们怎么知道的？"></a>我们怎么知道的？</h2><p>我们在境外搭建了自己的Shadowsocks服务器并从中国用客户端连接它们，与此同时，在服务器和客户端两端抓包进行分析。所有的实验都是在2019年7月5号到2019年11月11号之间进行的。其中的绝大部分实验都是在<a href="https://github.com/net4people/bbs/issues/16" target="_blank" rel="noopener"><em>2019年9月16日开始的一次大规模封锁</em></a>后进行的。</p><p>在绝大部分实验中，我们使用了<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener"><em>shadowsocks-libev</em></a> <a href="https://github.com/shadowsocks/shadowsocks-libev/tree/v3.3.1" target="_blank" rel="noopener"><em>v3.3.1</em></a>作为客户端和服务端，因为它是一个被积极维护且具有代表性的Shadowsocks实现。我们相信我们所发现的这些弱点在其他Shadowsocks及其衍生工具，如<a href="https://getoutline.org/" target="_blank" rel="noopener"><em>Outline VPN</em></a>，中同样存在。</p><p>若非明确指出，我们未对任何实验中的客户端及服务器的网络功能进行修改，比如更改防火墙的设置。Shadowsocks可以使用不同的加密设置，我们对<a href="https://shadowsocks.org/en/spec/Stream-Ciphers.html" target="_blank" rel="noopener"><em>Stream ciphers</em></a>和<a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html" target="_blank" rel="noopener"><em>AEAD ciphers</em></a>都进行了测试。</p><h2 id="主动探测的一些细节"><a href="#主动探测的一些细节" class="headerlink" title="主动探测的一些细节"></a>主动探测的一些细节</h2><p>Shadowsocks是一项加密通讯协议，其数据包的内容被设计得（应）不包含任何固定特征。其两种加密模式都基于一个主密码，两种模式分别为：<a href="https://shadowsocks.org/en/spec/Stream-Ciphers.html" target="_blank" rel="noopener"><em>Stream</em></a>(不推荐使用) 和 <a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html" target="_blank" rel="noopener"><em>AEAD</em></a> (推荐)。这两种加密模式虽都要求客户端事先知道主密码；但是Stream加密模式的服务器仅能对客户端进行较弱的验证。除非使用额外的技术手段，两种模式都不能防御对之前发送过的验证数据包的重放攻击。</p><h3 id="主动探测的类型及审查者意图"><a href="#主动探测的类型及审查者意图" class="headerlink" title="主动探测的类型及审查者意图"></a>主动探测的类型及审查者意图</h3><p>我们目前观察到五种不同的主动探测荷载。</p><p>基于重放的探测：</p><ol><li>重放某一合法连接中第一个携带数据的数据包中的荷载。</li><li>重放某一合法连接中第一个携带数据的数据包中的荷载，但更改第0字节。</li><li>重放某一合法连接中第一个携带数据的数据包中的荷载，但更改第0–7和第62–63字节。</li></ol><p>看似随机的探测（并非基于我们所观察到的合法连接）：</p><ol><li>荷载长度为7到50字节，占所有看似随机的主动探测的70%。</li><li>荷载长度为221字节，占所有看似随机的主动探测的30%。</li></ol><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image1.png" alt="CDF: Payload Lengths of PSH/ACKs Received by                                      Outline Server"></p><p>我们怀疑GFW的主动探测系统根据服务器对这几种不同类型的主动探测的反馈来判定其是否为Shadowsocks服务器。</p><p>Shadowsocks-libev有一个<a href="https://github.com/shadowsocks/shadowsocks-org/issues/44" target="_blank" rel="noopener"><em>重放过滤器</em></a>; 但是大多数的Shadowsocks实现则没有。重放过滤器可以防御一模一样的重放（类型1），如果载荷的最初几字节被改变了（类型2和3）那么过滤器就无法防御了。过滤器本身也不够阻止主动探测模块去比较服务器对多种探测的反应。</p><h3 id="多少次合法连接就能触发主动探测"><a href="#多少次合法连接就能触发主动探测" class="headerlink" title="多少次合法连接就能触发主动探测"></a>多少次合法连接就能触发主动探测</h3><p>对主动探测的触发似乎需要达到一定的阀值。比如在一项实验中，仅仅13次连接就足以引起GFW的怀疑并触发主动探测。初步结果显示，使用了AEAD的Shadowsocks，可能需要稍微多一点点的连接才会触发主动探测。</p><h3 id="合法连接与主动探测的关系"><a href="#合法连接与主动探测的关系" class="headerlink" title="合法连接与主动探测的关系"></a>合法连接与主动探测的关系</h3><p>我们让客服端每5分钟对Shadowsocks服务器进行16次连接。虽然我们的服务器触发了大量的主动探测，但不知为何，其并未被GFW封锁。</p><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image6.png" alt="Number of SYN Received Across Time"></p><p>上图显示在客户端与服务器有通讯的时间里，服务器会收到主动探测。当合法客户端与服务器的通讯停止下来后，大部分的主动探测也停了。值得指出的是，每小时中主动探测的数量并非固定值，与合法客服端的连接数目比也并非1:1。</p><h3 id="主动探测的延迟性"><a href="#主动探测的延迟性" class="headerlink" title="主动探测的延迟性"></a>主动探测的延迟性</h3><p>GFW的主动探测系统可以将合法连接的载荷保存下来，然后延迟一段时间再发起一个新的连接进行重放。下图显示了合法连接与重放攻击之间的延时关系。由于一个合法的载荷可能被多次重放（某一次实验中观察到的最大值为47次），我们呈现两组关系：桔黄色的线代表基于一个合法载荷的第一次重放；蓝色的线代表所有基于重放的探测（不限定为第一次）。</p><p>结果显示多于90%的重放攻击发生在合法连接发送后的一小时之内。观察到的最短的延迟仅有0.4秒，而最长延迟竟有大约400小时。</p><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image2.png" alt="CDF: Delay of Replay-based Probes"></p><h3 id="主动探测的源"><a href="#主动探测的源" class="headerlink" title="主动探测的源"></a>主动探测的源</h3><p>我们在目前所有实验中总计观察到3,5477次主动探测。它们来自1,0547个不同的IP地址，IP地址均属于中国。</p><p><strong>源自治系统</strong>。主动探测来源占比最多的两个自治系统 AS 4837 (CHINA169-BACKBONE CNCGROUP China169 Backbone,CN) 和 AS 4134 (CHINANET-BACKBONE No.31,Jin-rong Street,CN)，分别为中国联通和中国电信的主干网。这一结果与之前对<a href="https://ensa.fi/active-probing/imc2015.pdf#page=8" target="_blank" rel="noopener"><em>主动探测的研究</em></a>一致。</p><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image3.png" alt="ASN of unique probing IPs throughout all                                      experiments"></p><p><strong>中心化结构。</strong>尽管这些主动探测来源于上千个不同的IP地址，有迹象显示它们的行为均受到一小撮进程的集中管控。下图显示了每个主动探测的SYN包所携带的<a href="https://tools.ietf.org/html/rfc7323#section-3" target="_blank" rel="noopener"><em>TCP timestamp</em></a>值。TCP timestamp是一个32位的计数器，其以固定的速度进行增长。其不是一个绝对值，而是一个取决于TCP实现和系统上次重启时间的相对值。下图显示这些来源于上千个独立的IP地址的主动探测，共享着很少量的TCP timestamp序列。在这次实验中，至少观察到9个不同的物理系统或进程，而绝大多数主动探测似乎来源于同一进程。我们说“至少”和“似乎”是因为如果两个或以上的独立进程的截距非常相近，那么我们可能把它们误认为一个进程。序列的斜率显示timestamp的增长速度为250HZ。</p><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image5.png" alt="TCP TSval of SYN Segments from Probers"></p><h2 id="如何规避针对Shadowsocks的封锁？"><a href="#如何规避针对Shadowsocks的封锁？" class="headerlink" title="如何规避针对Shadowsocks的封锁？"></a>如何规避针对Shadowsocks的封锁？</h2><p>GFW对于Shadowsocks的检测需要两步：</p><ol><li>第一步，被动监测并识别疑似Shadowsocks的连接。</li><li>第二步，主动探测疑似Shadowsocks的服务器。</li></ol><p>因此，为避免封锁，我们可以（1）设法避免被监测模块怀疑到，或者（2）让服务器以不被怀疑的方式回应主动探测。我们将展示如何通过安装改变数据包大小的软件来达到目标（1）。</p><p><a href="https://github.com/NullHypothesis/brdgrd" target="_blank" rel="noopener"><em>Brdgrd</em></a>是一款可以被安装在Shadowsocks服务器上，从而导致Shadowsocks客服端发送较小的数据包的软件。它设计之初衷是用来干扰GFW识别Tor节点，因为它迫使GFW在检测之前首先对TCP流进行复杂的重组。但这里我们利用它可以改变从客户端到服务器的数据包大小的功能。改变数据包的大小可以干扰流量识别环节，从而在极大程度上缓解主动探测。</p><p><img src="https://gfw.report/blog/gfw_shadowsocks/images/image4.png" alt="Effectiveness of brdgrd on Server"></p><p>上图显示了一个受到主动探测的Shadowsocks服务器，在开启brdgrd后的数小时内不再收到主动探测。而当我们关闭brdgrd，主动探测立刻继续。我们第二次开启brdgrd，主动探测在之后的40小时里完全停止，但之后又有些许主动探测。</p><p>另一组实验显示，在第一次运行Shadowoscks之初就启用brdgrd也许更加的有效。</p><p>Brdgrd的原理是将TCP Window Size改写为一个小得罕见的值。因此，审查者可能可以检测出brdgrd被使用了。因此，尽管brdgrd可以在现阶段有效的减少主动探测，其不能被看作是一个一劳永逸的解决方案。</p><h2 id="尚未解决的问题"><a href="#尚未解决的问题" class="headerlink" title="尚未解决的问题"></a>尚未解决的问题</h2><p>尽管我们已经清楚GFW会主动探测Shadowsocks服务器，我们仍不清楚主动探测与Shadowsocks服务器被封之间的关系。我们有33组Shadowsocks服务器分布于世界各地。尽管它们中的大多数都遭受到了大量的主动探测，但是仅有3台服务器被封锁。更有趣的是，其中一台被封锁的服务器只被使用了很短的一段时间，因此受到的主动探测数量应该比很多未被封锁的服务器要少得多。</p><p>我们提出3种假设试图解释这一有趣的现象：</p><ul><li><p>Shadowsocks服务器的封锁是由人为的因素控制的。也就是说，GFW也许维护了一份在不同程度上被怀疑为Shadowsocks服务器的清单，然后根据人工因素来决定对服务器进行封锁还是解封。这一假设可以解释为什么更多的服务器是在政治敏感时期被封锁的。</p></li><li><p>另一个假设是GFW的主动探测对于一些我们实验采用的Shadowsocks实现无效。确实，我们被封锁的那3台服务器都是使用了与其他实验中的Shadowsocks不同的实现。如果GFW是根据某些Shadowsocks服务器实现对主动探测的特有反应来识别判断的话，那么这一假设更有可能为真。</p></li><li><p>第三个假设是对于Shadowsocks的封锁在地理上存在着不一致性。我们被封锁的那3台服务器所在的数据中心不同于其他大多数实验，使用的客服端也是位于一般的居民网络，而非数据中心。如果GFW更注意属于某些数据中心的IP地址，抑或更注意来自一般居民网络的客户端连接，那么这一假设更有可能为真。</p></li></ul><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>我们想在此感谢以下人员对此主题的讨论和研究：</p><ul><li>Shadowsocks-libev 的开发者们</li><li>OutlineVPN 的开发者们</li><li>Eric Wustrow以及其他多名来自科罗拉多大学博尔德分校的研究人员</li></ul><h2 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a>联系我们</h2><p>这篇报告首发于GFW Report。我们还在<a href="https://github.com/net4people/bbs/issues/22" target="_blank" rel="noopener">net4people</a>和<a href="https://ntc.party/t/how-china-detects-and-blocks-shadowsocks/289" target="_blank" rel="noopener">ntc.party</a>同步更新了这篇报告。</p><p>我们鼓励您公开或私下地分享与报告中的发现和假设相关的问题、评论或证据。我们私下的联系方式可见<a href="https://gfw.report/" target="_blank" rel="noopener">GFW Report</a>的页脚。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;作者:&lt;/strong&gt; Anonymous, Anonymous, Anonymous, David Fifield, Amir Houmansadr&lt;br&gt;日期: 2019年12月29日，星期日&lt;br&gt;&lt;a href=&quot;https://gfw.report/blog/gfw_shadowsocks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;English Version: How China Detects and Blocks Shadowsocks&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在中国，&lt;a href=&quot;https://shadowsocks.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Shadowsocks&lt;/em&gt;&lt;/a&gt; 是最流行的翻墙软件之一。从2019年5月起，大量的中国网民反馈他们的Shadowsocks服务器被封锁了。这篇报告是我们对中国的防火长城（GFW）是如何检测和封锁Shadowsocks及其衍生翻墙软件的初步调查结果。通过网络测量实验，我们发现GFW会&lt;strong&gt;被动的监视网络流量&lt;/strong&gt;从而识别出疑似Shadowsocks的网络流量；然后对对应的Shadowsocks服务器进行&lt;strong&gt;主动探测&lt;/strong&gt;已验证其怀疑的正确与否。Shadowsocks的封锁程度可能受&lt;strong&gt;人为因素&lt;/strong&gt;在政治敏感时期的控制。我们提出一种&lt;strong&gt;规避方法&lt;/strong&gt;，即改变网络数据包在Shadowsocks握手阶段的大小。这种方法被证明可以在现阶段有效减少主动探测。我们会继续与开发者合作让Shadowsocks及其衍生工具变得更加难以封锁。&lt;br&gt;
    
    </summary>
    
      <category term="网络" scheme="https://www.bfdz.ink/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络封锁" scheme="https://www.bfdz.ink/tags/%E7%BD%91%E7%BB%9C%E5%B0%81%E9%94%81/"/>
    
      <category term="ss" scheme="https://www.bfdz.ink/tags/ss/"/>
    
  </entry>
  
  <entry>
    <title>香港大带宽 VPS 优惠 17.1 元一月</title>
    <link href="https://www.bfdz.ink/2019/12/29/138/"/>
    <id>https://www.bfdz.ink/2019/12/29/138/</id>
    <published>2019-12-29T02:17:00.000Z</published>
    <updated>2019-12-29T02:05:35.474Z</updated>
    
    <content type="html"><![CDATA[<p>沙田通用Super mini VPS</p><p>CPU 1核<br>内存 512M<br>硬盘 10G SAS R10<br>月流量 300GB<br>速率  30Mbps 峰值<br>虚拟化架构 KVM<br>防护2Gbps<br>1*IPV4地址</p><p>HGC线路<br>三网CN1中国大陆直航</p><p>非原生IP<br>解锁港区奈飞<br>优惠后17.1元一月 174.9元一年<br>优惠码：bestcheapvps-6</p><p>购买链接 <a href="https://www.qexw.com/aff.php?aff=448&amp;pid=137" target="_blank" rel="noopener">企鹅小屋-香港vps</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;沙田通用Super mini VPS&lt;/p&gt;
&lt;p&gt;CPU 1核&lt;br&gt;内存 512M&lt;br&gt;硬盘 10G SAS R10&lt;br&gt;月流量 300GB&lt;br&gt;速率  30Mbps 峰值&lt;br&gt;虚拟化架构 KVM&lt;br&gt;防护2Gbps&lt;br&gt;1*IPV4地址&lt;/p&gt;
&lt;p&gt;HGC线路&lt;br&gt;三网CN1中国大陆直航&lt;/p&gt;
&lt;p&gt;非原生IP&lt;br&gt;解锁港区奈飞&lt;br&gt;优惠后17.1元一月 174.9元一年&lt;br&gt;优惠码：bestcheapvps-6&lt;/p&gt;
&lt;p&gt;购买链接 &lt;a href=&quot;https://www.qexw.com/aff.php?aff=448&amp;amp;pid=137&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;企鹅小屋-香港vps&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="VPS" scheme="https://www.bfdz.ink/categories/VPS/"/>
    
    
      <category term="vps" scheme="https://www.bfdz.ink/tags/vps/"/>
    
      <category term="香港" scheme="https://www.bfdz.ink/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>庆余年第一季泄露版补帧修复</title>
    <link href="https://www.bfdz.ink/2019/12/24/137/"/>
    <id>https://www.bfdz.ink/2019/12/24/137/</id>
    <published>2019-12-24T12:17:00.000Z</published>
    <updated>2019-12-30T12:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>庆余年泄露的第 34 至 46 集源帧率是 18 FPS，YUV 4:2:2, 很多人反应播放设备黑屏及低帧卡顿问题，故重编码为最常见的 YUV420，以解决播放设备不兼容问题。补帧至 25 FPS，很大程度缓解卡顿现象。</p><p>此资源转载自馒头，感谢制作者。</p><a id="more"></a><hr><ul><li><p>谷歌网盘<br>  E34-46(补帧版)：<a href="https://drive.google.com/drive/folders/1kNHNt6TjJvwPWwYOOyolEERpDmoR-jYh?usp=sharing" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1kNHNt6TjJvwPWwYOOyolEERpDmoR-jYh?usp=sharing</a></p><p>  <strong>如果出现下载次数被限制的提示，先右键复制文件，然后到自己的谷歌硬盘里下载</strong></p></li><li><p>BFDZ 的网盘（免扶墙）<br>  E34-36（补帧版）:<br>  <a href="http://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E34-36.WEB-DL.1080p.H264.AAC-REPACK/" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E34-36.WEB-DL.1080p.H264.AAC-REPACK</a><br>  <a href="https://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E37-41.WEB-DL.1080p.H264.AAC-REPACK" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E37-41.WEB-DL.1080p.H264.AAC-REPACK</a><br>  <a href="https://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E42-46.WEB-DL.1080p.H264.AAC-REPACK" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E42-46.WEB-DL.1080p.H264.AAC-REPACK</a></p></li></ul><hr><p>Mediainfo</p><p>General<br>Complete name                  : 庆余年.Qing.Yu.Nian.2019.E34.WEB-DL.1080p.H264.AAC-REPACK.mp4<br>Format                         : MPEG-4<br>Format profile                 : Base Media<br>Codec ID                       : isom (isom)<br>File size                      : 1.62 GiB<br>Duration                       : 41 min 5 s<br>Overall bit rate mode          : Variable<br>Overall bit rate               : 5 641 kb/s<br>Encoded date                   : UTC 2019-12-22 01:48:34<br>Tagged date                    : UTC 2019-12-22 01:48:34</p><p>Video<br>ID                             : 1<br>Format                         : AVC<br>Format/Info                    : Advanced Video Codec<br>Format profile                 : High@L4<br>Format settings                : CABAC / 4 Ref Frames<br>Format settings, CABAC         : Yes<br>Format settings, Reference fra : 4 frames<br>Codec ID                       : avc1<br>Codec ID/Info                  : Advanced Video Coding<br>Duration                       : 41 min 5 s<br>Bit rate                       : 5 508 kb/s<br>Maximum bit rate               : 36.3 Mb/s<br>Width                          : 1 920 pixels<br>Height                         : 1 080 pixels<br>Display aspect ratio           : 16:9<br>Frame rate mode                : Constant<br>Frame rate                     : 25.200 FPS<br>Color space                    : YUV<br>Chroma subsampling             : 4:2:0<br>Bit depth                      : 8 bits<br>Scan type                      : Progressive<br>Bits/(Pixel*Frame)             : 0.105<br>Stream size                    : 1.58 GiB (98%)<br>Writing library                : x264 core 157 r2935 545de2f<br>Encoded date                   : UTC 2019-12-21 19:12:33<br>Tagged date                    : UTC 2019-12-22 01:49:00<br>Codec configuration box        : avcC</p><p>Audio<br>ID                             : 2<br>Format                         : AAC LC<br>Format/Info                    : Advanced Audio Codec Low Complexity<br>Codec ID                       : mp4a-67-2<br>Duration                       : 41 min 5 s<br>Bit rate mode                  : Variable<br>Bit rate                       : 129 kb/s<br>Maximum bit rate               : 141 kb/s<br>Channel(s)                     : 2 channels<br>Channel layout                 : L R<br>Sampling rate                  : 44.1 kHz<br>Frame rate                     : 43.066 FPS (1024 SPF)<br>Compression mode               : Lossy<br>Stream size                    : 37.8 MiB (2%)<br>Encoded date                   : UTC 2019-12-22 01:48:47<br>Tagged date                    : UTC 2019-12-22 01:49:00</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;庆余年泄露的第 34 至 46 集源帧率是 18 FPS，YUV 4:2:2, 很多人反应播放设备黑屏及低帧卡顿问题，故重编码为最常见的 YUV420，以解决播放设备不兼容问题。补帧至 25 FPS，很大程度缓解卡顿现象。&lt;/p&gt;
&lt;p&gt;此资源转载自馒头，感谢制作者。&lt;/p&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="庆余年" scheme="https://www.bfdz.ink/tags/%E5%BA%86%E4%BD%99%E5%B9%B4/"/>
    
      <category term="网盘" scheme="https://www.bfdz.ink/tags/%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>庆余年第一季泄露版全集网盘下载</title>
    <link href="https://www.bfdz.ink/2019/12/20/136/"/>
    <id>https://www.bfdz.ink/2019/12/20/136/</id>
    <published>2019-12-20T14:53:00.000Z</published>
    <updated>2019-12-30T12:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/30/IgOzdqFwGHLP8ZY.jpg" alt=""></p><p>◎译　　名　Joy of Life / 庆余年 第一季<br>◎片　　名　庆余年<br>◎年　　代　2019<br>◎产　　地　中国大陆<br>◎类　　别　剧情 / 古装<br>◎语　　言　汉语普通话<br>◎上映日期　2019-11-26(中国大陆)<br>◎IMDb评分　7.6/10 from 14 users<br>◎豆瓣评分　7.9/10 from 122193 users<br><a id="more"></a><br>◎集　　数　46<br>◎片　　长　45分钟<br>◎导　　演　孙皓 Hao Sun<br>◎编　　剧　王倦 Juan Wang / 猫腻 Mao Ni<br>◎主　　演　张若昀 Ruoyun Zhang<br>　　　　　  李沁 Qin Li<br>　　　　　  陈道明 Daoming Chen<br>　　　　　  吴刚 Gang Wu<br>　　　　　  李小冉 Xiaoran Li<br>　　　　　  袁泉 Quan Yuan<br>　　　　　  于荣光 Ringo Yu<br>　　　　　  辛芷蕾 Zhilei Xin<br>　　　　　  李纯 Chun Li<br>　　　　　  宋轶 Yi Song<br>　　　　　  刘桦 Hua Liu</p><p>◎标　　签　古装 | 良心剧 | 小说改编 | 搞笑 | 权谋 | 剧情 | 2019 | 中国大陆</p><p>◎简　　介  </p><p>　　某大学文学史专业的学生张庆熟读古典名著，但他用现代观念剖析古代文学史的论文命题不被叶教授所认可。为了让叶教授成为自己的研究生导师，张庆决定通过写小说的方式，进一步阐述自己想要表达的观点。<br>在他的小说中，身世神秘的少年——范闲，自小跟随奶奶生活在海边小城澹州，随着一位老师的突然造访，他看似平静的生活开始直面重重的危机与考验。在神秘老师和一位蒙眼守护者的指点下，范闲熟识药性药理，修炼霸道真气并精进武艺，而后接连化解了诸多危局。因对身世之谜的好奇，范闲离开澹州，前赴京都。<br>在京都，范闲凭借过人的智谋与勇武成为年轻一代的佼佼者，他先以诗文冠绝京都，而后出使邻国，营救人质，整合谍报网，查处震动朝野的走私案……这个过程中，范闲饱尝人间冷暖并坚守对正义、良善的坚持，历经家族、江湖、庙堂的种种考验与锤炼，书写了光彩的人生传奇。</p><p>◎获奖情况  </p><p>　　第5届豆瓣电影年度榜单(2018)<br>　　最值得期待的剧集(提名)</p><hr><ul><li><p>谷歌网盘（需扶墙）（更新：12/30）<br>  E01-46：<a href="https://drive.google.com/open?id=1zhkis-3F2EOmhM2wZXaRz6MVBPfJxfhJ" target="_blank" rel="noopener">https://drive.google.com/open?id=1zhkis-3F2EOmhM2wZXaRz6MVBPfJxfhJ</a><br>  E01-46：<a href="https://drive.google.com/open?id=1OEdzNsGgfx_t-b0cVy-V0lmyBAn8Jqp8" target="_blank" rel="noopener">https://drive.google.com/open?id=1OEdzNsGgfx_t-b0cVy-V0lmyBAn8Jqp8</a><br>  E01-46：<a href="https://drive.google.com/drive/folders/1dZrJqOC_-60pkuB3VEvwsvlsVH7fLU3d" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1dZrJqOC_-60pkuB3VEvwsvlsVH7fLU3d</a><br>  E34-46：<a href="https://drive.google.com/folderview?id=1-1Ok7PV43lWT_myqTZrxfmBZB2SAmk34" target="_blank" rel="noopener">https://drive.google.com/folderview?id=1-1Ok7PV43lWT_myqTZrxfmBZB2SAmk34</a></p><ul><li><strong>如果出现下载次数被限制的提示，先右键复制文件，然后到自己的谷歌硬盘里下载</strong></li><li><p><strong>第一个共享链接的文件名末尾有<code>(副本)</code>有二字，下载后注意删除</strong></p><p>E34-46(补帧版)：<a href="https://drive.google.com/drive/folders/1kNHNt6TjJvwPWwYOOyolEERpDmoR-jYh?usp=sharing" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1kNHNt6TjJvwPWwYOOyolEERpDmoR-jYh?usp=sharing</a></p></li></ul></li><li><p>BFDZ 的网盘（免扶墙）</p><p>  <strong>补帧版</strong></p><blockquote><p>制作者的话： 片源为公网搜集的YUV444/FPS18版本，本站友们反应很多播放设备黑屏及低帧卡顿问题，故重编码为最常见的YUV420，以解决播放设备不兼容问题。补帧至FPS25，很大程度缓解卡顿现象。</p></blockquote><p>  E34-36（补帧版）:<br>  <a href="http://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E34-36.WEB-DL.1080p.H264.AAC-REPACK/" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E34-36.WEB-DL.1080p.H264.AAC-REPACK</a><br>  <a href="https://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E37-41.WEB-DL.1080p.H264.AAC-REPACK" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E37-41.WEB-DL.1080p.H264.AAC-REPACK</a><br>  <a href="https://d.bfdz.ink/TV/%E5%BA%86%E4%BD%99%E5%B9%B4.Qing.Yu.Nian.2019.E42-46.WEB-DL.1080p.H264.AAC-REPACK" target="_blank" rel="noopener">庆余年.Qing.Yu.Nian.2019.E42-46.WEB-DL.1080p.H264.AAC-REPACK</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/30/IgOzdqFwGHLP8ZY.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;◎译　　名　Joy of Life / 庆余年 第一季&lt;br&gt;◎片　　名　庆余年&lt;br&gt;◎年　　代　2019&lt;br&gt;◎产　　地　中国大陆&lt;br&gt;◎类　　别　剧情 / 古装&lt;br&gt;◎语　　言　汉语普通话&lt;br&gt;◎上映日期　2019-11-26(中国大陆)&lt;br&gt;◎IMDb评分　7.6/10 from 14 users&lt;br&gt;◎豆瓣评分　7.9/10 from 122193 users&lt;br&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="庆余年" scheme="https://www.bfdz.ink/tags/%E5%BA%86%E4%BD%99%E5%B9%B4/"/>
    
      <category term="网盘" scheme="https://www.bfdz.ink/tags/%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>ipv6 测试站上线</title>
    <link href="https://www.bfdz.ink/2019/11/26/135/"/>
    <id>https://www.bfdz.ink/2019/11/26/135/</id>
    <published>2019-11-26T14:53:00.000Z</published>
    <updated>2019-11-27T12:14:38.058Z</updated>
    
    <content type="html"><![CDATA[<p>21 号晚上 coding pages 发生严重故障导致本站不可访问，于是连夜将博客迁移到自己的“小鸡”（vps）上。迁移时发现“小鸡”的ipv6居然是可用的，虽然官方套餐里面只写了ipv4，但既然机房分配了ipv6，不用白不用，所以顺便部署上线了本站的 ipv6 测试站: <a href="https://ipv6.bfdz.ink" target="_blank" rel="noopener">https://ipv6.bfdz.ink</a></p><p>考虑到国内不同地区连接国外ipv6网络的速度可能不快，主站目前还是只设置 ipv4 地址，ipv6 测试站只开放 ipv6 地址，如果你能访问这个博客的 ipv6 域名，说明你的网络已经支持ipv6了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;21 号晚上 coding pages 发生严重故障导致本站不可访问，于是连夜将博客迁移到自己的“小鸡”（vps）上。迁移时发现“小鸡”的ipv6居然是可用的，虽然官方套餐里面只写了ipv4，但既然机房分配了ipv6，不用白不用，所以顺便部署上线了本站的 ipv6 测试站:
      
    
    </summary>
    
      <category term="日志" scheme="https://www.bfdz.ink/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="ipv6" scheme="https://www.bfdz.ink/tags/ipv6/"/>
    
  </entry>
  
  <entry>
    <title>V2Ray 部署之“三步走”教程</title>
    <link href="https://www.bfdz.ink/2019/11/23/134/"/>
    <id>https://www.bfdz.ink/2019/11/23/134/</id>
    <published>2019-11-23T08:08:00.000Z</published>
    <updated>2019-11-24T09:21:03.203Z</updated>
    
    <content type="html"><![CDATA[<p>这几天国际联网线路出现大范围的丢包或干扰，使用 v2 + ws + tls 貌似可以应对这种情况。</p><a id="more"></a><h2 id="1-安装-V2Ray"><a href="#1-安装-V2Ray" class="headerlink" title="1.安装 V2Ray"></a>1.安装 V2Ray</h2><p>先使用官方脚本安装，以后升级只需重复执行此命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><p>新安装完会提示两行，一个端口，一个 uuid，记不记都可以。</p><p>官方脚本默认支持 vmess，下一步需要编辑修改 v2 的服务端配置，让支持 ws 和 tls，post 和 id 改成上面的，也可以自己定义，不建议直接搬运下面的，id 相当于密码，还得用你自己的，下面 path 是目录，这里不设。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/v2ray/config.json</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="attr">  "inbounds":</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line"><span class="attr">      "port":</span> <span class="number">12345</span><span class="string">,</span></span><br><span class="line"><span class="attr">      "listen":</span><span class="string">"127.0.0.1"</span><span class="string">,</span></span><br><span class="line"><span class="attr">      "protocol":</span> <span class="string">"vmess"</span><span class="string">,</span></span><br><span class="line"><span class="attr">      "settings":</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">        "clients":</span> <span class="string">[</span></span><br><span class="line">          <span class="string">&#123;</span></span><br><span class="line"><span class="attr">            "id":</span> <span class="string">"6768f908-d39f-424f-b3e7-c1b6b10fdf72"</span><span class="string">,</span></span><br><span class="line"><span class="attr">            "alterId":</span> <span class="number">64</span></span><br><span class="line">          <span class="string">&#125;</span></span><br><span class="line">        <span class="string">]</span></span><br><span class="line">      <span class="string">&#125;,</span></span><br><span class="line"><span class="attr">      "streamSettings":</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">        "network":</span> <span class="string">"ws"</span><span class="string">,</span></span><br><span class="line"><span class="attr">        "wsSettings":</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">        "path":</span> <span class="string">"/"</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">      <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">  <span class="string">],</span></span><br><span class="line"><span class="attr">  "outbounds":</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line"><span class="attr">      "protocol":</span> <span class="string">"freedom"</span><span class="string">,</span></span><br><span class="line"><span class="attr">      "settings":</span> <span class="string">&#123;&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">  <span class="string">]</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>改过配置，就要重启一下 v2 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service v2ray restart</span><br></pre></td></tr></table></figure><p>最好也顺手查看下状态，有没有报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service v2ray status</span><br></pre></td></tr></table></figure><hr><h2 id="2-安装caddy"><a href="#2-安装caddy" class="headerlink" title="2.安装caddy"></a>2.安装caddy</h2><p>用 caddy 申请证书和反代。这里只勾选 hook.service，hook.service 是 caddy 的自启服务，开机实现自启，你需要其它插件就自己另外加，caddy 是 Go 语言的，以后升级、或者另外加插件，也是一样再一次运行命令即可，会自动替换。</p><p>如果服务器之前安装过 nginx ，那么需要将其关闭或卸载，因为 nginx 会占用 80 和 443 端口，和 caddy 产生端口冲突。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://getcaddy.com | bash -s personal hook.service</span><br></pre></td></tr></table></figure><p>然后运行：让自启生效。邮箱换你的，Caddyfile 是 caddy 的默认配置文档，本人习惯和 caddy 同一目录 /usr/local/bin，你要调整就要和下面一并调整</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">caddy -service install -agree -email z@z.com -conf /usr/<span class="built_in">local</span>/bin/Caddyfile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/bin</span><br></pre></td></tr></table></figure><p>进入 caddy 安装目录，然后 nano Caddyfile 写配置支持 tls</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hostloc.xyz &#123;</span><br><span class="line">    tls    z@z.com</span><br><span class="line">    proxy /  127.0.0.1:12345  &#123;</span><br><span class="line">    websocket</span><br><span class="line">    header_upstream -Origin</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>端口要与上面统一，域名用你自己的，二级域名都可以，先做好解析。<strong>注意这里是不套 cloudflare 的，你不要开了 cloudflare 的云。</strong></p><p>仍然在 /usr/local/bin 当前目录， ./caddy  初次运行一次，会显示申请证书，没报错就是成功了。</p><p>需要查看 caddy 运行状态的命令，其它重启、启动就不用说</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">caddy -service status</span><br></pre></td></tr></table></figure><p>对应的重启、启动、停止就是 <code>caddy -service restart |  start  |  stop</code></p><hr><h2 id="3-客户端设置"><a href="#3-客户端设置" class="headerlink" title="3.客户端设置"></a>3.客户端设置</h2><p>地址：就是你的域名，端口是 443，ID 是你上面那一串，额外 ID 是 0，传输协议是 ws，其它默认，最下面底层传输安全记得把 tls 选上。完事。</p><p><img src="https://img13.360buyimg.com/uba/jfs/t1/83731/10/15881/20469/5dda46dbEb45d2378/2b9c135ee8705969.png" alt=""></p><hr><p>via:<a href="https://www.hostloc.com/thread-589486-1-1.html" target="_blank" rel="noopener"> v2-ws-tls教程就三步</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天国际联网线路出现大范围的丢包或干扰，使用 v2 + ws + tls 貌似可以应对这种情况。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="v2ray" scheme="https://www.bfdz.ink/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>高清电视直播IPTV</title>
    <link href="https://www.bfdz.ink/2019/11/06/133/"/>
    <id>https://www.bfdz.ink/2019/11/06/133/</id>
    <published>2019-11-06T14:11:00.000Z</published>
    <updated>2019-11-06T14:24:13.034Z</updated>
    
    <content type="html"><![CDATA[<p>这是北京邮电大学和 BYR-Team 提供的校园直播，拥有央视高清及各大卫视高清频道。</p><p>浏览器在线观看：<a href="https://v4.uhd.app/" target="_blank" rel="noopener">https://v4.uhd.app/</a></p><p>PC端和移动端直播源：<a href="http://ivi.bupt.edu.cn/" target="_blank" rel="noopener">http://ivi.bupt.edu.cn/</a></p><p><img src="https://ae01.alicdn.com/kf/H27af28f2756b4b66bd217684793e3f4b1.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是北京邮电大学和 BYR-Team 提供的校园直播，拥有央视高清及各大卫视高清频道。&lt;/p&gt;
&lt;p&gt;浏览器在线观看：&lt;a href=&quot;https://v4.uhd.app/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://v4.uhd.ap
      
    
    </summary>
    
      <category term="实用网站" scheme="https://www.bfdz.ink/categories/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="IPTV" scheme="https://www.bfdz.ink/tags/IPTV/"/>
    
      <category term="直播源" scheme="https://www.bfdz.ink/tags/%E7%9B%B4%E6%92%AD%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>批量生成带二维码海报免费软件</title>
    <link href="https://www.bfdz.ink/2019/10/22/131/"/>
    <id>https://www.bfdz.ink/2019/10/22/131/</id>
    <published>2019-10-22T09:08:00.000Z</published>
    <updated>2019-10-22T14:12:11.154Z</updated>
    
    <content type="html"><![CDATA[<p>生成二维码的工具很多，生成带二维码的海报类型工具就很少了。</p><a id="more"></a><p>支持的功能如下：</p><p>0  纯绿色，不访问网络，没有其他功能，放心使用。因为不访问网络，因此也不会自动升级。<br>1  直接生成普通的二维码，文字可设置，颜色可设置，边距可设置。<br>2  二维码中间可以带小图片，自动缩放到合适大小。<br>3  在一个海报图片上面贴上二维码，位置可调整，透明度可调整。<br>4  海报上的二维码可以设置外边框，更好看一些，可以更换颜色。<br>5  批量生成海报图片，同一张海报底图上面的二维码不同，批量一次性生成多张海报。<br>6  批量生成海报图片，用不同的海报底图，同一个二维码，批量一次性生产多张。</p><p><a href="https://pan.baidu.com/s/1u9tb1LpxspooGNg3UOEqRw" target="_blank" rel="noopener">https://pan.baidu.com/s/1u9tb1LpxspooGNg3UOEqRw</a></p><p>(其他下载地址，可能被人改过，植入广告等等。不做保证，此地址是软件作者个人百度盘地址，可以保证真实性）</p><hr><p>转载来源：(免费工具批量生成带二维码海报免费软件)[<a href="http://blog.sina.com.cn/s/blog_74661d9f0102xydv.html]" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_74661d9f0102xydv.html]</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生成二维码的工具很多，生成带二维码的海报类型工具就很少了。&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.bfdz.ink/categories/Windows/"/>
    
    
      <category term="免费软件" scheme="https://www.bfdz.ink/tags/%E5%85%8D%E8%B4%B9%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>免费高速游戏加速器</title>
    <link href="https://www.bfdz.ink/2019/10/22/132/"/>
    <id>https://www.bfdz.ink/2019/10/22/132/</id>
    <published>2019-10-22T08:08:00.000Z</published>
    <updated>2019-10-22T14:12:04.218Z</updated>
    
    <content type="html"><![CDATA[<p>GoLink加速器是一款专业的游戏加速器，免费为国内玩家提供游戏加速服务，支持Origin、Steam、Uplay等平台游戏大作，游戏专线加速通道能够有效降低延迟、避免卡顿、杜绝掉线、轻松联机，界面简洁，操作方便！</p><p>同时也可以让海外华人畅玩国内的APP。满足海外华人高速观看优酷爱奇艺等国内主流音乐、视频应用等需求；助力海外国服游戏玩家一键加速游戏应用，从此告别丢包卡顿，随时随地畅玩王者荣耀等国服手游，给你畅快体验。</p><p>我用这个加速器玩战地一，日服延迟在60ms左右，比所谓的日本IPLC专线还要稳定，另外这个加速器还支持 Pubg lite 泰国服等游戏。</p><p>下载地址：<a href="https://www.golink.com/?code=TJESXQAS" target="_blank" rel="noopener">GoLink</a></p><a id="more"></a><p><img src="https://www.golink.com/images/index-v2/show1-1.png" alt=""><br><img src="https://www.golink.com/images/index-v2/show2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GoLink加速器是一款专业的游戏加速器，免费为国内玩家提供游戏加速服务，支持Origin、Steam、Uplay等平台游戏大作，游戏专线加速通道能够有效降低延迟、避免卡顿、杜绝掉线、轻松联机，界面简洁，操作方便！&lt;/p&gt;
&lt;p&gt;同时也可以让海外华人畅玩国内的APP。满足海外华人高速观看优酷爱奇艺等国内主流音乐、视频应用等需求；助力海外国服游戏玩家一键加速游戏应用，从此告别丢包卡顿，随时随地畅玩王者荣耀等国服手游，给你畅快体验。&lt;/p&gt;
&lt;p&gt;我用这个加速器玩战地一，日服延迟在60ms左右，比所谓的日本IPLC专线还要稳定，另外这个加速器还支持 Pubg lite 泰国服等游戏。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://www.golink.com/?code=TJESXQAS&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GoLink&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.bfdz.ink/categories/Windows/"/>
    
    
      <category term="游戏加速器" scheme="https://www.bfdz.ink/tags/%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>利用iptables+ipset限制端口</title>
    <link href="https://www.bfdz.ink/2019/08/22/130/"/>
    <id>https://www.bfdz.ink/2019/08/22/130/</id>
    <published>2019-08-22T03:08:00.000Z</published>
    <updated>2019-08-22T17:22:42.511Z</updated>
    
    <content type="html"><![CDATA[<p>利用iptables+ipset限制端口，只允许国内访问。</p><a id="more"></a><hr><p>Debian下，先安装</p><p><code>apt-get install ipset</code></p><p>创建ipset的 chnroute IP集</p><p><code>ipset create chnroute hash:net maxelem 65536</code></p><p>自动下载更新ipset国内IP路由脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ipset create chnroute <span class="built_in">hash</span>:net maxelem 65536</span><br><span class="line">wget --no-check-certificate -O- <span class="string">'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest'</span>| awk -F\| <span class="string">'/CN\|ipv4/ &#123; printf("%s/%d\n", $4, 32-log($5)/log(2)) &#125;'</span>&gt;/etc/chnroute.txt</span><br><span class="line">ipset flush chnroute</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> ip;<span class="keyword">do</span></span><br><span class="line">ipset add chnroute <span class="variable">$ip</span></span><br><span class="line"><span class="keyword">done</span>&lt;/etc/chnroute.txt</span><br><span class="line">ipset save chnroute &gt;/etc/chnroute.conf</span><br></pre></td></tr></table></figure><p>保存脚本为chnroute.sh 到/etc目录下，并且赋予执行权限</p><p><code>chmod +x /etc/chnroute.sh</code></p><p>添加crontab计划任务，每天执行一次更新。</p><p><code>crontab -e</code></p><p>添加</p><p><code>0 0 * * * /etc/chnroute.sh</code></p><p>显示chnroute列表</p><p><code>ipset list chnroute</code></p><p>iptables限制，只允许ipset的 chnroute IP集内IP连接到7000端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -m set--match -set chnroute src -p tcp --dport 7000 -j ACCEPT</span><br><span class="line">iptables -A INPUT -m set--match -set chnroute src -p udp --dport 7000 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 7000 -j DROP</span><br><span class="line">iptables -A INPUT -p udp --dport 7000 -j DROP</span><br></pre></td></tr></table></figure><p>7000端口为frps参数的bind_port = 7000，主要限制国外IP连接到此frps通讯端口，即可。</p><hr><p>转载:<a href="https://bob.kim/wallip" target="_blank" rel="noopener">利用iptables+ipset限制，只允许国内IP连接到frps服务</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用iptables+ipset限制端口，只允许国内访问。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="iptables" scheme="https://www.bfdz.ink/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>KMS激活方法</title>
    <link href="https://www.bfdz.ink/2019/08/14/129/"/>
    <id>https://www.bfdz.ink/2019/08/14/129/</id>
    <published>2019-08-14T15:05:00.000Z</published>
    <updated>2019-08-14T15:14:53.874Z</updated>
    
    <content type="html"><![CDATA[<p><strong>支持Windows操作系统(VL),Office软件(VL). 已支持到最新的Windows和Office! 支持激活 Windows10 和 Office2019.</strong></p><a id="more"></a><hr><ul><li>Windows:<br>以管理员身份打开命令提示符,然执行下列命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">::cd /d &quot;%SystemRoot%\system32&quot;</span><br><span class="line">slmgr /skms kms.bfdz.ink</span><br><span class="line">slmgr /ato</span><br><span class="line">slmgr /xpr</span><br></pre></td></tr></table></figure><ul><li>Office:<br>以管理员身份打开命令提示符,进入软件安装目录,然后执行下列命令(这里以Office 2013为例):  </li></ul><p>进入32位版本安装目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /d &quot;%ProgramFiles(x86)%\Microsoft Office\Office15&quot;</span><br></pre></td></tr></table></figure><p>进入64位版本安装目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /d &quot;%ProgramFiles%\Microsoft Office\Office15&quot;</span><br></pre></td></tr></table></figure><p>然后执行下列命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /sethst:kms.bfdz.ink</span><br><span class="line">cscript ospp.vbs /act</span><br><span class="line">cscript ospp.vbs /dstatus</span><br></pre></td></tr></table></figure></p><p><strong>通过以上步骤就可以免费激活你的Windows系统和Office软件.</strong> 如果激活失败或输入过其他密钥,请先替换为<a href="https://technet.microsoft.com/en-us/library/jj612867.aspx" target="_blank" rel="noopener">微软官方GVLK密钥</a>.(<a href="https://moeclub.org/2018/12/02/710/" target="_blank" rel="noopener">点击查看</a>) 以安装政府版密钥为例(Ent G 400 Years):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk YYVX9-NTFWV-6MDM3-9PT4T-4M68B</span><br></pre></td></tr></table></figure></p><hr><p>注意:</p><ul><li><p>KMS方式激活的有效期只有180天.</p></li><li><p>每隔一段时间系统会自动KMS服务器请求续期.</p></li><li><p>只要本博客能够访问,这些都是自动的.无需人为干预.</p></li><li><p>只允许中国ip访问.</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;支持Windows操作系统(VL),Office软件(VL). 已支持到最新的Windows和Office! 支持激活 Windows10 和 Office2019.&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="实用网站" scheme="https://www.bfdz.ink/categories/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="KMS" scheme="https://www.bfdz.ink/tags/KMS/"/>
    
  </entry>
  
  <entry>
    <title>使用 Cloudflare Worker 构建 Pt-Gen</title>
    <link href="https://www.bfdz.ink/2019/07/28/128/"/>
    <id>https://www.bfdz.ink/2019/07/28/128/</id>
    <published>2019-07-28T07:23:00.000Z</published>
    <updated>2019-07-28T07:44:58.114Z</updated>
    
    <content type="html"><![CDATA[<p>最早的时候，Pt-Gen是作为Pt-help的一个子项，使用flask内置的web server提供服务，后来BFDZ将其单独提取出来（<a href="https://github.com/BFDZ/PT-Gen" target="_blank" rel="noopener">BFDZ/PT-Gen</a>），但是仍然存在部署较为困难的问题。</p><p>过去近1年的Pt-Gen的运行中，我曾经迁移过多次宿主机。目前托给ourhelp组的Pt-Gen服务器更是远在欧洲大陆。此外因为网络的问题，也导致部分时间段与豆瓣服务器无法连接，导致Pt-Gen服务的SLA特别差。</p><p>近期，我得知八蠢想要构建基于AWS lambda的Pt-Gen，也正好最近看到了有关Cloudflare Worker的一些介绍。正好这也是Cf-worker的用途之一——“构建完全依赖于 Web API 的“无服务器”应用程序”。</p><p>然而，与AWS lambda不同的是，cf-worker只支持Javscript。于是将原来Pt-Gen改成javascript的格式并使用Travis CI进行自动构建。</p><p>项目地址： <a href="https://github.com/Rhilip/pt-gen-cfworker" target="_blank" rel="noopener">https://github.com/Rhilip/pt-gen-cfworker</a><br>项目Demo地址： <a href="https://ptgen.rhilip.workers.dev/" target="_blank" rel="noopener">https://ptgen.rhilip.workers.dev/</a><br><a id="more"></a><br>Cloudflare Worker介绍<br>文档： <a href="https://workers.cloudflare.com/docs" target="_blank" rel="noopener">https://workers.cloudflare.com/docs</a></p><p>Cloudflare Worker是Cloudflare推出的serverless服务，可以使用Javascript以及WebAssembly语言进行编程，其最简单的代码示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1\. Register a FetchEvent listener that sends a custom</span></span><br><span class="line"><span class="comment">// response for the given request.</span></span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</span><br><span class="line">event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 2\. Return a custom request object</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">"hello world"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并提供了相应的CLI工具 <a href="https://github.com/cloudflare/wrangler" target="_blank" rel="noopener">Wrangler</a> 进行APP构建。此外，还提供了很简洁的调试界面。</p><p><strong>最为良心的Cloudflare Worker是可以免费使用的（免费计划一天最多100,000次请求）</strong></p><h2 id="部署基于Cloudflare-Worker的Pt-Gen"><a href="#部署基于Cloudflare-Worker的Pt-Gen" class="headerlink" title="部署基于Cloudflare Worker的Pt-Gen"></a>部署基于Cloudflare Worker的Pt-Gen</h2><p>和原项目相比，Pt-Gen-cfworker并不需要你在VPS上搭建复杂（并不）的Python3+uwsgi工具链，只需要你有Cloudflare帐号就可以。</p><p>本教程并不介绍Cloudflare帐号的注册方法（请自己搜索），仅分有无Node.js环境对不同用户部署方法进行介绍。</p><h3 id="1-无Node环境直接部署"><a href="#1-无Node环境直接部署" class="headerlink" title="1.无Node环境直接部署"></a>1.无Node环境直接部署</h3><p>因为项目主文件 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/master/index.js" target="_blank" rel="noopener">index.js</a> 加载了两个npm库用于解析页面，所以并不能直接使用。不过在项目的build分支中，我使用Travis CI自动构建了 可以用于CF-Worker的 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/build/script.js" target="_blank" rel="noopener">script.js</a> 。</p><p>所以进入Cloudflare的Worker面板，并创建新的Worker。<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/2591219312.png" alt=""><br><img src="https://blog.rhilip.info/usr/uploads/2019/07/1417315508.png" alt=""></p><p>在Worker代码的编辑器里面，首先修改左上角的Worker名称，这个名称会影响到后面生成的Worker域名（除非你使用已经在CF中注册的其他域名）。然后将 build分支的 <a href="https://github.com/Rhilip/pt-gen-cfworker/blob/build/script.js" target="_blank" rel="noopener">script.js</a> 文件全部复制到左侧的代码框中替换Cloudflare默认的代码块。</p><p>最后点击Run，如果右侧出现如下图的JSON块说明部署成功。之后你就可以直接使用worker域名进行访问。</p><p>如我这边部署的域名是<code>https://ptgen.rhilip.workers.dev/</code>。<br>则获取豆瓣的信息则请求地址如下： <code>https://ptgen.rhilip.workers.dev/?url=https://movie.douban.com/subject/1297880/</code>。<br>请求链接格式和Python写的Pt-Gen相同，既可以使用<code>&amp;url=.....</code> ，也可以使用<code>&amp;site=....&amp;sid=....</code>。且返回字段格式尽可能与原repo相同。<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/1494080402.png" alt=""><br><img src="https://blog.rhilip.info/usr/uploads/2019/07/3901039727.png" alt=""></p><h3 id="2-Node环境下使用Wrangler部署"><a href="#2-Node环境下使用Wrangler部署" class="headerlink" title="2.Node环境下使用Wrangler部署"></a>2.Node环境下使用Wrangler部署</h3><p>如果你本地有Node环境，或者希望对Pt-Gen-cfworker有改进的需要，你可以自己构建Worker文件。</p><blockquote><p>Wrangler 文档： <a href="https://github.com/cloudflare/wrangler" target="_blank" rel="noopener">https://github.com/cloudflare/wrangler</a></p></blockquote><ol><li>安装Wrangler并注册全局信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i @cloudflare/wrangler -g</span><br><span class="line">wrangler config <span class="string">"<span class="variable">$&#123;CF_EMAIL&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;CF_API_KEY&#125;</span>"</span></span><br></pre></td></tr></table></figure></li></ol><p>其中 <code>${CF_EMAIL}</code>为你的Cloudflare帐号，而 <code>${CF_API_KEY}</code> 你可以在你帐号的Profile页面中找到Global API Key。</p><ol start="2"><li>取得项目源代码并配置Wrangler信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Rhilip/pt-gen-cfworker.git</span><br><span class="line">cp wrangler.toml.sample wrangler.toml</span><br><span class="line">sed -i <span class="string">"s/CF_ACCOUNT_ID/<span class="variable">$&#123;CF_ACCOUNT_ID&#125;</span>/g"</span> wrangler.toml</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><p>使用git clone或者zip包下载项目源代码后，需要编辑<code>wrangler.toml</code>文件的相关键值，并将<code>account_id</code>值改成你在Worker界面右侧API栏中看到的值，<code>name</code> 值会影响到部署时的值，默认为<code>ptgen</code>。如果你不愿部署在<code>..workers.dev</code>域名下，你可以再参照Wrangler文档，添加<code>zone_id</code>，<code>route</code>等信息，本处不再累述。</p><ol start="3"><li>部署到workers.dev上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#wrangler build # 构造</span></span><br><span class="line"><span class="comment">#wrangler preview # 构造并预览</span></span><br><span class="line">wrangler publish <span class="comment"># 构造并发布</span></span><br></pre></td></tr></table></figure></li></ol><p>如果配置好wrangler信息并使用 <code>wrangler publish</code>，会直接部署，并 提示如下信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ wrangler publish</span><br><span class="line">⬇️ Installing wasm-pack...</span><br><span class="line">⬇️ Installing wranglerjs...</span><br><span class="line">Built successfully.</span><br><span class="line">Successfully published your script.</span><br><span class="line">Successfully made your script available at ptgen.rhilip.workers.dev</span><br><span class="line">✨ Success! Your worker was successfully published. ✨</span><br></pre></td></tr></table></figure></p><p>而如果使用<code>wrangler preview</code>则会在构建完后，弹出<code>https://cloudflareworkers.com/</code>开头的网页。此时你可以使用console等方法对脚本进行调试。</p><p>除了使用wrangler，本人还在<code>package.json</code>中设置了<code>alias</code>，你也可以使用 <code>npm {build,preview,publish}</code> （在IDE中）快速调用。</p><h3 id="Travis-CI-自动构建"><a href="#Travis-CI-自动构建" class="headerlink" title="Travis-CI 自动构建"></a>Travis-CI 自动构建</h3><p>本项目使用Travis-CI对主分支的更新进行自动构建生成build分支信息。</p><p>相关配置文件写在 .travis.yml 中。请自行查阅，并在Travis-CI中对以下环境变量进行设置：<br><img src="https://blog.rhilip.info/usr/uploads/2019/07/3885747407.png" alt=""></p><hr><p>著作权归作者所有。<br>商业转载请联系作者获得授权，非商业转载请注明出处。<br>作者：Rhilip<br>链接：<a href="https://blog.rhilip.info/archives/1095/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/1095/</a><br>来源：<a href="https://blog.rhilip.info/" target="_blank" rel="noopener">https://blog.rhilip.info/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最早的时候，Pt-Gen是作为Pt-help的一个子项，使用flask内置的web server提供服务，后来BFDZ将其单独提取出来（&lt;a href=&quot;https://github.com/BFDZ/PT-Gen&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BFDZ/PT-Gen&lt;/a&gt;），但是仍然存在部署较为困难的问题。&lt;/p&gt;
&lt;p&gt;过去近1年的Pt-Gen的运行中，我曾经迁移过多次宿主机。目前托给ourhelp组的Pt-Gen服务器更是远在欧洲大陆。此外因为网络的问题，也导致部分时间段与豆瓣服务器无法连接，导致Pt-Gen服务的SLA特别差。&lt;/p&gt;
&lt;p&gt;近期，我得知八蠢想要构建基于AWS lambda的Pt-Gen，也正好最近看到了有关Cloudflare Worker的一些介绍。正好这也是Cf-worker的用途之一——“构建完全依赖于 Web API 的“无服务器”应用程序”。&lt;/p&gt;
&lt;p&gt;然而，与AWS lambda不同的是，cf-worker只支持Javscript。于是将原来Pt-Gen改成javascript的格式并使用Travis CI进行自动构建。&lt;/p&gt;
&lt;p&gt;项目地址： &lt;a href=&quot;https://github.com/Rhilip/pt-gen-cfworker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Rhilip/pt-gen-cfworker&lt;/a&gt;&lt;br&gt;项目Demo地址： &lt;a href=&quot;https://ptgen.rhilip.workers.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ptgen.rhilip.workers.dev/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PT" scheme="https://www.bfdz.ink/categories/PT/"/>
    
    
      <category term="pt" scheme="https://www.bfdz.ink/tags/pt/"/>
    
      <category term="Cloudflare Worker" scheme="https://www.bfdz.ink/tags/Cloudflare-Worker/"/>
    
      <category term="转载" scheme="https://www.bfdz.ink/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>PbootCMS 部署教程</title>
    <link href="https://www.bfdz.ink/2019/07/24/127/"/>
    <id>https://www.bfdz.ink/2019/07/24/127/</id>
    <published>2019-07-23T23:08:00.000Z</published>
    <updated>2019-07-23T18:02:26.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="演示环境"><a href="#演示环境" class="headerlink" title="演示环境"></a>演示环境</h2><ul><li>系统: Linux</li><li>面板：lnmp<ul><li>nginx</li><li>php-7.2</li></ul></li></ul><a id="more"></a><h2 id="创建网站"><a href="#创建网站" class="headerlink" title="创建网站"></a>创建网站</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/24/eAdd9f.jpg" alt=""></p><p>因为 PbootCMS 要求开启环境的 Pathinfo 模式支持，所以 Enable PHP Pathinfo 这一项必须选 y ，其他选项随意。</p><h2 id="下载和配置"><a href="#下载和配置" class="headerlink" title="下载和配置"></a>下载和配置</h2><p>进入网站目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/demo.example.com/</span><br></pre></td></tr></table></figure></p><p>下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/hnaoyun/PbootCMS/archive/V1.4.2.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf V1.4.2.tar.gz </span><br><span class="line">mv PbootCMS-1.4.2/* ./</span><br></pre></td></tr></table></figure></p><p>配置权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R www ./*</span><br><span class="line">chgrp -R www ./*</span><br></pre></td></tr></table></figure></p><h2 id="配置授权码"><a href="#配置授权码" class="headerlink" title="配置授权码"></a>配置授权码</h2><p>进入 PbootCMS 官网页面 <a href="https://www.pbootcms.com/freesn.html" target="_blank" rel="noopener">https://www.pbootcms.com/freesn.html</a> ，输入自己网站的域名免费获取永久授权码。</p><p><img src="https://s2.ax1x.com/2019/07/24/eA07fx.jpg" alt=""></p><p>登陆自己网站后台，在 <code>全局配置</code> &gt;&gt; <code>配置参数</code> 中填写系统授权码并提交，这时候网站就已经可以访问了。</p><p>系统后台默认访问路径：http://域名/admin.php 账号：admin 密码：123456</p><p><img src="https://s2.ax1x.com/2019/07/24/eABptI.jpg" alt=""></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>最后注意修改后台管理员的默认密码和点击自动修改数据库路径。</p><p><img src="https://s2.ax1x.com/2019/07/24/eABnNn.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;演示环境&quot;&gt;&lt;a href=&quot;#演示环境&quot; class=&quot;headerlink&quot; title=&quot;演示环境&quot;&gt;&lt;/a&gt;演示环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;系统: Linux&lt;/li&gt;
&lt;li&gt;面板：lnmp&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;php-7.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="PbootCMS" scheme="https://www.bfdz.ink/tags/PbootCMS/"/>
    
  </entry>
  
  <entry>
    <title>PT-Gen v0.4.x 搭建教程</title>
    <link href="https://www.bfdz.ink/2019/05/15/126/"/>
    <id>https://www.bfdz.ink/2019/05/15/126/</id>
    <published>2019-05-15T11:08:00.000Z</published>
    <updated>2019-06-25T16:14:21.686Z</updated>
    
    <content type="html"><![CDATA[<p>PT-Gen 0.4.4 版，相比于之前的 0.3.5 版，有很大的改动：</p><ol><li>增加了数据库缓存，所以服务器必须要安装 sqlite3。</li><li>5月13日豆瓣电影的公共API下线，导致 PT-Gen v0.4.2 及之前的版本无法获取电影数据，现在通过在前端页面和后端程序加入 apikey 才解决这个问题。</li><li>修改了 API 路径，由原来的 <code>/movieinfo/gen</code> 改为 <code>/infogen</code></li><li>去掉了 run.py</li></ol><p>建议之前使用 v0.3.5 的朋友按此教程升级到 v0.4.5，同时前端页面也要注意更新。</p><hr><p>服务器必备的软件环境：</p><ul><li>nginx</li><li>python3.5 或者更高</li><li>pip3</li><li>uWSGI</li><li>sqlite3</li></ul><p>我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。</p><a id="more"></a><hr><p>如果你的 vps 系统是比较新的，例如 Debian 9 ，可能已经预置了 python3.5 和 sqlite3。可以通过下面的命令查看<code>_sqlite3.so</code>情况，如果有类似 <code>/usr/lib/python3.5/lib-dynload/_sqlite3.cpython-35m-x86_64-linux-gnu.so</code>这样的文件，则不需要再编译安装 sqlite3 和 python3。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name _sqlite*.so</span><br></pre></td></tr></table></figure><h2 id="编译安装-sqlite3"><a href="#编译安装-sqlite3" class="headerlink" title="编译安装 sqlite3"></a>编译安装 sqlite3</h2><ol><li>下载源码</li><li>解压</li><li>进入目录</li><li>编译</li><li>安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span><br><span class="line">tar xzvf sqlite-autoconf-3280000.tar.gz</span><br><span class="line"><span class="built_in">cd</span> sqlite-autoconf-3280000</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/sqlite</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装成功后，会出现类型下面的提示</p><p><img src="https://s2.ax1x.com/2019/05/16/E77eAJ.png" alt=""></p><hr><h2 id="编译安装-python-3"><a href="#编译安装-python-3" class="headerlink" title="编译安装 python 3"></a>编译安装 python 3</h2><p>之前有编译安装 python3 的重新进入源码目录编译安装，没有的需下载源码。</p><h3 id="下载-python-源码"><a href="#下载-python-源码" class="headerlink" title="下载 python 源码"></a>下载 python 源码</h3><p>用 wget 从官网下载源码，最低可选择版本 python3.5。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz</span><br></pre></td></tr></table></figure><h3 id="解压，配置"><a href="#解压，配置" class="headerlink" title="解压，配置"></a>解压，配置</h3><p>下载完成后解压，然后修改setup.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.6.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.6.4</span><br><span class="line">vim setup.py</span><br></pre></td></tr></table></figure><p>查找 <code>sqlite_inc_paths</code> 新增</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'/usr/local/sqlite/include'</span>,</span><br><span class="line"><span class="string">'/usr/local/sqlite/include/sqlite3'</span>,</span><br></pre></td></tr></table></figure><p>完成后如下</p><p><a href="https://imgchr.com/i/E77YAH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/16/E77YAH.png" alt=""></a></p><p>保存并退出。</p><h3 id="编译，安装"><a href="#编译，安装" class="headerlink" title="编译，安装"></a>编译，安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-loadable-sqlite-extensions --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="建立软链"><a href="#建立软链" class="headerlink" title="建立软链"></a>建立软链</h3><p>建立 python3 和 pip3 的软链（安装过 python3 的不需要再建软链）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>建立软链后输入 python3 即可进入 python3 解释器，同时你还可以输入 python 或 python2 进入 python2 解释器，二者可以共存。</p><hr><h2 id="下载-PT-Gen"><a href="#下载-PT-Gen" class="headerlink" title="下载 PT-Gen"></a>下载 PT-Gen</h2><p>lnmp 新建主机，设置网站根目录和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p>进入网站根目录并下载程序源码, v0.3.5 用户先杀掉uwsig进程和删除网站目录里面的 PT-Gen。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/api.example.com</span><br><span class="line">wget https://github.com/BFDZ/PT-Gen/archive/0.4.5.tar.gz</span><br><span class="line">tar xzvf 0.4.5.tar.gz</span><br><span class="line">mv PT-Gen*/* ./</span><br></pre></td></tr></table></figure></p><p>修改数据库文件权限,使 www 用户可以读写数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 database/</span><br></pre></td></tr></table></figure></p><p>安装依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirement.txt</span><br></pre></td></tr></table></figure><hr><h2 id="安装，配置-uWSGI"><a href="#安装，配置-uWSGI" class="headerlink" title="安装，配置 uWSGI"></a>安装，配置 uWSGI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3  install uwsgi</span><br></pre></td></tr></table></figure><p>新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini</span><br></pre></td></tr></table></figure><p>填入此配置文件内容并保存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[uwsgi]</span></span><br><span class="line"><span class="comment"># 采用sock方式通信，程序在启动时会自己创建这个文件</span></span><br><span class="line"><span class="string">socket</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.sock</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.pid</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 指向网站目录</span></span><br><span class="line"><span class="string">chdir</span> <span class="string">=</span> <span class="string">/home/wwwroot/api.example.com</span></span><br><span class="line"><span class="comment"># python 启动程序文件</span></span><br><span class="line"><span class="string">wsgi-file</span> <span class="string">=</span> <span class="string">app.py</span></span><br><span class="line"><span class="comment"># python 程序内用以启动的 application 变量名</span></span><br><span class="line"><span class="string">callable</span> <span class="string">=</span> <span class="string">app</span></span><br><span class="line"><span class="comment"># 进程数，可按服务器配置和负载情况调高</span></span><br><span class="line"><span class="string">processes</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 线程数</span></span><br><span class="line"><span class="string">threads</span> <span class="string">=</span> <span class="number">8</span></span><br><span class="line"><span class="comment"># 开启master，程序会进入后台运行模式</span></span><br><span class="line"><span class="string">master</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大请求数，在指定数量的管理请求后重载worker</span></span><br><span class="line"><span class="string">max-requests</span> <span class="string">=</span> <span class="number">6000</span></span><br><span class="line"><span class="comment"># 指定启动用户</span></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 指定用户组</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line"><span class="string">daemonize</span> <span class="string">=</span> <span class="string">/var/log/uwsgi.log</span></span><br><span class="line"><span class="string">disable-logging</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>建议不要使用 root 用户启动 uwsgi，保持和 nginx 的启动用户一样。lnmp 中 nginx 进程是属于www ，所以 uwsgi 的 uid/gid 也要指定为 www 用户。</p><hr><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><p>修改 nginx 网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/vhost/api.example.com.conf</span><br></pre></td></tr></table></figure><p> <code>location /</code> 段添加 uwsgi 相关配置, v0.3.5 用户将 <code>run:app</code> 改成 <code>app</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">    include      uwsgi_params;</span><br><span class="line">    uwsgi_pass   unix:/tmp/uwsgi.sock;</span><br><span class="line">    uwsgi_param  UWSGI_CHDIR  /home/wwwroot/api.example.com;</span><br><span class="line">    uwsgi_param  UWSGI_SCRIPT app;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx reload</span><br></pre></td></tr></table></figure><hr><h2 id="运行后端"><a href="#运行后端" class="headerlink" title="运行后端"></a>运行后端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --ini config.ini</span><br></pre></td></tr></table></figure><p>这时访问 api 的域名，会出现提示 <code>Hello world~</code> ，表示程序已成功运行。</p><p>其他操作：</p><ul><li>重载：<code>uwsgi --reload /tmp/uwsgi.pid</code></li><li>停止：<code>uwsgi --stop /tmp/uwsgi.pid</code></li></ul><h2 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a>自动更新</h2><p>后台自动更新数据库需要在 crontab 中添加，建议10分钟更新5个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>最后一行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * <span class="built_in">cd</span> /home/wwwroot/api.example.com/ &amp;&amp; /usr/<span class="built_in">local</span>/bin/flask update_infogen</span><br></pre></td></tr></table></figure><h2 id="修改前端页面-api"><a href="#修改前端页面-api" class="headerlink" title="修改前端页面 api"></a>修改前端页面 api</h2><p>PT-Gen 的 api 的路径为 <code>api.example.com/infogen</code> ,前端页面修改此处的api网址为自己的即可。</p><p><img src="https://s2.ax1x.com/2019/05/18/EXJHjP.md.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PT-Gen 0.4.4 版，相比于之前的 0.3.5 版，有很大的改动：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加了数据库缓存，所以服务器必须要安装 sqlite3。&lt;/li&gt;
&lt;li&gt;5月13日豆瓣电影的公共API下线，导致 PT-Gen v0.4.2 及之前的版本无法获取电影数据，现在通过在前端页面和后端程序加入 apikey 才解决这个问题。&lt;/li&gt;
&lt;li&gt;修改了 API 路径，由原来的 &lt;code&gt;/movieinfo/gen&lt;/code&gt; 改为 &lt;code&gt;/infogen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;去掉了 run.py&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议之前使用 v0.3.5 的朋友按此教程升级到 v0.4.5，同时前端页面也要注意更新。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;服务器必备的软件环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;python3.5 或者更高&lt;/li&gt;
&lt;li&gt;pip3&lt;/li&gt;
&lt;li&gt;uWSGI&lt;/li&gt;
&lt;li&gt;sqlite3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="pt" scheme="https://www.bfdz.ink/tags/pt/"/>
    
  </entry>
  
  <entry>
    <title>权力的游戏第八季第一集</title>
    <link href="https://www.bfdz.ink/2019/04/15/125/"/>
    <id>https://www.bfdz.ink/2019/04/15/125/</id>
    <published>2019-04-15T15:40:00.000Z</published>
    <updated>2019-04-16T14:18:09.988Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>game.of.thrones.s08e01.repack.1080p.web.h264-memento<br>衣柜字幕组外挂字幕</p></blockquote><a id="more"></a><p><img src="https://img01.sogoucdn.com/app/a/100520146/44C264F6A516085829C54F9ED4582AEA" alt=""></p><p>◎译　　名　权力的游戏 第八季 / Game of Thrones: The Final Season / 权游8<br>◎片　　名　Game of Thrones Season 8<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　剧情 / 奇幻 / 冒险<br>◎语　　言　英语<br>◎上映日期　2019-04-14(美国)<br>◎IMDb评分  9.9/10 from 1975 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt5924366" target="_blank" rel="noopener">http://www.imdb.com/title/tt5924366</a><br>◎豆瓣评分　9.8/10 from 17498 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26584183/" target="_blank" rel="noopener">https://movie.douban.com/subject/26584183/</a><br>◎集　　数　6<br>◎片　　长　60分钟(E1-E2) / 80分钟(E3-E6)<br>◎导　　演　米格尔·萨普什尼克 Miguel Sapochnik / 大卫·努特尔 David Nutter / 戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss<br>◎编　　剧　戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss / 乔治·马丁 George R.R. Martin<br>◎主　　演　艾米莉亚·克拉克 Emilia Clarke<br>　　　　　　基特·哈灵顿 Kit Harington<br>　　　　　　彼特·丁拉基 Peter Dinklage<br>　　　　　　苏菲·特纳 Sophie Turner<br>　　　　　　麦茜·威廉姆斯 Maisie Williams<br>　　　　　　琳娜·海蒂 Lena Headey<br>　　　　　　伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright<br>　　　　　　尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau<br>　　　　　　约翰·C·布莱德利 John C. Bradley<br>　　　　　　阿尔菲·艾伦 Alfie Allen<br>　　　　　　皮鲁·埃斯贝克 Pilou Asbæk<br>　　　　　　格温多兰·克里斯蒂 Gwendoline Christie<br>　　　　　　利亚姆·坎宁安 Liam Cunningham<br>　　　　　　娜塔莉·伊曼纽尔 Nathalie Emmanuel<br>　　　　　　康勒斯·希尔 Conleth Hill<br>　　　　　　罗伊·麦克凯恩 Rory McCann<br>　　　　　　杰罗姆·弗林 Jerome Flynn<br>　　　　　　克里斯托弗·海维尤 Kristofer Hivju<br>　　　　　　约瑟夫·戴浦西 Joe Dempsie<br>　　　　　　雅各布·安德森 Jacob Anderson<br>　　　　　　伊恩·格雷 Iain Glen<br>　　　　　　安东·莱瑟 Anton Lesser<br>　　　　　　理查德·多默 Richard Dormer<br>　　　　　　杰玛·韦兰 Gemma Whelan<br>　　　　　　本·克朗普顿 Ben Crompton<br>　　　　　　哈弗波·朱利尔斯·比昂森 Hafþór Júlíus Björnsson<br>　　　　　　丹尼尔·波特曼 Daniel Portman<br>　　　　　　鲁珀特·范西塔特 Rupert Vansittart<br>　　　　　　贝拉·拉姆齐 Bella Ramsey</p><p>◎标　　签　权力的游戏 | HBO | 美剧 | 史诗 | 魔幻 | 经典 | 奇幻 | 美国</p><p>◎简　　介  </p><p>　　HBO剧集《权力的游戏》第八季将于2019年4月14日播出，本季共6集。<br>故事发展至第八季，重返临冬城的琼恩·雪诺（基特·哈灵顿 Kit Harington 饰）在布兰·史塔克（伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright 饰）口中得知了自己身世的秘密，让他与丹妮莉丝·塔格利安（艾米莉亚·克拉克 Emilia Clarke 饰）的关系蒙上了一层冰霜。<br>詹姆·兰尼斯特（尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau 饰）试图召集河间地驻军北伐异鬼，却发现艾德慕·徒利（托比亚斯·门基斯 Tobias Menzies 饰）已经包围你了奔流城。<br>攸伦·葛雷乔伊（皮鲁·埃斯贝克 Pilou Asbæ 饰）将黄金团带至君临获取了瑟曦（琳娜·海蒂 Lena Headey 饰）的信任，而实际上，他已经与无面者贾昆·赫加尔（汤姆·拉斯齐哈 Tom Wlaschiha 饰）私下达成了秘密协议。</p><p>◎获奖情况  </p><p>　　第5届豆瓣电影年度榜单(2018)<br>　　最值得期待的剧集(提名)</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;game.of.thrones.s08e01.repack.1080p.web.h264-memento&lt;br&gt;衣柜字幕组外挂字幕&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="欧美剧" scheme="https://www.bfdz.ink/tags/%E6%AC%A7%E7%BE%8E%E5%89%A7/"/>
    
      <category term="HBO" scheme="https://www.bfdz.ink/tags/HBO/"/>
    
  </entry>
  
  <entry>
    <title>爱，死亡和机器人 LOVE DEATH + ROBOTS</title>
    <link href="https://www.bfdz.ink/2019/04/07/124/"/>
    <id>https://www.bfdz.ink/2019/04/07/124/</id>
    <published>2019-04-07T15:13:00.000Z</published>
    <updated>2019-04-07T15:23:15.121Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内封多国字幕</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2019/04/07/5caa133ce4fca.jpg" alt="love_death_and_robots"></p><p>◎译　　名　爱，死亡和机器人 / LOVE DEATH + ROBOTS / 爱 x 死 x 机器人(台) / 爱、死亡 &amp; 机器人 / 爱情，死亡与机器人 / 爱，死亡与机器人 / 爱．死．机械人(港)<br>◎片　　名　Love, Death &amp; Robots<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　喜剧 / 科幻 / 动画 / 恐怖 / 奇幻<br>◎语　　言　英语<br>◎上映日期　2019-03-15(美国)<br>◎IMDb评分  8.8/10 from 36219 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt9561862" target="_blank" rel="noopener">http://www.imdb.com/title/tt9561862</a><br>◎豆瓣评分　9.2/10 from 146924 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/30424374/" target="_blank" rel="noopener">https://movie.douban.com/subject/30424374/</a><br>◎集　　数　18<br>◎片　　长　15分钟<br>◎导　　演　维克多·马尔多纳多 Víctor Maldonado / 加布里埃尔·彭纳基奥利 Gabriele Pennacchioli / 阿尔弗雷多·托雷斯 Alfredo Torres / 弗兰克·巴尔森 Franck Balson / 阿尔贝托·米尔戈 Alberto Mielgo / 蒂姆·米勒 Tim Miller / 达米安·纽诺 Damian Nenow / 杰罗姆·陈 Jerome Chen / 维塔利·舒舒科 Vitaliy Shushko / 欧文·沙利文 Owen Sullivan / 罗伯特·瓦利 Robert Valley / 戴夫·威尔逊 Dave Wilson / 乔恩·叶 Jon Yeo / 哈维尔·雷西奥·格雷西亚 Javier Recio Gracia<br>◎编　　剧　蒂姆·米勒 Tim Miller / 约翰·斯卡尔齐 John Scalzi / 阿拉斯泰尔·雷诺兹 Alastair Reynolds / 彼得·F·汉密尔顿 Peter F. Hamilton / 马尔科·克鲁斯 Marko Kloos / 乔·R·兰斯代尔 Joe R. Lansdale / 贾尼斯·罗伯逊 Janis Robertson<br>◎主　　演　斯科特·怀特 Scott Whyte<br>　　　　　　诺兰·诺斯 Nolan North<br>　　　　　　马修·杨·金 Matthew Yang King<br>　　　　　　迈克尔·本耶尔 Michael Benyaer<br>　　　　　　乔什·布雷纳 Josh Brener<br>　　　　　　艾莉·康德伦 Elly Condron<br>　　　　　　亨利·杜思韦特 Henry Douthwaite<br>　　　　　　亚伦·希梅尔斯坦 Aaron Himelstein<br>　　　　　　斯蒂芬·卡皮契奇 Stefan Kapičić<br>　　　　　　莫里斯·拉马奇 Maurice LaMarche<br>　　　　　　艾米丽·奥布莱恩 Emily O’Brien<br>　　　　　　凯文·迈克尔·理查德森 Kevin Michael Richardson<br>　　　　　　海伦·萨德勒 Helen Sadler<br>　　　　　　伊兰妮·谭 Elaine Tan<br>　　　　　　柯克·桑顿 Kirk Thornton<br>　　　　　　萨米拉·威利 Samira Wiley<br>　　　　　　玛丽·伊丽莎白·温斯特德 Mary Elizabeth Winstead<br>　　　　　　卡洛斯·阿拉斯拉奇 Carlos Alazraqui<br>　　　　　　亚当·巴特利 Adam Bartley<br>　　　　　　托弗·戈瑞斯 Topher Grace<br>　　　　　　尤里·洛文塔尔 Yuri Lowenthal<br>　　　　　　克里斯托弗·L·帕森 Christopher L. Parson<br>　　　　　　弗雷德·塔特西奥 Fred Tatasciore<br>　　　　　　布鲁斯·托马斯 Bruce Thomas<br>　　　　　　艾玛·索内特 Emma Thornett<br>　　　　　　加里·安东尼·威廉斯 Gary Anthony Williams<br>　　　　　　盖瑞·科尔 Gary Cole<br>　　　　　　约翰·迪·玛吉欧 John Di Maggio<br>　　　　　　克里斯·帕内尔 Chris Parnell<br>　　　　　　吉姆·皮里 Jim Pirri<br>　　　　　　内斯特·塞拉诺 Nestor Serrano<br>　　　　　　吉尔·塔利 Jill Talley<br>　　　　　　劳拉·沃德尔 Laura Waddell<br>　　　　　　泰姆·温特斯 Time Winters<br>　　　　　　格文多林·叶 Gwendoline Yeo<br>　　　　　　奥米德·阿布塔西 Omid Abtahi<br>　　　　　　安东尼奥·阿尔瓦雷斯 Antonio Alvarez<br>　　　　　　布莱恩·布鲁姆 Brian Bloom<br>　　　　　　格雷厄姆·汉密尔顿 Graham Hamilton<br>　　　　　　迪特尔·詹森 Dieter Jansen<br>　　　　　　安德烈·索格利扎索 André Sogliuzzo</p><p>◎标　　签　科幻 | netflix | 动画 | 短片集 | 美国 | 赛博朋克 | 2019 | 奇幻</p><p>◎简　　介  </p><p>　　这部名为《爱，死亡和机器人》的动画短片合集由18部分组成，每部分时长5-15分钟。这些短片涵盖多种类型，包括科幻、奇幻、恐怖和喜剧；这些短片也将包含多种形式，包括传统2D和3DCGI短片。<br>18部短片导演列表：<br>1.桑尼的优势 Dave Wilson<br>2.三个机器人 Víctor Maldonado&amp;Alfredo Torres<br>3.证人 Alberto Mielgo<br>4.机动装甲 Franck Balson<br>5.噬魂者 Owen Sullivan<br>6.当酸奶统治世界 Victor Maldonado &amp; Alfredo Torres<br>7.裂缝以外 Leon Berlue,Dominique Boidin,Remi Kozyra,Maxime Luere<br>8.祝有好的收获 Oliver Thomas<br>9.垃圾场 Javier Recio Gracia<br>10.变形者 Gabriele Pennacchioli<br>11.帮手 Jon Yeo<br>12.古鱼复苏 Damian Nenow<br>13.新运十三 Jerome Chen<br>14.齐马的作品 Robert Valley<br>15.盲点 Vitality Shushko<br>16.冰河时代 Tim Miller<br>17.不一样的历史 Victor Maldonado &amp; Alfredo Torres<br>18.秘密战争 Istvan Zorkoczy</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;内封多国字幕&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="Netflix" scheme="https://www.bfdz.ink/tags/Netflix/"/>
    
      <category term="欧美剧" scheme="https://www.bfdz.ink/tags/%E6%AC%A7%E7%BE%8E%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>第10放映室《影话2018》</title>
    <link href="https://www.bfdz.ink/2019/02/09/123/"/>
    <id>https://www.bfdz.ink/2019/02/09/123/</id>
    <published>2019-02-09T06:02:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>聚焦2018中国银幕，盘点全年热门影片。一年一度，妙语酷评，第10放映室传统保留节目《影话2018》，除夕至初六，每天中午12:26，陪您一起边吃边看过大年！</p><p>每天同步更新下载链接:<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;聚焦2018中国银幕，盘点全年热门影片。一年一度，妙语酷评，第10放映室传统保留节目《影话2018》，除夕至初六，每天中午12:26，陪您一起边吃边看过大年！&lt;/p&gt;
&lt;p&gt;每天同步更新下载链接:&lt;a href=&quot;https://daye-my.sharepoint.com
      
    
    </summary>
    
      <category term="电视节目" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E8%8A%82%E7%9B%AE/"/>
    
    
      <category term="第10放映室" scheme="https://www.bfdz.ink/tags/%E7%AC%AC10%E6%94%BE%E6%98%A0%E5%AE%A4/"/>
    
      <category term="CCTV10" scheme="https://www.bfdz.ink/tags/CCTV10/"/>
    
  </entry>
  
  <entry>
    <title>种子文件编辑工具 Torrent File Editor</title>
    <link href="https://www.bfdz.ink/2019/02/09/122/"/>
    <id>https://www.bfdz.ink/2019/02/09/122/</id>
    <published>2019-02-09T03:55:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Torrent File Editor 是一款开源免费的种子文件编辑工具，支持 Windows 和 Mac 平台，以及自带中文语言。</p><p>下载地址：<a href="https://sourceforge.net/projects/torrent-file-editor/" target="_blank" rel="noopener">https://sourceforge.net/projects/torrent-file-editor/</a></p><a id="more"></a><hr><p>特点：</p><ul><li>新建 .torrent 文件</li><li>通过简单、人性化的界面编辑种子文件</li><li>以 JSON 格式编辑 .torrent 文件</li><li>添加，删除和交换种子文件内的文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Torrent File Editor 是一款开源免费的种子文件编辑工具，支持 Windows 和 Mac 平台，以及自带中文语言。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://sourceforge.net/projects/torrent-file-editor/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://sourceforge.net/projects/torrent-file-editor/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.bfdz.ink/categories/Windows/"/>
    
    
      <category term="Torrent File Editor" scheme="https://www.bfdz.ink/tags/Torrent-File-Editor/"/>
    
  </entry>
  
  <entry>
    <title>Ampache 私人云音乐搭建和使用</title>
    <link href="https://www.bfdz.ink/2019/01/13/121/"/>
    <id>https://www.bfdz.ink/2019/01/13/121/</id>
    <published>2019-01-13T11:00:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ampache 是一个​基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何平台的网络设备访问自己的视频和音乐。</p><p>和 Plex 相比，这款程序全部功能都是免费开源的，并且支持包括 Plex 在内的多种客户端 API 和网络传输协议。</p><p>项目网址：<a href="https://github.com/ampache/ampache" target="_blank" rel="noopener">https://github.com/ampache/ampache</a></p><a id="more"></a><hr><hr><h1 id="服务端搭建"><a href="#服务端搭建" class="headerlink" title="服务端搭建"></a>服务端搭建</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li><p>web 服务程序，下列之一</p><ul><li>Apache</li><li>lighttpd</li><li>nginx</li><li>IIS</li></ul></li><li><p>PHP 5.6 或者更高版本</p></li><li><p>PHP 模块：</p><ul><li>PDO</li><li>PDO_MYSQL</li><li>hash</li><li>session</li><li>json</li><li>simplexml (可选)</li><li>curl (可选)</li><li>对于 FreeBSD 系统必须加载一下模块:<ul><li>php-xml</li><li>php-dom</li></ul></li></ul></li><li><p>MySQL 5.x</p></li></ul><p>本文的演示环境：</p><ul><li>lnmp 1.5</li><li>vps<ul><li>Debian 7</li><li>1 CPU</li><li>512 MB 内存</li><li>20G 硬盘</li></ul></li></ul><p>linux 服务器上推荐使用 <a href="https://lnmp.org/" target="_blank" rel="noopener">lnmp</a> 安装环境。如果只是用来做音乐服务器，对 vps 的配置要求不高，因为音乐文件的体积也不大，码率要求也低。</p><hr><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>安装完 lnmp ，然后创建网站目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost list</span><br></pre></td></tr></table></figure><p>下载程序，注意不要 git clone ，要从 Release 下载最新版本完整程序安装包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/test.nas.ink/</span><br><span class="line">wget https://github.com/ampache/ampache/releases/download/3.9.0/ampache-3.9.0_all.zip</span><br><span class="line">unzip ampache-3.9.0_all.zip</span><br></pre></td></tr></table></figure><p>修改 config 目录权限，确保安装时配置文件可写入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R config/</span><br></pre></td></tr></table></figure></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h3><p>访问你配置的网站域名，如果没出错，会出现这个安装页面。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz538xki2lj20zk0i6q4e.jpg" alt="image"></p><p>Ampache 支持包括中文在内的多种语言。</p><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><p>PHP 整型大小一项会有警告，但貌似影响可以忽略不计。如果其他项没问题，点击继续。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz53bur38kj20yv184nb8.jpg" alt="image"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>填写端口和密码，然后点击插入数据库。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53guvyb2j20yo0q7goh.jpg" alt="image"></p><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><p>如果程序安装包解压在网站根目录，web 路径留空，不用填。<br><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53jsqp3qj20wd0m5775.jpg" alt=""></p><p>填写 MySQL 用户名和密码</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53mpe9m9j20x80krwi4.jpg" alt="image"></p><p>其他设置都保存默认即可，除非你清楚选项的作用。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz53pfmrfgj20x00dumys.jpg" alt="image"></p><p>点击查看文件栏，然后点击第一行配置文件后面的写。如果提示写入错误，请检查 config 目录权限。</p><h3 id="配置管理员用户名和密码"><a href="#配置管理员用户名和密码" class="headerlink" title="配置管理员用户名和密码"></a>配置管理员用户名和密码</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53r2qkrcj20w80gpabq.jpg" alt="image"></p><h3 id="检查更新"><a href="#检查更新" class="headerlink" title="检查更新"></a>检查更新</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53u4ma9kj20x20ni76v.jpg" alt="image"></p><p>目前是最新版，无需更新。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53ujksyej20wb09d3zc.jpg" alt="image"></p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p>现在已经安装成功，返回网站首页即可使用了。<br><img src="https://ws1.sinaimg.cn/large/92253953gy1fz53w6565qj20ny0jrdgr.jpg" alt="image"></p><hr><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p>目录就是服务器上存储音乐文件的路径，设置目录后 Ampache 可以扫描路径下的音乐文件，将歌曲信息添加到程序的曲库里。</p><p>首先在服务器上创建一个目录，用于存放音乐文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/wwwroot/test.nas.ink/music</span><br></pre></td></tr></table></figure><p>使用 ftp 上传文件到目录。因为 linux 系统没装中文语言，上传后文件名会乱码，所以我都是把文件压缩后上传，再解压。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz54bn55kmj213m0mbafh.jpg" alt="image"></p><p>登录 ampache 后台，第一次进入会提示创建目录。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54de43bjj21h50pn76u.jpg" alt="image"></p><p>或者点左侧管理员图标，也可添加目录。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz54nrp3l3j21hc0gr75x.jpg" alt=""></p><p>目录名称随意填写，目录类型选 local 。文件名样式按照你上传的音乐文件样式修改，需和你上传的音乐文件名样式对应，右边有参数说明。目录样式按实际情况修改。路径填写你之前创建的目录，注意是绝对路径。然后点击添加目录。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54feb3jsj21hb0njq81.jpg" alt="image"></p><h2 id="扫描目录"><a href="#扫描目录" class="headerlink" title="扫描目录"></a>扫描目录</h2><p>第一次添加目录会自动扫描一次，以后上传了新歌可以在目录列表里手动扫描。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54r581c0j21ha0l3n05.jpg" alt="image"></p><p>扫描完以后，在歌曲标题里面，点击播放按钮可通过网页播放歌曲。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54pz036rj21hc0q477g.jpg" alt=""></p><h2 id="流式播放"><a href="#流式播放" class="headerlink" title="流式播放"></a>流式播放</h2><p>ampache 的网页播放十分简陋，并且不知什么原因 flac 格式无法播放。ampache 能够覆盖全平台的方式是网络串流。</p><p>点击网页右侧的播放方式选项，默认选项：网络播放器，即通过网页播放。现在改成 流。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz57aiq8yhj21hc0q9dj5.jpg" alt="image"></p><p>然后再点击歌曲的播放按钮，就不会再网页播放，而是会提示下载一个 m3u 文件。接触过直播源或者在线视频抓取的同学应该知道 m3u8 这种文件，m3u 是一种 Windows-1252格式纯文本文件，可以指定一个或多个多媒体文件的位置，而 M3U8 就是 UTF-8 编码的 M3U。</p><p><img src="https://wx2.sinaimg.cn/large/92253953gy1fz54q4fhy7j21h70nx786.jpg" alt=""></p><p>下载后，即可使用本地支持 m3u 的播放器打开。列如 VLC、foobar2000。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><p>foobar2000 打开，需要播放过一次才会显示歌曲名等信息，不知道是不是我的版本有问题。所以还是建议用 VLC 播放，VLC 在几乎所有平台是都有对应安装包。</p><h2 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h2><p>如果想把全部歌曲生成 m3u 添加到本地播放器曲库，可以通过创建智能播放列表的方式，将全部歌曲生成一个 m3u 文件。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671huiqj21gq0g9tao.jpg" alt="image"></p><p>不用添加任何规则，点击创建就是把所以歌曲保存成列表。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671ktevj21h50h70uy.jpg" alt="image"></p><p>然后点播放按钮下载 m3u 文件。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz5671ogbyj21gp0ecgnp.jpg" alt="image"></p><p>把 m3u 文件拖入 VLC 的媒体库，点击展开列表。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><h2 id="key-的有效期"><a href="#key-的有效期" class="headerlink" title="key 的有效期"></a>key 的有效期</h2><p>程序默认设置 key 的有效期是 7 个小时，也就是添加到本地播放器媒体库的歌曲 7 个小时后会无法播放。</p><p>在管理员，System，将 分享链接的默认有效期改成 0 ，本地的 m3u 歌曲列表就不会失效了。</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz56denyadj21gq0p9jwv.jpg" alt="image"></p><p>如果再要使其失效，可以手动刷新 API key</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkbtwhj21gx0daabw.jpg" alt="image"></p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkf7clj21hb0jl41g.jpg" alt="image"></p><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>Ampache 还有很多功能我没搞清楚怎么用，目前唯一知道的是采用流媒体方式播放，MPDroid 没搞明白怎么配置。在安卓上有个应用叫 Power Ampache ，可以访问 Ampache 服务器，但是使用体验十分差。Plex 做的不错，但移动端是收费的。找了一圈发现还是 VLC 最强大。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ampache 是一个​基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何平台的网络设备访问自己的视频和音乐。&lt;/p&gt;
&lt;p&gt;和 Plex 相比，这款程序全部功能都是免费开源的，并且支持包括 Plex 在内的多种客户端 API 和网络传输协议。&lt;/p&gt;
&lt;p&gt;项目网址：&lt;a href=&quot;https://github.com/ampache/ampache&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ampache/ampache&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="音乐" scheme="https://www.bfdz.ink/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="Ampache" scheme="https://www.bfdz.ink/tags/Ampache/"/>
    
  </entry>
  
  <entry>
    <title>2019 年十大热门 BT 站</title>
    <link href="https://www.bfdz.ink/2019/01/08/120/"/>
    <id>https://www.bfdz.ink/2019/01/08/120/</id>
    <published>2019-01-08T07:25:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>2019 年初访问量大的BT站有哪些？延续前几年的传统，我们统计发现 YTS 领先了 The Pirate Bay。在经历了动荡的一年后，BT 站排名相对比较稳定。</p><p>虽然现在流媒体风靡一时，但 BT 站仍然很热门。</p><p>长期以来，海盗湾都是 BT 站中无可争议的第一。但今年年初 YTS 和 1337x 的访问量超过了海盗湾。</p><p>海盗湾的访问量下滑可能归因于过去几个月的频繁宕机和接连的问题。但对于许多人来说，海盗湾仍然是首选站点，或者过几个月海盗湾重新获得领先地位，也不足为奇。</p><p>今年的名单出现了一名“新人”。TorrentDownloads 去年缺席后，又回来了，该站取代了去年 iDope 的位置。</p><p>因为本文主要针对英语用户和面向国际受众的 BT 站进行排名，所以即使 <a href="https://rutracker.org/forum/index.php" target="_blank" rel="noopener">RuTracker</a>,<a href="https://dytt8.net/" target="_blank" rel="noopener">Dytt8</a>,<a href="https://www.elitetorrent.biz/" target="_blank" rel="noopener">EliteTorrent</a>,<a href="https://www.torrent9.uno/" target="_blank" rel="noopener">Torrent9</a> 符合流量条件，也不会包括在内。</p><p>以下是新年伊始访问量最大的 BT 站的榜单，这个排行榜是基于 Alexa 的数据。</p><a id="more"></a><hr><h2 id="1、YTS-AM"><a href="#1、YTS-AM" class="headerlink" title="1、YTS.AM"></a>1、YTS.AM</h2><p>网址: <a href="http://yts.am/" target="_blank" rel="noopener">http://yts.am/</a></p><p>这个网站是原 YTS/YIFY 的非官方继任者。</p><h2 id="2、1337X"><a href="#2、1337X" class="headerlink" title="2、1337X"></a>2、1337X</h2><p>网址：<a href="http://1337x.to/" target="_blank" rel="noopener">http://1337x.to/</a></p><p>1337X 多年来一直稳居榜单之中，该站有专门的发布组，提供最新的资源。尽管多个国家的 ISP 对其进行封锁，但其访问量仍在增长。</p><h2 id="3、海盗湾"><a href="#3、海盗湾" class="headerlink" title="3、海盗湾"></a>3、海盗湾</h2><p>网址：<a href="http://thepiratebay.org/" target="_blank" rel="noopener">http://thepiratebay.org/</a></p><p>海盗湾去年满 15 周岁，是这个榜单里最古老的 BT 站。如果我们把来自代理的流量也计算在内，该站可能会排在第一。但因为频繁宕机和接连的问题，该站暂列第三。</p><h2 id="4、RARBG"><a href="#4、RARBG" class="headerlink" title="4、RARBG"></a>4、RARBG</h2><p>网址：<a href="http://rarbg.to/" target="_blank" rel="noopener">http://rarbg.to/</a></p><p>RARBG 成立于 2008 年，该站在电影和电视剧方面更新速度较快。RARBG 与去年相比下降了两个名次。该站有多个域名，这里选取访问量最大的域名进行排名。</p><h2 id="5、Torrentz2"><a href="#5、Torrentz2" class="headerlink" title="5、Torrentz2"></a>5、Torrentz2</h2><p>网址：<a href="https://torrentz2.eu/" target="_blank" rel="noopener">https://torrentz2.eu/</a></p><p>Torrentz2 是 Torrentz.eu 的仿站，虽然去年发生过一些问题，但该站仍然很热门。</p><h2 id="6、NYAA-SI"><a href="#6、NYAA-SI" class="headerlink" title="6、NYAA.SI"></a>6、NYAA.SI</h2><p>网址：<a href="https://nyaa.si/" target="_blank" rel="noopener">https://nyaa.si/</a></p><p>NYAA.si 是之前关站重生后的网站。该站去年被 Cloudflare 停过机，但很快切换了服务商。</p><h2 id="7、LIMETORRENTS"><a href="#7、LIMETORRENTS" class="headerlink" title="7、LIMETORRENTS"></a>7、LIMETORRENTS</h2><p>网址：<a href="https://www.limetorrents.info/" target="_blank" rel="noopener">https://www.limetorrents.info/</a></p><p>Limetorrents 是一个建站时间超过五年的 BT 站。该站几个月前换了域名，并加入了 CDN 以应对各种拦截。</p><h2 id="8、ZOOQLE"><a href="#8、ZOOQLE" class="headerlink" title="8、ZOOQLE"></a>8、ZOOQLE</h2><p>网址：<a href="https://zooqle.com/" target="_blank" rel="noopener">https://zooqle.com/</a></p><p>Zooqle 拥有近 380 万个种子，排名一直保持在前 10。该站官方宣传自己是 Bitsnoop 的替代网站。</p><h2 id="9、EZTV-AG"><a href="#9、EZTV-AG" class="headerlink" title="9、EZTV.AG"></a>9、EZTV.AG</h2><p>网址：<a href="http://eztv.ag/" target="_blank" rel="noopener">http://eztv.ag/</a></p><p>网站内容主要是英美剧资源。域名换了很多次，目前网站运营团队不知是不是原来的。几个月前，发布组 ETTV 指责该站盗取他们的种子改名发布。</p><h2 id="10、TORRENTDOWNLOADS"><a href="#10、TORRENTDOWNLOADS" class="headerlink" title="10、TORRENTDOWNLOADS"></a>10、TORRENTDOWNLOADS</h2><p>网址：<a href="https://www.torrentdownloads.me/" target="_blank" rel="noopener">https://www.torrentdownloads.me/</a></p><p>TorrentDownloads 已经建站多年，去年缺席前 10 以后，今年凭借每月数百万的用户访问量回到了榜单。</p><hr><p>via:<a href="https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2019/" target="_blank" rel="noopener">Top 10 Most Popular Torrent Sites of 2019</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019 年初访问量大的BT站有哪些？延续前几年的传统，我们统计发现 YTS 领先了 The Pirate Bay。在经历了动荡的一年后，BT 站排名相对比较稳定。&lt;/p&gt;
&lt;p&gt;虽然现在流媒体风靡一时，但 BT 站仍然很热门。&lt;/p&gt;
&lt;p&gt;长期以来，海盗湾都是 BT 站中无可争议的第一。但今年年初 YTS 和 1337x 的访问量超过了海盗湾。&lt;/p&gt;
&lt;p&gt;海盗湾的访问量下滑可能归因于过去几个月的频繁宕机和接连的问题。但对于许多人来说，海盗湾仍然是首选站点，或者过几个月海盗湾重新获得领先地位，也不足为奇。&lt;/p&gt;
&lt;p&gt;今年的名单出现了一名“新人”。TorrentDownloads 去年缺席后，又回来了，该站取代了去年 iDope 的位置。&lt;/p&gt;
&lt;p&gt;因为本文主要针对英语用户和面向国际受众的 BT 站进行排名，所以即使 &lt;a href=&quot;https://rutracker.org/forum/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RuTracker&lt;/a&gt;,&lt;a href=&quot;https://dytt8.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dytt8&lt;/a&gt;,&lt;a href=&quot;https://www.elitetorrent.biz/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;EliteTorrent&lt;/a&gt;,&lt;a href=&quot;https://www.torrent9.uno/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Torrent9&lt;/a&gt; 符合流量条件，也不会包括在内。&lt;/p&gt;
&lt;p&gt;以下是新年伊始访问量最大的 BT 站的榜单，这个排行榜是基于 Alexa 的数据。&lt;/p&gt;
    
    </summary>
    
      <category term="BT" scheme="https://www.bfdz.ink/categories/BT/"/>
    
    
      <category term="BT" scheme="https://www.bfdz.ink/tags/BT/"/>
    
      <category term="torrent" scheme="https://www.bfdz.ink/tags/torrent/"/>
    
  </entry>
  
</feed>
