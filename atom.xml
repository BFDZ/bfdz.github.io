<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BFDZ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.bfdz.ink/"/>
  <updated>2019-06-25T16:14:21.686Z</updated>
  <id>https://www.bfdz.ink/</id>
  
  <author>
    <name>BFDZ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PT-Gen v0.4.x 搭建教程</title>
    <link href="https://www.bfdz.ink/2019/05/15/126/"/>
    <id>https://www.bfdz.ink/2019/05/15/126/</id>
    <published>2019-05-15T11:08:00.000Z</published>
    <updated>2019-06-25T16:14:21.686Z</updated>
    
    <content type="html"><![CDATA[<p>PT-Gen 0.4.4 版，相比于之前的 0.3.5 版，有很大的改动：</p><ol><li>增加了数据库缓存，所以服务器必须要安装 sqlite3。</li><li>5月13日豆瓣电影的公共API下线，导致 PT-Gen v0.4.2 及之前的版本无法获取电影数据，现在通过在前端页面和后端程序加入 apikey 才解决这个问题。</li><li>修改了 API 路径，由原来的 <code>/movieinfo/gen</code> 改为 <code>/infogen</code></li><li>去掉了 run.py</li></ol><p>建议之前使用 v0.3.5 的朋友按此教程升级到 v0.4.5，同时前端页面也要注意更新。</p><hr><p>服务器必备的软件环境：</p><ul><li>nginx</li><li>python3.5 或者更高</li><li>pip3</li><li>uWSGI</li><li>sqlite3</li></ul><p>我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。</p><a id="more"></a><hr><p>如果你的 vps 系统是比较新的，例如 Debian 9 ，可能已经预置了 python3.5 和 sqlite3。可以通过下面的命令查看<code>_sqlite3.so</code>情况，如果有类似 <code>/usr/lib/python3.5/lib-dynload/_sqlite3.cpython-35m-x86_64-linux-gnu.so</code>这样的文件，则不需要再编译安装 sqlite3 和 python3。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name _sqlite*.so</span><br></pre></td></tr></table></figure><h2 id="编译安装-sqlite3"><a href="#编译安装-sqlite3" class="headerlink" title="编译安装 sqlite3"></a>编译安装 sqlite3</h2><ol><li>下载源码</li><li>解压</li><li>进入目录</li><li>编译</li><li>安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span><br><span class="line">tar xzvf sqlite-autoconf-3280000.tar.gz</span><br><span class="line"><span class="built_in">cd</span> sqlite-autoconf-3280000</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/sqlite</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装成功后，会出现类型下面的提示</p><p><img src="https://s2.ax1x.com/2019/05/16/E77eAJ.png" alt=""></p><hr><h2 id="编译安装-python-3"><a href="#编译安装-python-3" class="headerlink" title="编译安装 python 3"></a>编译安装 python 3</h2><p>之前有编译安装 python3 的重新进入源码目录编译安装，没有的需下载源码。</p><h3 id="下载-python-源码"><a href="#下载-python-源码" class="headerlink" title="下载 python 源码"></a>下载 python 源码</h3><p>用 wget 从官网下载源码，最低可选择版本 python3.5。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz</span><br></pre></td></tr></table></figure><h3 id="解压，配置"><a href="#解压，配置" class="headerlink" title="解压，配置"></a>解压，配置</h3><p>下载完成后解压，然后修改setup.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.6.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.6.4</span><br><span class="line">vim setup.py</span><br></pre></td></tr></table></figure><p>查找 <code>sqlite_inc_paths</code> 新增</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'/usr/local/sqlite/include'</span>,</span><br><span class="line"><span class="string">'/usr/local/sqlite/include/sqlite3'</span>,</span><br></pre></td></tr></table></figure><p>完成后如下</p><p><a href="https://imgchr.com/i/E77YAH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/16/E77YAH.png" alt=""></a></p><p>保存并退出。</p><h3 id="编译，安装"><a href="#编译，安装" class="headerlink" title="编译，安装"></a>编译，安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-loadable-sqlite-extensions --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="建立软链"><a href="#建立软链" class="headerlink" title="建立软链"></a>建立软链</h3><p>建立 python3 和 pip3 的软链（安装过 python3 的不需要再建软链）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>建立软链后输入 python3 即可进入 python3 解释器，同时你还可以输入 python 或 python2 进入 python2 解释器，二者可以共存。</p><hr><h2 id="下载-PT-Gen"><a href="#下载-PT-Gen" class="headerlink" title="下载 PT-Gen"></a>下载 PT-Gen</h2><p>lnmp 新建主机，设置网站根目录和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p>进入网站根目录并下载程序源码, v0.3.5 用户先杀掉uwsig进程和删除网站目录里面的 PT-Gen。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/api.example.com</span><br><span class="line">wget https://github.com/BFDZ/PT-Gen/archive/0.4.5.tar.gz</span><br><span class="line">tar xzvf 0.4.5.tar.gz</span><br><span class="line">mv PT-Gen*/* ./</span><br></pre></td></tr></table></figure></p><p>修改数据库文件权限,使 www 用户可以读写数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 database/</span><br></pre></td></tr></table></figure></p><p>安装依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirement.txt</span><br></pre></td></tr></table></figure><hr><h2 id="安装，配置-uWSGI"><a href="#安装，配置-uWSGI" class="headerlink" title="安装，配置 uWSGI"></a>安装，配置 uWSGI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3  install uwsgi</span><br></pre></td></tr></table></figure><p>新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini</span><br></pre></td></tr></table></figure><p>填入此配置文件内容并保存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[uwsgi]</span></span><br><span class="line"><span class="comment"># 采用sock方式通信，程序在启动时会自己创建这个文件</span></span><br><span class="line"><span class="string">socket</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.sock</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.pid</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 指向网站目录</span></span><br><span class="line"><span class="string">chdir</span> <span class="string">=</span> <span class="string">/home/wwwroot/api.example.com</span></span><br><span class="line"><span class="comment"># python 启动程序文件</span></span><br><span class="line"><span class="string">wsgi-file</span> <span class="string">=</span> <span class="string">app.py</span></span><br><span class="line"><span class="comment"># python 程序内用以启动的 application 变量名</span></span><br><span class="line"><span class="string">callable</span> <span class="string">=</span> <span class="string">app</span></span><br><span class="line"><span class="comment"># 进程数，可按服务器配置和负载情况调高</span></span><br><span class="line"><span class="string">processes</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 线程数</span></span><br><span class="line"><span class="string">threads</span> <span class="string">=</span> <span class="number">8</span></span><br><span class="line"><span class="comment"># 开启master，程序会进入后台运行模式</span></span><br><span class="line"><span class="string">master</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大请求数，在指定数量的管理请求后重载worker</span></span><br><span class="line"><span class="string">max-requests</span> <span class="string">=</span> <span class="number">6000</span></span><br><span class="line"><span class="comment"># 指定启动用户</span></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 指定用户组</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line"><span class="string">daemonize</span> <span class="string">=</span> <span class="string">/var/log/uwsgi.log</span></span><br><span class="line"><span class="string">disable-logging</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">vacuum</span> <span class="string">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>建议不要使用 root 用户启动 uwsgi，保持和 nginx 的启动用户一样。lnmp 中 nginx 进程是属于www ，所以 uwsgi 的 uid/gid 也要指定为 www 用户。</p><hr><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><p>修改 nginx 网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/vhost/api.example.com.conf</span><br></pre></td></tr></table></figure><p> <code>location /</code> 段添加 uwsgi 相关配置, v0.3.5 用户将 <code>run:app</code> 改成 <code>app</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">    include      uwsgi_params;</span><br><span class="line">    uwsgi_pass   unix:/tmp/uwsgi.sock;</span><br><span class="line">    uwsgi_param  UWSGI_CHDIR  /home/wwwroot/api.example.com;</span><br><span class="line">    uwsgi_param  UWSGI_SCRIPT app;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx reload</span><br></pre></td></tr></table></figure><hr><h2 id="运行后端"><a href="#运行后端" class="headerlink" title="运行后端"></a>运行后端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --ini config.ini</span><br></pre></td></tr></table></figure><p>这时访问 api 的域名，会出现提示 <code>Hello world~</code> ，表示程序已成功运行。</p><p>其他操作：</p><ul><li>重载：<code>uwsgi --reload /tmp/uwsgi.pid</code></li><li>停止：<code>uwsgi --stop /tmp/uwsgi.pid</code></li></ul><h2 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a>自动更新</h2><p>后台自动更新数据库需要在 crontab 中添加，建议10分钟更新5个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>最后一行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * <span class="built_in">cd</span> /home/wwwroot/api.example.com/ &amp;&amp; /usr/<span class="built_in">local</span>/bin/flask update_infogen</span><br></pre></td></tr></table></figure><h2 id="修改前端页面-api"><a href="#修改前端页面-api" class="headerlink" title="修改前端页面 api"></a>修改前端页面 api</h2><p>PT-Gen 的 api 的路径为 <code>api.example.com/infogen</code> ,前端页面修改此处的api网址为自己的即可。</p><p><img src="https://s2.ax1x.com/2019/05/18/EXJHjP.md.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PT-Gen 0.4.4 版，相比于之前的 0.3.5 版，有很大的改动：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加了数据库缓存，所以服务器必须要安装 sqlite3。&lt;/li&gt;
&lt;li&gt;5月13日豆瓣电影的公共API下线，导致 PT-Gen v0.4.2 及之前的版本无法获取电影数据，现在通过在前端页面和后端程序加入 apikey 才解决这个问题。&lt;/li&gt;
&lt;li&gt;修改了 API 路径，由原来的 &lt;code&gt;/movieinfo/gen&lt;/code&gt; 改为 &lt;code&gt;/infogen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;去掉了 run.py&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议之前使用 v0.3.5 的朋友按此教程升级到 v0.4.5，同时前端页面也要注意更新。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;服务器必备的软件环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;python3.5 或者更高&lt;/li&gt;
&lt;li&gt;pip3&lt;/li&gt;
&lt;li&gt;uWSGI&lt;/li&gt;
&lt;li&gt;sqlite3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="pt" scheme="https://www.bfdz.ink/tags/pt/"/>
    
  </entry>
  
  <entry>
    <title>权力的游戏第八季第一集</title>
    <link href="https://www.bfdz.ink/2019/04/15/125/"/>
    <id>https://www.bfdz.ink/2019/04/15/125/</id>
    <published>2019-04-15T15:40:00.000Z</published>
    <updated>2019-04-16T14:18:09.988Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>game.of.thrones.s08e01.repack.1080p.web.h264-memento<br>衣柜字幕组外挂字幕</p></blockquote><a id="more"></a><p><img src="https://img01.sogoucdn.com/app/a/100520146/44C264F6A516085829C54F9ED4582AEA" alt=""></p><p>◎译　　名　权力的游戏 第八季 / Game of Thrones: The Final Season / 权游8<br>◎片　　名　Game of Thrones Season 8<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　剧情 / 奇幻 / 冒险<br>◎语　　言　英语<br>◎上映日期　2019-04-14(美国)<br>◎IMDb评分  9.9/10 from 1975 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt5924366" target="_blank" rel="noopener">http://www.imdb.com/title/tt5924366</a><br>◎豆瓣评分　9.8/10 from 17498 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26584183/" target="_blank" rel="noopener">https://movie.douban.com/subject/26584183/</a><br>◎集　　数　6<br>◎片　　长　60分钟(E1-E2) / 80分钟(E3-E6)<br>◎导　　演　米格尔·萨普什尼克 Miguel Sapochnik / 大卫·努特尔 David Nutter / 戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss<br>◎编　　剧　戴维·贝尼奥夫 David Benioff / D·B·威斯 D.B. Weiss / 乔治·马丁 George R.R. Martin<br>◎主　　演　艾米莉亚·克拉克 Emilia Clarke<br>　　　　　　基特·哈灵顿 Kit Harington<br>　　　　　　彼特·丁拉基 Peter Dinklage<br>　　　　　　苏菲·特纳 Sophie Turner<br>　　　　　　麦茜·威廉姆斯 Maisie Williams<br>　　　　　　琳娜·海蒂 Lena Headey<br>　　　　　　伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright<br>　　　　　　尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau<br>　　　　　　约翰·C·布莱德利 John C. Bradley<br>　　　　　　阿尔菲·艾伦 Alfie Allen<br>　　　　　　皮鲁·埃斯贝克 Pilou Asbæk<br>　　　　　　格温多兰·克里斯蒂 Gwendoline Christie<br>　　　　　　利亚姆·坎宁安 Liam Cunningham<br>　　　　　　娜塔莉·伊曼纽尔 Nathalie Emmanuel<br>　　　　　　康勒斯·希尔 Conleth Hill<br>　　　　　　罗伊·麦克凯恩 Rory McCann<br>　　　　　　杰罗姆·弗林 Jerome Flynn<br>　　　　　　克里斯托弗·海维尤 Kristofer Hivju<br>　　　　　　约瑟夫·戴浦西 Joe Dempsie<br>　　　　　　雅各布·安德森 Jacob Anderson<br>　　　　　　伊恩·格雷 Iain Glen<br>　　　　　　安东·莱瑟 Anton Lesser<br>　　　　　　理查德·多默 Richard Dormer<br>　　　　　　杰玛·韦兰 Gemma Whelan<br>　　　　　　本·克朗普顿 Ben Crompton<br>　　　　　　哈弗波·朱利尔斯·比昂森 Hafþór Júlíus Björnsson<br>　　　　　　丹尼尔·波特曼 Daniel Portman<br>　　　　　　鲁珀特·范西塔特 Rupert Vansittart<br>　　　　　　贝拉·拉姆齐 Bella Ramsey</p><p>◎标　　签　权力的游戏 | HBO | 美剧 | 史诗 | 魔幻 | 经典 | 奇幻 | 美国</p><p>◎简　　介  </p><p>　　HBO剧集《权力的游戏》第八季将于2019年4月14日播出，本季共6集。<br>故事发展至第八季，重返临冬城的琼恩·雪诺（基特·哈灵顿 Kit Harington 饰）在布兰·史塔克（伊萨克·亨普斯特德-怀特 Isaac Hempstead-Wright 饰）口中得知了自己身世的秘密，让他与丹妮莉丝·塔格利安（艾米莉亚·克拉克 Emilia Clarke 饰）的关系蒙上了一层冰霜。<br>詹姆·兰尼斯特（尼古拉·科斯特-瓦尔道 Nikolaj Coster-Waldau 饰）试图召集河间地驻军北伐异鬼，却发现艾德慕·徒利（托比亚斯·门基斯 Tobias Menzies 饰）已经包围你了奔流城。<br>攸伦·葛雷乔伊（皮鲁·埃斯贝克 Pilou Asbæ 饰）将黄金团带至君临获取了瑟曦（琳娜·海蒂 Lena Headey 饰）的信任，而实际上，他已经与无面者贾昆·赫加尔（汤姆·拉斯齐哈 Tom Wlaschiha 饰）私下达成了秘密协议。</p><p>◎获奖情况  </p><p>　　第5届豆瓣电影年度榜单(2018)<br>　　最值得期待的剧集(提名)</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/Ei9MoYETLp5Nlkt7e9_JXrMB_4xxKuN9v9LRuD8Im1gcOQ?e=Im0bGH</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;game.of.thrones.s08e01.repack.1080p.web.h264-memento&lt;br&gt;衣柜字幕组外挂字幕&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="欧美剧" scheme="https://www.bfdz.ink/tags/%E6%AC%A7%E7%BE%8E%E5%89%A7/"/>
    
      <category term="HBO" scheme="https://www.bfdz.ink/tags/HBO/"/>
    
  </entry>
  
  <entry>
    <title>爱，死亡和机器人 LOVE DEATH + ROBOTS</title>
    <link href="https://www.bfdz.ink/2019/04/07/124/"/>
    <id>https://www.bfdz.ink/2019/04/07/124/</id>
    <published>2019-04-07T15:13:00.000Z</published>
    <updated>2019-04-07T15:23:15.121Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内封多国字幕</p></blockquote><a id="more"></a><p><img src="https://i.loli.net/2019/04/07/5caa133ce4fca.jpg" alt="love_death_and_robots"></p><p>◎译　　名　爱，死亡和机器人 / LOVE DEATH + ROBOTS / 爱 x 死 x 机器人(台) / 爱、死亡 &amp; 机器人 / 爱情，死亡与机器人 / 爱，死亡与机器人 / 爱．死．机械人(港)<br>◎片　　名　Love, Death &amp; Robots<br>◎年　　代　2019<br>◎产　　地　美国<br>◎类　　别　喜剧 / 科幻 / 动画 / 恐怖 / 奇幻<br>◎语　　言　英语<br>◎上映日期　2019-03-15(美国)<br>◎IMDb评分  8.8/10 from 36219 users<br>◎IMDb链接  <a href="http://www.imdb.com/title/tt9561862" target="_blank" rel="noopener">http://www.imdb.com/title/tt9561862</a><br>◎豆瓣评分　9.2/10 from 146924 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/30424374/" target="_blank" rel="noopener">https://movie.douban.com/subject/30424374/</a><br>◎集　　数　18<br>◎片　　长　15分钟<br>◎导　　演　维克多·马尔多纳多 Víctor Maldonado / 加布里埃尔·彭纳基奥利 Gabriele Pennacchioli / 阿尔弗雷多·托雷斯 Alfredo Torres / 弗兰克·巴尔森 Franck Balson / 阿尔贝托·米尔戈 Alberto Mielgo / 蒂姆·米勒 Tim Miller / 达米安·纽诺 Damian Nenow / 杰罗姆·陈 Jerome Chen / 维塔利·舒舒科 Vitaliy Shushko / 欧文·沙利文 Owen Sullivan / 罗伯特·瓦利 Robert Valley / 戴夫·威尔逊 Dave Wilson / 乔恩·叶 Jon Yeo / 哈维尔·雷西奥·格雷西亚 Javier Recio Gracia<br>◎编　　剧　蒂姆·米勒 Tim Miller / 约翰·斯卡尔齐 John Scalzi / 阿拉斯泰尔·雷诺兹 Alastair Reynolds / 彼得·F·汉密尔顿 Peter F. Hamilton / 马尔科·克鲁斯 Marko Kloos / 乔·R·兰斯代尔 Joe R. Lansdale / 贾尼斯·罗伯逊 Janis Robertson<br>◎主　　演　斯科特·怀特 Scott Whyte<br>　　　　　　诺兰·诺斯 Nolan North<br>　　　　　　马修·杨·金 Matthew Yang King<br>　　　　　　迈克尔·本耶尔 Michael Benyaer<br>　　　　　　乔什·布雷纳 Josh Brener<br>　　　　　　艾莉·康德伦 Elly Condron<br>　　　　　　亨利·杜思韦特 Henry Douthwaite<br>　　　　　　亚伦·希梅尔斯坦 Aaron Himelstein<br>　　　　　　斯蒂芬·卡皮契奇 Stefan Kapičić<br>　　　　　　莫里斯·拉马奇 Maurice LaMarche<br>　　　　　　艾米丽·奥布莱恩 Emily O’Brien<br>　　　　　　凯文·迈克尔·理查德森 Kevin Michael Richardson<br>　　　　　　海伦·萨德勒 Helen Sadler<br>　　　　　　伊兰妮·谭 Elaine Tan<br>　　　　　　柯克·桑顿 Kirk Thornton<br>　　　　　　萨米拉·威利 Samira Wiley<br>　　　　　　玛丽·伊丽莎白·温斯特德 Mary Elizabeth Winstead<br>　　　　　　卡洛斯·阿拉斯拉奇 Carlos Alazraqui<br>　　　　　　亚当·巴特利 Adam Bartley<br>　　　　　　托弗·戈瑞斯 Topher Grace<br>　　　　　　尤里·洛文塔尔 Yuri Lowenthal<br>　　　　　　克里斯托弗·L·帕森 Christopher L. Parson<br>　　　　　　弗雷德·塔特西奥 Fred Tatasciore<br>　　　　　　布鲁斯·托马斯 Bruce Thomas<br>　　　　　　艾玛·索内特 Emma Thornett<br>　　　　　　加里·安东尼·威廉斯 Gary Anthony Williams<br>　　　　　　盖瑞·科尔 Gary Cole<br>　　　　　　约翰·迪·玛吉欧 John Di Maggio<br>　　　　　　克里斯·帕内尔 Chris Parnell<br>　　　　　　吉姆·皮里 Jim Pirri<br>　　　　　　内斯特·塞拉诺 Nestor Serrano<br>　　　　　　吉尔·塔利 Jill Talley<br>　　　　　　劳拉·沃德尔 Laura Waddell<br>　　　　　　泰姆·温特斯 Time Winters<br>　　　　　　格文多林·叶 Gwendoline Yeo<br>　　　　　　奥米德·阿布塔西 Omid Abtahi<br>　　　　　　安东尼奥·阿尔瓦雷斯 Antonio Alvarez<br>　　　　　　布莱恩·布鲁姆 Brian Bloom<br>　　　　　　格雷厄姆·汉密尔顿 Graham Hamilton<br>　　　　　　迪特尔·詹森 Dieter Jansen<br>　　　　　　安德烈·索格利扎索 André Sogliuzzo</p><p>◎标　　签　科幻 | netflix | 动画 | 短片集 | 美国 | 赛博朋克 | 2019 | 奇幻</p><p>◎简　　介  </p><p>　　这部名为《爱，死亡和机器人》的动画短片合集由18部分组成，每部分时长5-15分钟。这些短片涵盖多种类型，包括科幻、奇幻、恐怖和喜剧；这些短片也将包含多种形式，包括传统2D和3DCGI短片。<br>18部短片导演列表：<br>1.桑尼的优势 Dave Wilson<br>2.三个机器人 Víctor Maldonado&amp;Alfredo Torres<br>3.证人 Alberto Mielgo<br>4.机动装甲 Franck Balson<br>5.噬魂者 Owen Sullivan<br>6.当酸奶统治世界 Victor Maldonado &amp; Alfredo Torres<br>7.裂缝以外 Leon Berlue,Dominique Boidin,Remi Kozyra,Maxime Luere<br>8.祝有好的收获 Oliver Thomas<br>9.垃圾场 Javier Recio Gracia<br>10.变形者 Gabriele Pennacchioli<br>11.帮手 Jon Yeo<br>12.古鱼复苏 Damian Nenow<br>13.新运十三 Jerome Chen<br>14.齐马的作品 Robert Valley<br>15.盲点 Vitality Shushko<br>16.冰河时代 Tim Miller<br>17.不一样的历史 Victor Maldonado &amp; Alfredo Torres<br>18.秘密战争 Istvan Zorkoczy</p><hr><p>下载链接：<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/ElEWA5npqQBNpfzHyDZvlx4BRK_3LFLRmRtpU0j86JWKVA?e=BAUy2Z</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;内封多国字幕&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="电视剧" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E5%89%A7/"/>
    
    
      <category term="Netflix" scheme="https://www.bfdz.ink/tags/Netflix/"/>
    
      <category term="欧美剧" scheme="https://www.bfdz.ink/tags/%E6%AC%A7%E7%BE%8E%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>第10放映室《影话2018》</title>
    <link href="https://www.bfdz.ink/2019/02/09/123/"/>
    <id>https://www.bfdz.ink/2019/02/09/123/</id>
    <published>2019-02-09T06:02:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>聚焦2018中国银幕，盘点全年热门影片。一年一度，妙语酷评，第10放映室传统保留节目《影话2018》，除夕至初六，每天中午12:26，陪您一起边吃边看过大年！</p><p>每天同步更新下载链接:<a href="https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA" target="_blank" rel="noopener">https://daye-my.sharepoint.com/:f:/g/personal/pan_bfdz_ink/EkfbvxJbyx9NhMEBSvJyDSIBtW1bYw59-v_V18iVZHRPqg?e=6f8OnA</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;聚焦2018中国银幕，盘点全年热门影片。一年一度，妙语酷评，第10放映室传统保留节目《影话2018》，除夕至初六，每天中午12:26，陪您一起边吃边看过大年！&lt;/p&gt;
&lt;p&gt;每天同步更新下载链接:&lt;a href=&quot;https://daye-my.sharepoint.com
      
    
    </summary>
    
      <category term="电视节目" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E8%A7%86%E8%8A%82%E7%9B%AE/"/>
    
    
      <category term="第10放映室" scheme="https://www.bfdz.ink/tags/%E7%AC%AC10%E6%94%BE%E6%98%A0%E5%AE%A4/"/>
    
      <category term="CCTV10" scheme="https://www.bfdz.ink/tags/CCTV10/"/>
    
  </entry>
  
  <entry>
    <title>种子文件编辑工具 Torrent File Editor</title>
    <link href="https://www.bfdz.ink/2019/02/09/122/"/>
    <id>https://www.bfdz.ink/2019/02/09/122/</id>
    <published>2019-02-09T03:55:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Torrent File Editor 是一款开源免费的种子文件编辑工具，支持 Windows 和 Mac 平台，以及自带中文语言。</p><p>下载地址：<a href="https://sourceforge.net/projects/torrent-file-editor/" target="_blank" rel="noopener">https://sourceforge.net/projects/torrent-file-editor/</a></p><a id="more"></a><hr><p>特点：</p><ul><li>新建 .torrent 文件</li><li>通过简单、人性化的界面编辑种子文件</li><li>以 JSON 格式编辑 .torrent 文件</li><li>添加，删除和交换种子文件内的文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Torrent File Editor 是一款开源免费的种子文件编辑工具，支持 Windows 和 Mac 平台，以及自带中文语言。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://sourceforge.net/projects/torrent-file-editor/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://sourceforge.net/projects/torrent-file-editor/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.bfdz.ink/categories/Windows/"/>
    
    
      <category term="Torrent File Editor" scheme="https://www.bfdz.ink/tags/Torrent-File-Editor/"/>
    
  </entry>
  
  <entry>
    <title>Ampache 私人云音乐搭建和使用</title>
    <link href="https://www.bfdz.ink/2019/01/13/121/"/>
    <id>https://www.bfdz.ink/2019/01/13/121/</id>
    <published>2019-01-13T11:00:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ampache 是一个​基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何平台的网络设备访问自己的视频和音乐。</p><p>和 Plex 相比，这款程序全部功能都是免费开源的，并且支持包括 Plex 在内的多种客户端 API 和网络传输协议。</p><p>项目网址：<a href="https://github.com/ampache/ampache" target="_blank" rel="noopener">https://github.com/ampache/ampache</a></p><a id="more"></a><hr><hr><h1 id="服务端搭建"><a href="#服务端搭建" class="headerlink" title="服务端搭建"></a>服务端搭建</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li><p>web 服务程序，下列之一</p><ul><li>Apache</li><li>lighttpd</li><li>nginx</li><li>IIS</li></ul></li><li><p>PHP 5.6 或者更高版本</p></li><li><p>PHP 模块：</p><ul><li>PDO</li><li>PDO_MYSQL</li><li>hash</li><li>session</li><li>json</li><li>simplexml (可选)</li><li>curl (可选)</li><li>对于 FreeBSD 系统必须加载一下模块:<ul><li>php-xml</li><li>php-dom</li></ul></li></ul></li><li><p>MySQL 5.x</p></li></ul><p>本文的演示环境：</p><ul><li>lnmp 1.5</li><li>vps<ul><li>Debian 7</li><li>1 CPU</li><li>512 MB 内存</li><li>20G 硬盘</li></ul></li></ul><p>linux 服务器上推荐使用 <a href="https://lnmp.org/" target="_blank" rel="noopener">lnmp</a> 安装环境。如果只是用来做音乐服务器，对 vps 的配置要求不高，因为音乐文件的体积也不大，码率要求也低。</p><hr><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>安装完 lnmp ，然后创建网站目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost list</span><br></pre></td></tr></table></figure><p>下载程序，注意不要 git clone ，要从 Release 下载最新版本完整程序安装包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/test.nas.ink/</span><br><span class="line">wget https://github.com/ampache/ampache/releases/download/3.9.0/ampache-3.9.0_all.zip</span><br><span class="line">unzip ampache-3.9.0_all.zip</span><br></pre></td></tr></table></figure><p>修改 config 目录权限，确保安装时配置文件可写入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R config/</span><br></pre></td></tr></table></figure></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h3><p>访问你配置的网站域名，如果没出错，会出现这个安装页面。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz538xki2lj20zk0i6q4e.jpg" alt="image"></p><p>Ampache 支持包括中文在内的多种语言。</p><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><p>PHP 整型大小一项会有警告，但貌似影响可以忽略不计。如果其他项没问题，点击继续。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz53bur38kj20yv184nb8.jpg" alt="image"></p><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>填写端口和密码，然后点击插入数据库。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53guvyb2j20yo0q7goh.jpg" alt="image"></p><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><p>如果程序安装包解压在网站根目录，web 路径留空，不用填。<br><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53jsqp3qj20wd0m5775.jpg" alt=""></p><p>填写 MySQL 用户名和密码</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz53mpe9m9j20x80krwi4.jpg" alt="image"></p><p>其他设置都保存默认即可，除非你清楚选项的作用。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz53pfmrfgj20x00dumys.jpg" alt="image"></p><p>点击查看文件栏，然后点击第一行配置文件后面的写。如果提示写入错误，请检查 config 目录权限。</p><h3 id="配置管理员用户名和密码"><a href="#配置管理员用户名和密码" class="headerlink" title="配置管理员用户名和密码"></a>配置管理员用户名和密码</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53r2qkrcj20w80gpabq.jpg" alt="image"></p><h3 id="检查更新"><a href="#检查更新" class="headerlink" title="检查更新"></a>检查更新</h3><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz53u4ma9kj20x20ni76v.jpg" alt="image"></p><p>目前是最新版，无需更新。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz53ujksyej20wb09d3zc.jpg" alt="image"></p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p>现在已经安装成功，返回网站首页即可使用了。<br><img src="https://ws1.sinaimg.cn/large/92253953gy1fz53w6565qj20ny0jrdgr.jpg" alt="image"></p><hr><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p>目录就是服务器上存储音乐文件的路径，设置目录后 Ampache 可以扫描路径下的音乐文件，将歌曲信息添加到程序的曲库里。</p><p>首先在服务器上创建一个目录，用于存放音乐文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/wwwroot/test.nas.ink/music</span><br></pre></td></tr></table></figure><p>使用 ftp 上传文件到目录。因为 linux 系统没装中文语言，上传后文件名会乱码，所以我都是把文件压缩后上传，再解压。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz54bn55kmj213m0mbafh.jpg" alt="image"></p><p>登录 ampache 后台，第一次进入会提示创建目录。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54de43bjj21h50pn76u.jpg" alt="image"></p><p>或者点左侧管理员图标，也可添加目录。</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz54nrp3l3j21hc0gr75x.jpg" alt=""></p><p>目录名称随意填写，目录类型选 local 。文件名样式按照你上传的音乐文件样式修改，需和你上传的音乐文件名样式对应，右边有参数说明。目录样式按实际情况修改。路径填写你之前创建的目录，注意是绝对路径。然后点击添加目录。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54feb3jsj21hb0njq81.jpg" alt="image"></p><h2 id="扫描目录"><a href="#扫描目录" class="headerlink" title="扫描目录"></a>扫描目录</h2><p>第一次添加目录会自动扫描一次，以后上传了新歌可以在目录列表里手动扫描。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54r581c0j21ha0l3n05.jpg" alt="image"></p><p>扫描完以后，在歌曲标题里面，点击播放按钮可通过网页播放歌曲。</p><p><img src="https://wx3.sinaimg.cn/large/92253953gy1fz54pz036rj21hc0q477g.jpg" alt=""></p><h2 id="流式播放"><a href="#流式播放" class="headerlink" title="流式播放"></a>流式播放</h2><p>ampache 的网页播放十分简陋，并且不知什么原因 flac 格式无法播放。ampache 能够覆盖全平台的方式是网络串流。</p><p>点击网页右侧的播放方式选项，默认选项：网络播放器，即通过网页播放。现在改成 流。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz57aiq8yhj21hc0q9dj5.jpg" alt="image"></p><p>然后再点击歌曲的播放按钮，就不会再网页播放，而是会提示下载一个 m3u 文件。接触过直播源或者在线视频抓取的同学应该知道 m3u8 这种文件，m3u 是一种 Windows-1252格式纯文本文件，可以指定一个或多个多媒体文件的位置，而 M3U8 就是 UTF-8 编码的 M3U。</p><p><img src="https://wx2.sinaimg.cn/large/92253953gy1fz54q4fhy7j21h70nx786.jpg" alt=""></p><p>下载后，即可使用本地支持 m3u 的播放器打开。列如 VLC、foobar2000。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><p>foobar2000 打开，需要播放过一次才会显示歌曲名等信息，不知道是不是我的版本有问题。所以还是建议用 VLC 播放，VLC 在几乎所有平台是都有对应安装包。</p><h2 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h2><p>如果想把全部歌曲生成 m3u 添加到本地播放器曲库，可以通过创建智能播放列表的方式，将全部歌曲生成一个 m3u 文件。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671huiqj21gq0g9tao.jpg" alt="image"></p><p>不用添加任何规则，点击创建就是把所以歌曲保存成列表。</p><p><img src="https://ws2.sinaimg.cn/large/92253953gy1fz5671ktevj21h50h70uy.jpg" alt="image"></p><p>然后点播放按钮下载 m3u 文件。</p><p><img src="https://ws4.sinaimg.cn/large/92253953gy1fz5671ogbyj21gp0ecgnp.jpg" alt="image"></p><p>把 m3u 文件拖入 VLC 的媒体库，点击展开列表。</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fz54q6gx7wj21hc0sx0yj.jpg" alt=""></p><h2 id="key-的有效期"><a href="#key-的有效期" class="headerlink" title="key 的有效期"></a>key 的有效期</h2><p>程序默认设置 key 的有效期是 7 个小时，也就是添加到本地播放器媒体库的歌曲 7 个小时后会无法播放。</p><p>在管理员，System，将 分享链接的默认有效期改成 0 ，本地的 m3u 歌曲列表就不会失效了。</p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fz56denyadj21gq0p9jwv.jpg" alt="image"></p><p>如果再要使其失效，可以手动刷新 API key</p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkbtwhj21gx0daabw.jpg" alt="image"></p><p><img src="https://wx4.sinaimg.cn/large/92253953gy1fz56jkf7clj21hb0jl41g.jpg" alt="image"></p><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>Ampache 还有很多功能我没搞清楚怎么用，目前唯一知道的是采用流媒体方式播放，MPDroid 没搞明白怎么配置。在安卓上有个应用叫 Power Ampache ，可以访问 Ampache 服务器，但是使用体验十分差。Plex 做的不错，但移动端是收费的。找了一圈发现还是 VLC 最强大。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ampache 是一个​基于网络的音频/视频流应用程序和文件管理器。它最初是为了利用 Apache 的 Mod_mp3 而编写的，后来增加了流式传输方法，可以支持你从任何平台的网络设备访问自己的视频和音乐。&lt;/p&gt;
&lt;p&gt;和 Plex 相比，这款程序全部功能都是免费开源的，并且支持包括 Plex 在内的多种客户端 API 和网络传输协议。&lt;/p&gt;
&lt;p&gt;项目网址：&lt;a href=&quot;https://github.com/ampache/ampache&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ampache/ampache&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="音乐" scheme="https://www.bfdz.ink/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="Ampache" scheme="https://www.bfdz.ink/tags/Ampache/"/>
    
  </entry>
  
  <entry>
    <title>2019 年十大热门 BT 站</title>
    <link href="https://www.bfdz.ink/2019/01/08/120/"/>
    <id>https://www.bfdz.ink/2019/01/08/120/</id>
    <published>2019-01-08T07:25:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>2019 年初访问量大的BT站有哪些？延续前几年的传统，我们统计发现 YTS 领先了 The Pirate Bay。在经历了动荡的一年后，BT 站排名相对比较稳定。</p><p>虽然现在流媒体风靡一时，但 BT 站仍然很热门。</p><p>长期以来，海盗湾都是 BT 站中无可争议的第一。但今年年初 YTS 和 1337x 的访问量超过了海盗湾。</p><p>海盗湾的访问量下滑可能归因于过去几个月的频繁宕机和接连的问题。但对于许多人来说，海盗湾仍然是首选站点，或者过几个月海盗湾重新获得领先地位，也不足为奇。</p><p>今年的名单出现了一名“新人”。TorrentDownloads 去年缺席后，又回来了，该站取代了去年 iDope 的位置。</p><p>因为本文主要针对英语用户和面向国际受众的 BT 站进行排名，所以即使 <a href="https://rutracker.org/forum/index.php" target="_blank" rel="noopener">RuTracker</a>,<a href="https://dytt8.net/" target="_blank" rel="noopener">Dytt8</a>,<a href="https://www.elitetorrent.biz/" target="_blank" rel="noopener">EliteTorrent</a>,<a href="https://www.torrent9.uno/" target="_blank" rel="noopener">Torrent9</a> 符合流量条件，也不会包括在内。</p><p>以下是新年伊始访问量最大的 BT 站的榜单，这个排行榜是基于 Alexa 的数据。</p><a id="more"></a><hr><h2 id="1、YTS-AM"><a href="#1、YTS-AM" class="headerlink" title="1、YTS.AM"></a>1、YTS.AM</h2><p>网址: <a href="http://yts.am/" target="_blank" rel="noopener">http://yts.am/</a></p><p>这个网站是原 YTS/YIFY 的非官方继任者。</p><h2 id="2、1337X"><a href="#2、1337X" class="headerlink" title="2、1337X"></a>2、1337X</h2><p>网址：<a href="http://1337x.to/" target="_blank" rel="noopener">http://1337x.to/</a></p><p>1337X 多年来一直稳居榜单之中，该站有专门的发布组，提供最新的资源。尽管多个国家的 ISP 对其进行封锁，但其访问量仍在增长。</p><h2 id="3、海盗湾"><a href="#3、海盗湾" class="headerlink" title="3、海盗湾"></a>3、海盗湾</h2><p>网址：<a href="http://thepiratebay.org/" target="_blank" rel="noopener">http://thepiratebay.org/</a></p><p>海盗湾去年满 15 周岁，是这个榜单里最古老的 BT 站。如果我们把来自代理的流量也计算在内，该站可能会排在第一。但因为频繁宕机和接连的问题，该站暂列第三。</p><h2 id="4、RARBG"><a href="#4、RARBG" class="headerlink" title="4、RARBG"></a>4、RARBG</h2><p>网址：<a href="http://rarbg.to/" target="_blank" rel="noopener">http://rarbg.to/</a></p><p>RARBG 成立于 2008 年，该站在电影和电视剧方面更新速度较快。RARBG 与去年相比下降了两个名次。该站有多个域名，这里选取访问量最大的域名进行排名。</p><h2 id="5、Torrentz2"><a href="#5、Torrentz2" class="headerlink" title="5、Torrentz2"></a>5、Torrentz2</h2><p>网址：<a href="https://torrentz2.eu/" target="_blank" rel="noopener">https://torrentz2.eu/</a></p><p>Torrentz2 是 Torrentz.eu 的仿站，虽然去年发生过一些问题，但该站仍然很热门。</p><h2 id="6、NYAA-SI"><a href="#6、NYAA-SI" class="headerlink" title="6、NYAA.SI"></a>6、NYAA.SI</h2><p>网址：<a href="https://nyaa.si/" target="_blank" rel="noopener">https://nyaa.si/</a></p><p>NYAA.si 是之前关站重生后的网站。该站去年被 Cloudflare 停过机，但很快切换了服务商。</p><h2 id="7、LIMETORRENTS"><a href="#7、LIMETORRENTS" class="headerlink" title="7、LIMETORRENTS"></a>7、LIMETORRENTS</h2><p>网址：<a href="https://www.limetorrents.info/" target="_blank" rel="noopener">https://www.limetorrents.info/</a></p><p>Limetorrents 是一个建站时间超过五年的 BT 站。该站几个月前换了域名，并加入了 CDN 以应对各种拦截。</p><h2 id="8、ZOOQLE"><a href="#8、ZOOQLE" class="headerlink" title="8、ZOOQLE"></a>8、ZOOQLE</h2><p>网址：<a href="https://zooqle.com/" target="_blank" rel="noopener">https://zooqle.com/</a></p><p>Zooqle 拥有近 380 万个种子，排名一直保持在前 10。该站官方宣传自己是 Bitsnoop 的替代网站。</p><h2 id="9、EZTV-AG"><a href="#9、EZTV-AG" class="headerlink" title="9、EZTV.AG"></a>9、EZTV.AG</h2><p>网址：<a href="http://eztv.ag/" target="_blank" rel="noopener">http://eztv.ag/</a></p><p>网站内容主要是英美剧资源。域名换了很多次，目前网站运营团队不知是不是原来的。几个月前，发布组 ETTV 指责该站盗取他们的种子改名发布。</p><h2 id="10、TORRENTDOWNLOADS"><a href="#10、TORRENTDOWNLOADS" class="headerlink" title="10、TORRENTDOWNLOADS"></a>10、TORRENTDOWNLOADS</h2><p>网址：<a href="https://www.torrentdownloads.me/" target="_blank" rel="noopener">https://www.torrentdownloads.me/</a></p><p>TorrentDownloads 已经建站多年，去年缺席前 10 以后，今年凭借每月数百万的用户访问量回到了榜单。</p><hr><p>via:<a href="https://torrentfreak.com/top-10-most-popular-torrent-sites-of-2019/" target="_blank" rel="noopener">Top 10 Most Popular Torrent Sites of 2019</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019 年初访问量大的BT站有哪些？延续前几年的传统，我们统计发现 YTS 领先了 The Pirate Bay。在经历了动荡的一年后，BT 站排名相对比较稳定。&lt;/p&gt;
&lt;p&gt;虽然现在流媒体风靡一时，但 BT 站仍然很热门。&lt;/p&gt;
&lt;p&gt;长期以来，海盗湾都是 BT 站中无可争议的第一。但今年年初 YTS 和 1337x 的访问量超过了海盗湾。&lt;/p&gt;
&lt;p&gt;海盗湾的访问量下滑可能归因于过去几个月的频繁宕机和接连的问题。但对于许多人来说，海盗湾仍然是首选站点，或者过几个月海盗湾重新获得领先地位，也不足为奇。&lt;/p&gt;
&lt;p&gt;今年的名单出现了一名“新人”。TorrentDownloads 去年缺席后，又回来了，该站取代了去年 iDope 的位置。&lt;/p&gt;
&lt;p&gt;因为本文主要针对英语用户和面向国际受众的 BT 站进行排名，所以即使 &lt;a href=&quot;https://rutracker.org/forum/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RuTracker&lt;/a&gt;,&lt;a href=&quot;https://dytt8.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dytt8&lt;/a&gt;,&lt;a href=&quot;https://www.elitetorrent.biz/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;EliteTorrent&lt;/a&gt;,&lt;a href=&quot;https://www.torrent9.uno/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Torrent9&lt;/a&gt; 符合流量条件，也不会包括在内。&lt;/p&gt;
&lt;p&gt;以下是新年伊始访问量最大的 BT 站的榜单，这个排行榜是基于 Alexa 的数据。&lt;/p&gt;
    
    </summary>
    
      <category term="BT" scheme="https://www.bfdz.ink/categories/BT/"/>
    
    
      <category term="BT" scheme="https://www.bfdz.ink/tags/BT/"/>
    
      <category term="torrent" scheme="https://www.bfdz.ink/tags/torrent/"/>
    
  </entry>
  
  <entry>
    <title>TnP压制组标准&amp;规范</title>
    <link href="https://www.bfdz.ink/2018/12/23/119/"/>
    <id>https://www.bfdz.ink/2018/12/23/119/</id>
    <published>2018-12-23T11:08:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是 TnP 压制组在 m-team 站内论坛公开发布的压制标准，和其他顶级压制小组的标准规范大同小异。对于想学习压制或者组建压制组的人来说具有参考意义。</p><a id="more"></a><hr><p><strong>压制组标准&amp;规则</strong></p><p><strong>目的</strong><br>规范化内部小组压制作品，提高制作质量</p><p><strong>压制任务申请</strong><br><strong>流程</strong></p><p>所有的压制都会在 <a href="https://tp.m-team.cc/todo.php" target="_blank" rel="noopener">https://tp.m-team.cc/todo.php</a> 发布压制任务，Internal成员可以前往认领任务。</p><ul><li>Internal成员不建议一次认领多个任务（但不包括同一电影的不同分辨率）。</li><li>认领首发电影压制需要尽可能快发布，非首发电影建议2周内发布。</li><li>管理人员保留对超过限定压制时间的任务重新指派压制人的权利。</li></ul><p><strong>格式</strong><br>所有的视频、音频、字幕流等都必须封装在mkv中</p><p><strong>视频流</strong><br>所有的压制都建议使用最佳的源进行制作，这意味着可能需要下载多个源进行截图对比。使用更好的源制作的压制可能会代替掉旧的、基于更差的源制作的作品。建议在职人论坛（<a href="https://tp.m-team.cc/forums.php?action=viewforum&amp;forumid=11" target="_blank" rel="noopener">https://tp.m-team.cc/forums.php?action=viewforum&amp;forumid=11</a> ）展示你做的对比，以便其他成员观看和评论。</p><p>x264是暂时唯一推荐的视频编码。对于x265的补充规定会另外叙述。其余编码因为编码效率和质量等问题不应再采用。对于源视频中存在的问题，鼓励进行修复，但不强制规定。同时，Source vs Encode对比截图也是<strong>必须</strong>添加到种子详情描述中的，使用滤镜修复的问题区域必须添加Source vs Filtered vs Encode对比截图。</p><p>对于10bit压制，推荐添加Source vs 10Bit Encode vs 8Bit Encode截图证明10bit的必要性。</p><p><strong>音频流</strong><br>对于压制，不推荐使用体积过大的无损音轨（占总mkv文件体积超过1/3）。</p><p>允许的格式 (无损格式):</p><ul><li>DTS:X / DTS-HD MA.</li><li>Atmos / TrueHD. 通常杜比Atmos/TrueHD由于旧设备兼容性问题，都会内嵌AC3内核，推荐一并封装至mkv中。</li><li>FLAC. 对于单声道/立体声必须使用FLAC，以及源音频格式为LPCM格式必须转换成FLAC格式。 </li></ul><p>允许的格式 (有损格式):</p><ul><li>DTS (and other lossy variants). 推荐直接使用DTS-HD/DTS:X中的DTS核心。请务必注意768Kbps的DTS核心不应该使用在压制中，原因是DTS核心的低效编码使得其效果反而不如AC3 640Kbps。如有需要可以使用DTS-HD Master Suite对8声道的DTS-HD/DTS:X音轨进行重新制作，提取DTS-ES 6.1核心。</li><li>Dolby Digital (and other lossy variants). 一般直接从Atmos/TrueHD中提取，如果需要压制，可以使用Sony Sound Forge Pro制作，它是Dolby官方授权的编码器。</li><li>AAC. 只允许出现在单声道/立体声中，一般使用在导评音轨上。如果是视频主音轨，推荐使用FDK AAC制作，如果是导评音轨，可以使用QAAC制作。</li></ul><p>特殊的不允许使用的格式:</p><ul><li>LPCM. 无论任何情况都不应该出现极为低效的LPCM格式。必须转码至无损的FLAC格式（单声道/立体声）或者使用DTS-HD Master Suite制作成DTS-HD MA格式（多声道）。</li></ul><p>导评音轨如果在源上存在，必须进行封装。可以选择直接封装或者进行压制再封装。对于压制，推荐立体声的导评成品码率控制在80Kbps左右。</p><p><strong>字幕</strong><br>必须封装源中带有的英文字幕以及中文字幕（如果存在）。并且，必须在mkvtoolnix中正确标注字幕类型。</p><ul><li>对于英文字幕，主要存在SDH、Non-SDH、Forced三种类型。SDH全称为Subtitles for the deaf or hard-of-hearing，即听力障碍专用字幕，明显特征为存在很多非对白的描述性字幕。Non-SDH则为普通常见的英语字幕。Forced为非英语对白字幕，即英语电影中只针对外语部分的字幕。</li><li>对于英文字幕，封装OCR的.SRT格式也是必须的。鉴于大部分压制员的母语为中文而非英语，OCR可以交由其他人完成。一般在国外站点论坛均有很多母语为英语的用户，并且可以提供OCR处理，详细事宜清联系TnP组组长Nginx。</li><li>对于中文字幕，主要需要标注简体、繁体、粤语，对应Simplified、Traditional、Cantonese。中文字幕由于其识别难度大，校对成本高，不推荐每一片都进行中文的OCR处理，热门电影也可以寻求WEBDL片源自带中字进行匹配。</li><li>评论音轨字幕需要注明为评论字幕。</li></ul><p><strong>章节</strong><br>源中如果存在章节，必须一并封装。如果有具体章节名（非1、2、3…等，存在具体含义的章节名），推荐合理命名。</p><ul><li>章节名为英文，必须参照源菜单手动录入。</li><li>章节名为非英文，推荐按照Chapter X (原外文章节名)命名。如果录入外文章节名有困难可以只提供Chapter X形式命名。</li><li>不存在具体章节名，统一使用ChapterGrabber软件生成命名Chapter X。</li></ul><p><strong>文件信息</strong><br>针对各种类型的作品发布前需要注意填写的信息。</p><p><strong>压制</strong><br>音视频流的Title填入相关信息。</p><ul><li>视频流可以填入”压制人ID @ TnP”以及视频轨道对应信息。</li><li>音频流可以填入特殊音轨说明，如导评音轨应填写”Commentary with director Christopher Nolan”。</li><li>具体每条轨道的编码格式等信息，必须填写。</li></ul><p>举例</p><ul><li>EncoderID @ TnP / x264 / 16888 kbps / 1080p / 23.976 fps / 16:9 / High Profile 4.1</li><li>DTS-HD Master Audio / 5.1 / 48 kHz / 3826 kbps / 24-bit</li><li>Commentary with director Christopher Nolan / Dolby Digital Audio / 2.0 / 48 kHz / 224 kbps / 16-bit</li><li>FLAC Audio / 1.0 / 48 kHz / 579 kbps / 24-bit</li></ul><p><strong>默认轨道</strong><br>对于语言为英语的电影：</p><ul><li>默认轨道应设置在：视频轨道、第一音频轨道、英文Forced字幕轨道（如有）</li><li>非默认轨道应该设置在：除以上的所有轨道</li></ul><p>对于语言为非英语的电影：</p><ul><li>默认轨道应该设置在：视频轨道、第一音频轨道、第一英文字幕轨道</li><li>非默认轨道应该设置在：除以上所有轨道</li></ul><p>错误设置默认轨道选项会导致REPACK/PROPER</p><p><strong>命名</strong></p><ul><li>使用英文命名，以IMDB标题为准。如果电影标题为非英语标题，使用IMDB的”World-wide”标题。如红海行动标题为Operation Red Sea （<a href="https://www.imdb.com/title/tt6878882/releaseinfo?ref_=tt_ql_dt_2" target="_blank" rel="noopener">https://www.imdb.com/title/tt6878882/releaseinfo?ref_=tt_ql_dt_2</a> ）。</li><li>作品题目中需要包含特定的版本信息和片源地区（不填则为默认US或首发片源，推荐存在不同地区片源的时候填写），如加长版（Extended Cut）和日版（JPN）</li></ul><p><strong>电影命名</strong><br>压制: Title.Year.Edition.Source.Resolution.Acodec.Vcodec-Tag</p><p>举例:</p><ul><li>Captain.America.The.Winter.Soldier.2014.BluRay.1080p.DTS.x264-TnP</li><li>X-Men.Days.of.Future.Past.2014.Hybrid.1080p.BluRay.AC3.x264-TnP</li><li>Interstellar.2014.JPN.1080p.BluRay.DTS-HD.MA.5.1.x264-TnP</li><li>Maze.Runner.2014.REPACK.BluRay.720p.DD5.1.x264-TnP</li><li>Zootopia.2014.GER.Extended.Cut.BluRay.1080p.Atmos.7.1.x264-TnP</li></ul><p>以下是命名中可能用到的编码格式以及对应缩写供参考。<br><img src="https://wx1.sinaimg.cn/large/92253953gy1fywvbc9nylj20b904z74q.jpg" alt="V_.png"></p><p><img src="https://ws3.sinaimg.cn/large/92253953gy1fywvc9gg9oj20f40daaaw.jpg" alt="A_.jpg"></p><p><strong>种子详情</strong><br>种子详情需要包含NFO，务必提供恰当的截图进行展示。<br>NFO需要包括：</p><ul><li>压制源信息，尽可能涵盖地区、版本、来源小组。一般源文件名即可满足要求。</li><li>视频信息、音频信息。主要为分辨率、帧率、编码方式和码率等。</li><li>字幕信息。主要为字幕语言。</li><li>x264输出日志信息，一般包括”x264 [info]: frame “、”x264 [info]: consecutive B-frames”等。</li><li>章节信息。是否包含章节（Yes/No）、章节是否命名（Numbered/Named）。<br>NFO模板小组统一，详细模板查看本版对应主题帖。</li></ul><p>恰当的截图包括：</p><ul><li>Source vs Encode对比截图，Encode必须选取压缩程度最大的B帧，推荐Source选取P帧。</li><li>截图使用AVS脚本在恰当位置显示帧信息，包括当前帧数/总帧数、帧类型等。</li><li>可能的情况下添加与0day及其他P2P小组的对比截图。如”Source vs Encode vs VietHD vs SPARKS”。</li></ul><p><strong>作品发布后的问题</strong><br><strong>REPACK/PROPER</strong><br>作品发布后，主要有以下情况需要进行REPACK/PROPER</p><ul><li>对已经发布过的、存在严重问题（如切边有误、花屏、封装有误、音视频流播放有问题等）的作品进行修复，必须进行REPACK/PROPER。重新制作的作品需要在标题中Edition位置注明REPACK（由原发布者自行重新制作）或PROPER（由其他成员制作），并且需要在种子详情明显位置注明修正的问题。</li><li>对已经发布过的作品，发布后寻找到新的质量更好（视频、音频）的源，推荐进行REPACK/PROPER，并且需要给出不同源的对比截图。</li></ul><p>所有的REPACK/PROPER都会导致原来的作品被删除，新的作品进行置顶和Free处理。</p><hr><p>转载来源:<a href="https://tp.m-team.cc/forums.php?action=viewtopic&amp;forumid=53&amp;topicid=27317" target="_blank" rel="noopener">TnP压制组标准&amp;规范 / TnP Rules and Standards （11/9更新 添加默认轨道要求）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是 TnP 压制组在 m-team 站内论坛公开发布的压制标准，和其他顶级压制小组的标准规范大同小异。对于想学习压制或者组建压制组的人来说具有参考意义。&lt;/p&gt;
    
    </summary>
    
      <category term="PT" scheme="https://www.bfdz.ink/categories/PT/"/>
    
    
      <category term="TnP" scheme="https://www.bfdz.ink/tags/TnP/"/>
    
      <category term="视频压制" scheme="https://www.bfdz.ink/tags/%E8%A7%86%E9%A2%91%E5%8E%8B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>墙与梯的较量</title>
    <link href="https://www.bfdz.ink/2018/12/14/118/"/>
    <id>https://www.bfdz.ink/2018/12/14/118/</id>
    <published>2018-12-14T05:03:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>在某个 Telegram 群讨论到了现在很多 10 多岁的年轻人都学会翻墙了，想起我小的时候，大概也是在 10 岁左右第一次翻墙。作为经历过多次墙与梯的升级的网虫，把这个写下来也算是一个对童年的回忆了……</p><a id="more"></a><hr><p><img src="/images/118/118.jpg" alt=""></p><hr><p>转载来源:<a href="https://webcache.googleusercontent.com/search?q=cache:https://blog.yandere.moe/moe/gfw-vs-proxy/97.html" target="_blank" rel="noopener">墙与梯的较量——那些年我们一起用过的翻墙手段</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在某个 Telegram 群讨论到了现在很多 10 多岁的年轻人都学会翻墙了，想起我小的时候，大概也是在 10 岁左右第一次翻墙。作为经历过多次墙与梯的升级的网虫，把这个写下来也算是一个对童年的回忆了……&lt;/p&gt;
    
    </summary>
    
      <category term="网络" scheme="https://www.bfdz.ink/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络封锁" scheme="https://www.bfdz.ink/tags/%E7%BD%91%E7%BB%9C%E5%B0%81%E9%94%81/"/>
    
      <category term="vpn" scheme="https://www.bfdz.ink/tags/vpn/"/>
    
      <category term="ss" scheme="https://www.bfdz.ink/tags/ss/"/>
    
  </entry>
  
  <entry>
    <title>VapourSynthEditor-r19-64bit</title>
    <link href="https://www.bfdz.ink/2018/12/08/117/"/>
    <id>https://www.bfdz.ink/2018/12/08/117/</id>
    <published>2018-12-08T14:59:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>基于 VapourSynthEditor-r19 源码编译，未知的原因导致 r18 的汉化文件无法用在 r19 上面，所以这是“原汁原味”的英文原版。<br><a id="more"></a></p><hr><p><strong>下载</strong></p><blockquote><p>文件: VapourSynthEditor-r19-64bit.zip<br>MD5: 16F6031DB90DA31F84660CD02E42CF3F<br>SHA1: 9827B5004591FA4E6C8774CEFA9A54C94CCEDE4B<br>SHA256: E705278268633E2CCF6411837D59A1227567B74EAC5367BDE57F11BD52FFE277</p></blockquote><p>OneDrive: <a href="https://pan.nas.ink/Encoder/tools/VapourSynthEditor/" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a><br>STACK: <a href="https://bfdz.stackstorage.com/s/U1u4XKPLwLVIWCQ" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a><br>cargo: <a href="https://cargo.hyperay.cc/Encoder/tools/VapourSynthEditor-r19-64bit.zip" target="_blank" rel="noopener">VapourSynthEditor-r19-64bit</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于 VapourSynthEditor-r19 源码编译，未知的原因导致 r18 的汉化文件无法用在 r19 上面，所以这是“原汁原味”的英文原版。&lt;br&gt;
    
    </summary>
    
      <category term="视频压制" scheme="https://www.bfdz.ink/categories/%E8%A7%86%E9%A2%91%E5%8E%8B%E5%88%B6/"/>
    
    
      <category term="vsedit" scheme="https://www.bfdz.ink/tags/vsedit/"/>
    
      <category term="VapourSynth" scheme="https://www.bfdz.ink/tags/VapourSynth/"/>
    
  </entry>
  
  <entry>
    <title>Debian/Ubuntu/CentOS 网络安装/重装系统/纯净安装 一键脚本</title>
    <link href="https://www.bfdz.ink/2018/11/30/116/"/>
    <id>https://www.bfdz.ink/2018/11/30/116/</id>
    <published>2018-11-30T14:25:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Vicer 突然临时关闭了博客，这是原文和脚本的备份。</p></blockquote><p>脚本：<a href="https://pan.nas.ink/script/InstallNET.sh" target="_blank" rel="noopener">https://pan.nas.ink/script/InstallNET.sh</a></p><p>第 328 行有一个压缩包，如果你也要备份这个脚本，建议把压缩包也下载好，然后修改链接。</p><a id="more"></a><hr><p><strong>背景</strong>:</p><ul><li>适用于由 GRUB 引导的 CentOS, Ubuntu, Debian 系统.</li><li>使用官方发行版去掉模板预装的软件.</li><li>同时也可以解决内核版本与软件不兼容的问题。</li><li>只要有 root 权限,还您一个纯净的系统。</li></ul><p><strong>注意</strong>:</p><ul><li>全自动安装默认 root 密码: <code>Vicer</code>,安装完成后请立即更改密码.</li><li>能够全自动重装 Debian/Ubuntu/CentOS 等系统.</li><li>同时提供dd安装镜像功能,例如: 全自动无救援 dd 安装 windows 系统</li><li>全自动安装 CentOS 时默认提供 VNC 功能,可使用 VNC Viewer 查看进度,</li><li>VNC 端口为 1 或者 5901,可自行尝试连接.(成功后 VNC 功能会消失.)</li><li>目前 CentOS 系统只支持任意版本重装为 CentOS 6.x 及以下版本.</li><li><strong>特别注意: <code>OpenVZ</code> 构架不适用.</strong></li></ul><hr><p><strong>更新</strong>:</p><p>[2018.11.12]<br>修复了一写错误逻辑.</p><p>[2018.10.31]<br>增加 –loader 参数.(用于定制镜像)</p><p>[2018.08.10]<br>修复一些Bug.<br>增加 -i 参数.(用于指定网卡)</p><p>[2018.06.09]<br>支持自定义远程桌面端口并打开相关防火墙端口(默认为3389).<br>自动扩展系统盘空间为整个硬盘.<br>增加 -rdp 参数.(用于更换RDP端口,并强制打开该端口防火墙)</p><p>[2018.04.17]<br>修复对grub.conf抓取识别的问题.</p><p>[2018.04.06]<br>优化正则表达式.<br>丢弃对grep -P的依赖.</p><p>[2018.04.03]<br>合并Debian/Ubuntu/CentOS/dd安装镜像功能.<br>使用最少依赖原则.<br>优化部分流程.<br>修复一些已知BUG.</p><hr><p><strong>依赖包</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#二进制文件    Debian/Ubuntu    RedHat/CentOS</span><br><span class="line">iconv         [libc-bin]       [glibc-common]</span><br><span class="line">xz            [xz-utils]       [xz]</span><br><span class="line">awk           [gawk]           [gawk]</span><br><span class="line">sed           [sed]            [sed]</span><br><span class="line">file          [file]           [file]</span><br><span class="line">grep          [grep]           [grep]</span><br><span class="line">openssl       [openssl]        [openssl]</span><br><span class="line">cpio          [cpio]           [cpio]</span><br><span class="line">gzip          [gzip]           [gzip]</span><br><span class="line">cat,cut..     [coreutils]      [coreutils]</span><br></pre></td></tr></table></figure><p><strong>确保安装了所需软件</strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Debian/Ubuntu:</span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line">#RedHat/CentOS:</span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure></p><p><strong>如果出现了错误,请运行</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"> </span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure></p><p><strong>快速使用示例</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span>) -d 8 -v 64 -a</span><br></pre></td></tr></table></figure></p><p><strong>下载及说明</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span> &amp;&amp; chmod a+x InstallNET.sh</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">        bash InstallNET.sh      -d/--debian [dist-name]</span><br><span class="line">                                -u/--ubuntu [dist-name]</span><br><span class="line">                                -c/--centos [dist-version]</span><br><span class="line">                                -v/--ver [32/i386|64/amd64]</span><br><span class="line">                                --ip-addr/--ip-gate/--ip-mask</span><br><span class="line">                                -apt/-yum/--mirror</span><br><span class="line">                                -dd/--image</span><br><span class="line">                                -a/-m</span><br><span class="line"> </span><br><span class="line"><span class="comment"># dist-name: 发行版本代号</span></span><br><span class="line"><span class="comment"># dist-version: 发行版本号</span></span><br><span class="line"><span class="comment"># -apt/-yum/--mirror : 使用定义镜像</span></span><br><span class="line"><span class="comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span></span><br></pre></td></tr></table></figure><p><strong>使用示例</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#使用默认镜像全自动安装</span><br><span class="line">bash InstallNET.sh -d 8 -v 64 -a</span><br><span class="line"> </span><br><span class="line">#使用自定义镜像全自动安装</span><br><span class="line">bash InstallNET.sh -c 6.9 -v 64 -a --mirror &apos;http://mirror.centos.org/centos&apos;</span><br><span class="line"></span><br><span class="line"># 以下示例中,将X.X.X.X替换为自己的网络参数.</span><br><span class="line"># --ip-addr :IP Address/IP地址</span><br><span class="line"># --ip-gate :Gateway   /网关</span><br><span class="line"># --ip-mask :Netmask   /子网掩码</span><br><span class="line"> </span><br><span class="line">#使用自定义镜像自定义网络参数全自动安装</span><br><span class="line">#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &apos;http://archive.ubuntu.com/ubuntu&apos;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &apos;https://moeclub.org/get-win7embx86-auto&apos;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像(调用文件ID的方式)</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/get-gdlink&apos;))&quot;</span><br><span class="line"> </span><br><span class="line">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像</span><br><span class="line">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;https://drive.google.com/open?id=1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/get-gdlink&apos;))&quot;</span><br></pre></td></tr></table></figure><p><strong>一些可用镜像地址</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 推荐使用带有 /GoogleDrive/&lt;File_ID&gt; 链接, 速度更快.</span><br><span class="line"># 当然也可以使用自己GoogleDrive中储存的镜像,使用方式:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/&lt;File_ID&gt;</span><br><span class="line"> </span><br><span class="line"># win7emb_x86.tar.gz:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7</span><br><span class="line">  https://image.moeclub.org/win7emb_x86.tar.gz</span><br><span class="line"> </span><br><span class="line"># win8.1emb_x64.tar.gz:</span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J</span><br><span class="line">  https://image.moeclub.org/win8.1emb_x64.tar.gz</span><br></pre></td></tr></table></figure><hr><p><strong>一些提示</strong>:</p><p>特别注意:<br>萌咖提供的dd安装镜像<br>远程登陆账号为: Administrator<br>远程登陆密码为: Vicer<br>仅修改了主机名,可放心使用.(建议自己制作.)</p><p>在dd安装系统镜像时:<br>在你的机器上全新安装,如果你有VNC,可以看到全部过程.<br>在dd安装镜像的过程中,不会走进度条(进度条一直显示为0%).完成后将会自动重启.<br>分区界面标题一般显示为: “Starting up the partitioner“<br>使用谷歌网盘中储存的镜像: [无限制大小] 获取谷歌网盘文件临时直接下载链接</p><p>在全自动安装CentOS时:<br>如果看到 “Starting graphical installation” 或者类似表达,则表示正在安装.<br>正常情况下只需要耐心等待安装完成即可.<br>如果需要查看进度,使用VNC Viewer(或者其他VNC连接工具)<br>连接提示中的IP地址:端口进行连接.(端口一般为1或者5901)</p><hr><p>via:<a href="https://moeclub.org/2018/04/03/603/" target="_blank" rel="noopener">https://moeclub.org/2018/04/03/603/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Vicer 突然临时关闭了博客，这是原文和脚本的备份。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;脚本：&lt;a href=&quot;https://pan.nas.ink/script/InstallNET.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.nas.ink/script/InstallNET.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第 328 行有一个压缩包，如果你也要备份这个脚本，建议把压缩包也下载好，然后修改链接。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="vps" scheme="https://www.bfdz.ink/tags/vps/"/>
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="一键重装" scheme="https://www.bfdz.ink/tags/%E4%B8%80%E9%94%AE%E9%87%8D%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>阿里云 24元/月/1GB内存/香港/新加坡</title>
    <link href="https://www.bfdz.ink/2018/11/29/115/"/>
    <id>https://www.bfdz.ink/2018/11/29/115/</id>
    <published>2018-11-29T09:09:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云，特色是稳定，国内、香港、新加坡等线路均有，适合各种需求。最新推出了轻量应用服务器，即KVM VPS，其中有香港数据中心，而且给的30Mbps带宽，相当给力！每账户限5台！同时，每台服务器均可创建3个快照，每账户最多15个，这为备份和搬家提供了绝好功用。</p><a id="more"></a><hr><p><strong>最低套餐配置</strong></p><p>轻量 1GB<br>vCPU：1<br>内存：1 GB<br>空间：25 GB SSD（RAID 10）<br>流量：1 TB / 月（30 Mbps 端口）<br>IPv4：1<br>24元/月</p><p>轻量 2GB<br>vCPU：1<br>内存：2 GB<br>空间：40 GB SSD（RAID 10）<br>流量：2 TB / 月（30 Mbps 端口）<br>IPv4：1<br>34元/月</p><hr><p><strong>购买地址</strong></p><p>香港VPS：<a href="https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=cn-hongkong#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=cn-hongkong#/buy</a></p><p>新加坡VPS：<a href="https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=ap-southeast-1#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=ap-southeast-1#/buy</a></p><p>香港测试IP：149.129.85.xxx（xxx改为1-255之间的数字）</p><p>新加坡测评IP：149.129.49.xxx</p><hr><p><strong>其他链接</strong></p><p>轻量云服务器管理地址：<a href="https://swas.console.aliyun.com/#/servers" target="_blank" rel="noopener">https://swas.console.aliyun.com/#/servers</a></p><p>脚本一键重装纯净Linux或者dd安装Windows系统：<a href="https://moeclub.org/2018/04/03/603/" target="_blank" rel="noopener">https://moeclub.org/2018/04/03/603/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阿里云，特色是稳定，国内、香港、新加坡等线路均有，适合各种需求。最新推出了轻量应用服务器，即KVM VPS，其中有香港数据中心，而且给的30Mbps带宽，相当给力！每账户限5台！同时，每台服务器均可创建3个快照，每账户最多15个，这为备份和搬家提供了绝好功用。&lt;/p&gt;
    
    </summary>
    
      <category term="VPS" scheme="https://www.bfdz.ink/categories/VPS/"/>
    
    
      <category term="vps" scheme="https://www.bfdz.ink/tags/vps/"/>
    
      <category term="阿里云" scheme="https://www.bfdz.ink/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="香港" scheme="https://www.bfdz.ink/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>简单的 onedrive 上传工具</title>
    <link href="https://www.bfdz.ink/2018/11/19/114/"/>
    <id>https://www.bfdz.ink/2018/11/19/114/</id>
    <published>2018-11-19T02:10:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>工具网址：<a href="https://github.com/0oVicero0/OneDrive" target="_blank" rel="noopener">https://github.com/0oVicero0/OneDrive</a></p><p>特性:<br>1.支持文件夹上传.<br>2.支持获取文件的匿名直链.<br>3.纯shell支持.</p><a id="more"></a><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO- <span class="string">"https://raw.githubusercontent.com/0oVicero0/OneDrive/master/OneDrive.sh"</span> |bash</span><br></pre></td></tr></table></figure><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onedrive -a</span><br></pre></td></tr></table></figure><p>复制授权链接到浏览器打开，确认授权以后，浏览器进入空白页面，复制地址栏 <code>code=</code> 后面的字符串粘贴到 shell 窗口并按 Enter。</p><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">onedrive --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#####################################################################</span></span><br><span class="line">Usage: onedrive [OPTIONS] file1 [file2...]</span><br><span class="line">       onedrive<span class="_">-d</span> folder</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -d, --debug        Enable debug mode</span><br><span class="line">  -a, --authorize    Run authorization process</span><br><span class="line">  -f, --folder       Upload files into this remote folder</span><br><span class="line">  -c, --creat        Creat remote folder.<span class="string">"</span></span><br><span class="line"><span class="string">                     Directory names are separated with a slash, e.g.</span></span><br><span class="line"><span class="string">                     rootFolder/subFolder</span></span><br><span class="line"><span class="string">                     Do NOT use a trailing slash!</span></span><br><span class="line"><span class="string">  -h, --help         Show this help</span></span><br><span class="line"><span class="string">  -r, --rename       Rename the files during upload</span></span><br><span class="line"><span class="string">                     For each file you specify you MUST also specify</span></span><br><span class="line"><span class="string">                     the remote filename as the subsequent parameter</span></span><br><span class="line"><span class="string">                     Be especially careful with globbing!</span></span><br><span class="line"><span class="string">  -s, --silent       Silent mode for use in crontab scripts.</span></span><br><span class="line"><span class="string">                     Return only exit code.</span></span><br><span class="line"><span class="string">  -ls,--list         Show the itmes in this directory.</span></span><br><span class="line"><span class="string">  -l, --link         Show the file share link.</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">#####################################################################</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工具网址：&lt;a href=&quot;https://github.com/0oVicero0/OneDrive&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/0oVicero0/OneDrive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;特性:&lt;br&gt;1.支持文件夹上传.&lt;br&gt;2.支持获取文件的匿名直链.&lt;br&gt;3.纯shell支持.&lt;/p&gt;
    
    </summary>
    
      <category term="脚本" scheme="https://www.bfdz.ink/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="onedrive" scheme="https://www.bfdz.ink/tags/onedrive/"/>
    
  </entry>
  
  <entry>
    <title>影片编码查询和规则说明</title>
    <link href="https://www.bfdz.ink/2018/11/18/113/"/>
    <id>https://www.bfdz.ink/2018/11/18/113/</id>
    <published>2018-11-17T16:11:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>影片编码查询网址：<a href="https://www.zgdypw.cn/#/film.html" target="_blank" rel="noopener">https://www.zgdypw.cn/#/film.html</a></p><p>每一部在中国大陆上映的电影必须经过审批，取得电影片公映许可证（俗称龙标）。影片编码即电影片公映许可证上的影片排次号。</p><p>此网站可以查询所有获得影片编码的电影，并导出数据。</p><a id="more"></a><hr><p>影片编码规则说明</p><p><img src="https://wx1.sinaimg.cn/large/92253953gy1fxdln53ko7j20pw0zsjuv.jpg" alt=""><br><img src="https://wx3.sinaimg.cn/large/92253953gy1fxdlhp4hrpj20oq0q2793.jpg" alt=""><br><img src="https://wx4.sinaimg.cn/large/92253953gy1fxdlhp9hlqj20o40uktda.jpg" alt=""></p><p>电影片公映许可证示例</p><p><img src="https://wx2.sinaimg.cn/large/92253953gy1fxbkfgpqyyj20h80nxt9h.jpg" alt="电影片公映许可证"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;影片编码查询网址：&lt;a href=&quot;https://www.zgdypw.cn/#/film.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zgdypw.cn/#/film.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;每一部在中国大陆上映的电影必须经过审批，取得电影片公映许可证（俗称龙标）。影片编码即电影片公映许可证上的影片排次号。&lt;/p&gt;
&lt;p&gt;此网站可以查询所有获得影片编码的电影，并导出数据。&lt;/p&gt;
    
    </summary>
    
      <category term="实用网站" scheme="https://www.bfdz.ink/categories/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="影片编码" scheme="https://www.bfdz.ink/tags/%E5%BD%B1%E7%89%87%E7%BC%96%E7%A0%81/"/>
    
      <category term="龙标" scheme="https://www.bfdz.ink/tags/%E9%BE%99%E6%A0%87/"/>
    
      <category term="电影放映许可证" scheme="https://www.bfdz.ink/tags/%E7%94%B5%E5%BD%B1%E6%94%BE%E6%98%A0%E8%AE%B8%E5%8F%AF%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>Windows 配置启用 NFS 共享</title>
    <link href="https://www.bfdz.ink/2018/11/16/112/"/>
    <id>https://www.bfdz.ink/2018/11/16/112/</id>
    <published>2018-11-15T16:10:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>适用系统：Windows 7/10<br>软件：WinNFSd<br>软件发布地址：<a href="https://github.com/winnfsd/winnfsd/releases" target="_blank" rel="noopener">https://github.com/winnfsd/winnfsd/releases</a></p><p>文件共享服务常见的几种方法有：FTP、Samba、NFS 。Windows 家用版内置的共享功能是采用的 Samba，服务器版才内置有 nfs server，所以在家用电脑上开启 NFS 共享需要另外安装 NFS 服务端。<br>网络上常见的配置 nfs 共享教程均是使用 haneWIN NFS Server ，但这个软件是收费的，而且也长时间没更新。本文将介绍一款免费开源的软件 WinNFSd。</p><a id="more"></a><hr><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>从 GitHub 的发布地址下载 WinNFSd，新建一个文件夹，例如：<code>C:\winnfsd</code>,将 WinNFSd 放入其中。</p><h2 id="配置共享路径"><a href="#配置共享路径" class="headerlink" title="配置共享路径"></a>配置共享路径</h2><p>在 winnfsd 文件夹中新建文本 <code>exports.txt</code>，打开 exports ，填写需要共享的路径，例如：<code>F:\Videos</code>。（国外教程说路径要从第二行开始才有用，但我在 win10 上尝试在第一行写也有用，可能这个 bug 已经修复了。）</p><h2 id="创建启动脚本"><a href="#创建启动脚本" class="headerlink" title="创建启动脚本"></a>创建启动脚本</h2><p>在 winnfsd 文件夹中新建脚本 <code>nfsservice.bat</code>, 填写 <code>winnfsd.exe -id 0 0 -log off -pathFile &quot;C:\winnfsd\exports.txt&quot;</code> 并保存。右键 <code>nfsservice.bat</code> 发送快捷方式到桌面，然后将快捷方式移动到用户的启动路径内 <code>%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 。双击 nfsservice.bat 程序就会启动，或者重启电脑程序会开机启动。</p><hr><p>参考资料：</p><ul><li><a href="https://forum.kodi.tv/showthread.php?tid=329452" target="_blank" rel="noopener">Add NFS server capabilities to Windows (free)</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;适用系统：Windows 7/10&lt;br&gt;软件：WinNFSd&lt;br&gt;软件发布地址：&lt;a href=&quot;https://github.com/winnfsd/winnfsd/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/winnfsd/winnfsd/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文件共享服务常见的几种方法有：FTP、Samba、NFS 。Windows 家用版内置的共享功能是采用的 Samba，服务器版才内置有 nfs server，所以在家用电脑上开启 NFS 共享需要另外安装 NFS 服务端。&lt;br&gt;网络上常见的配置 nfs 共享教程均是使用 haneWIN NFS Server ，但这个软件是收费的，而且也长时间没更新。本文将介绍一款免费开源的软件 WinNFSd。&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.bfdz.ink/categories/Windows/"/>
    
    
      <category term="nfs" scheme="https://www.bfdz.ink/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>PT-Gen 后端搭建</title>
    <link href="https://www.bfdz.ink/2018/11/09/111/"/>
    <id>https://www.bfdz.ink/2018/11/09/111/</id>
    <published>2018-11-09T11:08:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>服务器必备的软件环境：</p><ul><li>nginx</li><li>python3</li><li>pip3</li><li>uWSGI</li></ul><p>我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。</p><a id="more"></a><hr><h2 id="编译安装-python-3"><a href="#编译安装-python-3" class="headerlink" title="编译安装 python 3"></a>编译安装 python 3</h2><h3 id="下载-python-源码"><a href="#下载-python-源码" class="headerlink" title="下载 python 源码"></a>下载 python 源码</h3><p>用 wget 从官网下载源码，选择任意版本 python3，我选的当时最新的发行版 python3.6.4，其中安装包版本 Gzipped source tarball 即我们所需的源码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz</span><br></pre></td></tr></table></figure><h3 id="解压，配置"><a href="#解压，配置" class="headerlink" title="解压，配置"></a>解压，配置</h3><p>下载完成后解压，然后添加配置。在 configure 的选项中，–prefix 定义了安装位置，便于以后更新或删除 python；–enable-shared 指定安装共享库，共享库在使用其他需调用 python 的软件时会用到，比如使用 mod_wgsi 连接 Apache 与 python 时需要，最好填上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.6.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.6.4</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python3 --<span class="built_in">enable</span>-shared</span><br><span class="line">sudo mkdir /usr/<span class="built_in">local</span>/python3</span><br></pre></td></tr></table></figure><h3 id="编译，安装"><a href="#编译，安装" class="headerlink" title="编译，安装"></a>编译，安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>如果是多核cpu，make 替换为 <code>make -j</code> 可以加快编译速度。</p><h3 id="建立软链"><a href="#建立软链" class="headerlink" title="建立软链"></a>建立软链</h3><p>然后建立 python3 和 pip3 的软链。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>建立软链后输入 python3 即可进入 python3 解释器，同时你还可以输入 python 或 python2 进入 python2 解释器，二者可以共存。</p><hr><h2 id="下载-PT-Gen"><a href="#下载-PT-Gen" class="headerlink" title="下载 PT-Gen"></a>下载 PT-Gen</h2><p>lnmp 新建主机，设置网站根目录和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure><p>进入网站根目录并下载程序源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/api.example.com</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/BFDZ/PT-Gen.git</span><br><span class="line">mv PT-Gen/* ./</span><br></pre></td></tr></table></figure></p><p>安装依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirement.txt</span><br></pre></td></tr></table></figure><hr><h2 id="安装，配置-uWSGI"><a href="#安装，配置-uWSGI" class="headerlink" title="安装，配置 uWSGI"></a>安装，配置 uWSGI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3  install uwsgi</span><br></pre></td></tr></table></figure><p>新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini</span><br></pre></td></tr></table></figure><p>填入此配置文件内容并保存</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[uwsgi]</span></span><br><span class="line"><span class="comment"># 采用sock方式通信，程序在启动时会自己创建这个文件</span></span><br><span class="line"><span class="string">socket</span> <span class="string">=</span> <span class="string">/tmp/uwsgi.sock</span></span><br><span class="line"><span class="comment"># 指向网站目录</span></span><br><span class="line"><span class="string">chdir</span> <span class="string">=</span> <span class="string">/home/wwwroot/api.example.com</span></span><br><span class="line"><span class="comment"># python 启动程序文件</span></span><br><span class="line"><span class="string">wsgi-file</span> <span class="string">=</span> <span class="string">run.py</span></span><br><span class="line"><span class="comment"># python 程序内用以启动的 application 变量名</span></span><br><span class="line"><span class="string">callable</span> <span class="string">=</span> <span class="string">app</span></span><br><span class="line"><span class="comment"># 进程数，可按服务器配置和负载情况调高</span></span><br><span class="line"><span class="string">processes</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 线程数</span></span><br><span class="line"><span class="string">threads</span> <span class="string">=</span> <span class="number">8</span></span><br><span class="line"><span class="comment"># 开启master，程序会进入后台运行模式</span></span><br><span class="line"><span class="string">master</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大请求数，在指定数量的管理请求后重载worker</span></span><br><span class="line"><span class="string">max-requests</span> <span class="string">=</span> <span class="number">6000</span></span><br><span class="line"><span class="comment"># 指定启动用户</span></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 指定用户组</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="number">1001</span></span><br><span class="line"><span class="comment"># 日志路径</span></span><br><span class="line"><span class="string">daemonize</span> <span class="string">=</span> <span class="string">/var/log/uwsgi.log</span></span><br></pre></td></tr></table></figure><p>建议不要使用 root 用户启动 uwsgi，保持和 nginx 的启动用户一样。lnmp 中 nginx 进程是属于www ，所以 uwsgi 的 uid/gid 也要指定为 www 用户。</p><hr><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><p>修改 nginx 网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/vhost/api.example.com.conf</span><br></pre></td></tr></table></figure><p> <code>location /</code> 段添加 uwsgi 相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / </span><br><span class="line">&#123;</span><br><span class="line">    include      uwsgi_params;</span><br><span class="line">    uwsgi_pass   unix:/tmp/uwsgi.sock;</span><br><span class="line">    uwsgi_param UWSGI_CHDIR  /home/wwwroot/api.example.com;</span><br><span class="line">    uwsgi_param UWSGI_SCRIPT run:app;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx reload</span><br></pre></td></tr></table></figure><hr><h2 id="运行后端"><a href="#运行后端" class="headerlink" title="运行后端"></a>运行后端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi3 --ini config.ini</span><br></pre></td></tr></table></figure><p>这时访问 api 的域名，会出现提示 <code>Hello world~</code> ，表示程序已成功运行。</p><p>PT-Gen 的 api 的路径为 <code>api.example.com/movieinfo/gen</code> ,前端页面修改api的域名即可换用此api。浏览器不带参数访问此路径，默认跳转到工具介绍页面。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务器必备的软件环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;li&gt;pip3&lt;/li&gt;
&lt;li&gt;uWSGI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我使用的是 lnmp 安装环境，nginx 安装过程不再赘述。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
      <category term="pt" scheme="https://www.bfdz.ink/tags/pt/"/>
    
  </entry>
  
  <entry>
    <title>电影简介生成工具</title>
    <link href="https://www.bfdz.ink/2018/10/31/110/"/>
    <id>https://www.bfdz.ink/2018/10/31/110/</id>
    <published>2018-10-31T11:39:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几天 movieinfogen 因为流量超额，网站已经不能使用，所以给大家推荐一下其他的电影简介生成工具。</p><h2 id="PT-Gen"><a href="#PT-Gen" class="headerlink" title="PT-Gen"></a>PT-Gen</h2><ul><li><a href="https://rhilip.github.io/PT-help/ptgen" target="_blank" rel="noopener">https://rhilip.github.io/PT-help/ptgen</a></li><li><a href="https://www.bfdz.ink/tools/ptgen">https://www.bfdz.ink/tools/ptgen</a></li></ul><p>这是 Rhilip 开发的一个简介生成工具，网站界面和功能与 movieinfogen 相似。</p><a id="more"></a><h3 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h3><ul><li>支持使用Douban链接来生成电影、剧集简介（movieinfogen格式）</li><li>支持使用Bangumi链接来生成动漫信息（BYR推荐 Story、Staff、Cast格式）</li><li>支持使用Steam链接来生成游戏信息</li><li>豆瓣、Bangumi不用登陆（因此也导致部分资源不可查询）</li><li>支持在豆瓣上有imdb号的资源</li><li>支持豆瓣搜索</li></ul><h3 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h3><ul><li>豆瓣搜索</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/798501736.jpg" alt=""></p><ul><li>豆瓣信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/2176764395.jpg" alt=""></p><ul><li>Bangumi信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/318637092.jpg" alt=""></p><ul><li>Steam信息</li></ul><p><img src="https://www.z4a.net/images/2018/10/31/4257925728.jpg" alt=""></p><hr><h2 id="豆瓣资源下载大师"><a href="#豆瓣资源下载大师" class="headerlink" title="豆瓣资源下载大师"></a>豆瓣资源下载大师</h2><ul><li><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/329484</a></li></ul><p>豆瓣资源下载大师是一个托管在Greasy Fork的浏览器脚本，除了搜索电影资源，还附带生成电影简介的功能。<br>安装以后豆瓣电影的信息页会出现一个生成信息按钮，点击可生成和 movieinfogen 相似的电影简介信息。</p><p><img src="https://i.loli.net/2018/10/31/5bd9998d3780b.png" alt=""><br><img src="https://i.loli.net/2018/10/31/5bd9998d2e72d.png" alt=""></p><hr><p>参考资料：<a href="https://blog.rhilip.info/archives/800/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/800/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天 movieinfogen 因为流量超额，网站已经不能使用，所以给大家推荐一下其他的电影简介生成工具。&lt;/p&gt;
&lt;h2 id=&quot;PT-Gen&quot;&gt;&lt;a href=&quot;#PT-Gen&quot; class=&quot;headerlink&quot; title=&quot;PT-Gen&quot;&gt;&lt;/a&gt;PT-Gen&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rhilip.github.io/PT-help/ptgen&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://rhilip.github.io/PT-help/ptgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bfdz.ink/tools/ptgen&quot;&gt;https://www.bfdz.ink/tools/ptgen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是 Rhilip 开发的一个简介生成工具，网站界面和功能与 movieinfogen 相似。&lt;/p&gt;
    
    </summary>
    
      <category term="实用网站" scheme="https://www.bfdz.ink/categories/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="pt" scheme="https://www.bfdz.ink/tags/pt/"/>
    
      <category term="电影" scheme="https://www.bfdz.ink/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 加载优化</title>
    <link href="https://www.bfdz.ink/2018/10/23/109/"/>
    <id>https://www.bfdz.ink/2018/10/23/109/</id>
    <published>2018-10-23T05:54:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近给网站加上了 Google Analytics（大概两年前，我刚换到 Hexo 的时候，我就把统计撤了，看到 LWL 的群里在晒统计结果，心里痒痒又加上了）。但是直接使用 Google Analytics 有一点弊端：一是会被各种广告屏蔽软件屏蔽，导致统计结果不准确；二是在国内加载不稳定。</p><p>因此，我给 Google Analytics 加了一层代理，优化加载速度同时防止被屏蔽。</p><p><a href="https://github.com/giuem/ga-proxy" target="_blank" rel="noopener">GitHub Repo</a> （求 Star🌚</p><a id="more"></a><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>目前关于 Google Analytics 大致有两种方案，一种是本文使用介绍的，另一种是利用 Nginx 的 post_action。</p><p>前者需要多一次 HTTP 请求，后者有点麻烦，还要过滤搜索引擎 UA，不适用于使用 CDN 的网站。</p><p>本文所采用的方案是基于 <a href="https://stneng.com/google-analytics-%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%EF%BC%88%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%EF%BC%89/" target="_blank" rel="noopener">Google Analytics 异步请求（服务端请求）</a> 提供的代码修改的 Go 版本。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-使用我提供的服务"><a href="#1-使用我提供的服务" class="headerlink" title="1. 使用我提供的服务"></a>1. 使用我提供的服务</h3><p>将下面的代码加到你的网站的任意位置，同时修改 <code>&quot;UA-xxxx-x&quot;</code> 为你自己的跟踪代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">a,b,c,d,e</span>)</span>&#123;<span class="keyword">var</span> f=c.screen,g=<span class="built_in">encodeURIComponent</span>,h=[<span class="string">"ga="</span>+a,<span class="string">"dt="</span>+g(d.title),<span class="string">"dr="</span>+g(d.referrer),<span class="string">"ul="</span>+(e.language||e.browserLanguage||e.userLanguage),<span class="string">"sd="</span>+f.colorDepth+<span class="string">"-bit"</span>,<span class="string">"sr="</span>+f.width+<span class="string">"x"</span>+f.height,<span class="string">"vp="</span>+<span class="built_in">Math</span>.max(d.documentElement.clientWidth,c.innerWidth||<span class="number">0</span>)+<span class="string">"x"</span>+<span class="built_in">Math</span>.max(d.documentElement.clientHeight,c.innerHeight||<span class="number">0</span>),<span class="string">"z="</span>+ +<span class="keyword">new</span> <span class="built_in">Date</span>];c.__ga_img=<span class="keyword">new</span> Image,c.__ga_img.src=b+<span class="string">"?"</span>+h.join(<span class="string">"&amp;"</span>)&#125;(<span class="string">"UA-xxxx-x"</span>,<span class="string">"https://ga.giuem.com"</span>,<span class="built_in">window</span>,<span class="built_in">document</span>,navigator,location);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>目前已经部署海外线路（由 CloudFlare 提供），国内为腾讯云上海机房</strong></p><h3 id="2-自己部署服务"><a href="#2-自己部署服务" class="headerlink" title="2. 自己部署服务"></a>2. 自己部署服务</h3><ol><li>安装</li></ol><p>你可以选择自己 <a href="https://github.com/giuem/ga-proxy#build" target="_blank" rel="noopener">编译</a> 或者从 <a href="https://github.com/giuem/ga-proxy/releases/latest" target="_blank" rel="noopener">release</a> 下载我编译好的二进制文件。</p><ol start="2"><li>运行</li></ol><p>./ga_proxy [arguments]</p><p>-d, -debug 输出调试信息<br>-s, -skip_ssl 跳过 SSL 验证<br>-l, -listen 监听地址</p><p>要使用后台运行，你可以借助 <code>nohup</code> 或 <code>screen</code> 或 <code>Docker</code>。</p><ol start="3"><li>添加 JavaScript 代码</li></ol><p>把上面的那段代码里的 <code>&quot;https://ga.giuem.com&quot;</code> 改成你自己的地址就行了。</p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p>整个请求花费 33 ms, 156 B 流量可以说是非常快了。服务器的 Ping 值在 29 ms 左右，中间 4 ms 的损失主要花在 SSL 上了，速度还是挺不错的。</p><p>相比之下，原生的请求先加载了一个 12.3 KB 大小的 JS 文件，然后才发送统计，总耗时 300 ms，emmmmm 我就不作过多评价了。</p><hr><p>来源：<a href="https://www.giuem.com/google-analytics-loading-optimize/" target="_blank" rel="noopener">https://www.giuem.com/google-analytics-loading-optimize/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近给网站加上了 Google Analytics（大概两年前，我刚换到 Hexo 的时候，我就把统计撤了，看到 LWL 的群里在晒统计结果，心里痒痒又加上了）。但是直接使用 Google Analytics 有一点弊端：一是会被各种广告屏蔽软件屏蔽，导致统计结果不准确；二是在国内加载不稳定。&lt;/p&gt;
&lt;p&gt;因此，我给 Google Analytics 加了一层代理，优化加载速度同时防止被屏蔽。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/giuem/ga-proxy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub Repo&lt;/a&gt; （求 Star🌚&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.bfdz.ink/categories/Hexo/"/>
    
    
      <category term="Google Analytics" scheme="https://www.bfdz.ink/tags/Google-Analytics/"/>
    
      <category term="linux" scheme="https://www.bfdz.ink/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Cloudflare 下 Nginx 获取用户真实 IP 地址</title>
    <link href="https://www.bfdz.ink/2018/10/23/108/"/>
    <id>https://www.bfdz.ink/2018/10/23/108/</id>
    <published>2018-10-23T05:33:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>惯例性滴先Google了一下，发现了这篇文章</p><ul><li><a href="https://support.cloudflare.com/hc/en-us/articles/200170706-How-do-I-restore-original-visitor-IP-with-Nginx" target="_blank" rel="noopener">How do I restore original visitor IP with Nginx? – Cloudflare Support</a></li><li><a href="https://nginx.org/en/docs/http/ngx_http_realip_module.html" target="_blank" rel="noopener">Module ngx_http_realip_module - Nginx</a></li></ul><p>看起来挺简单的嘛，在nginx配置文件中加一段地址说明就好了的事。。<br>然而在重启时却发现，报错了。。。。。新添加的”set_real_ip_from”没有被认出来，导致新配置的文件不被认可就没能重启。。</p><a id="more"></a><p>于是认真的看了下说明。</p><blockquote><p>This module is not built by default, it should be enabled with the –with-http_realip_module configuration parameter.</p></blockquote><p>原来如此嘛，是当初安装的时候没有安装所需要的模块呀~</p><p>那就开始在已经配置好的nginx上添加未编译安装模块吧。</p><p>使用 lnmp.org 提供的一件包可以编辑lnmp.conf文件，添加nginx编译属性，然后使用upgrade.sh来无人值守升级避免下述问题。</p><p>1、看下编译安装nginx的时候，都编译安装的哪些模块。执行命令：<code>/usr/local/nginx/sbin/nginx -V</code>，得到一下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM src]<span class="comment"># /usr/local/nginx/sbin/nginx -V</span></span><br><span class="line">nginx version: nginx/1.10.0</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC)</span><br><span class="line">built with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --user=www --group=www --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module</span><br></pre></td></tr></table></figure><p>2、进入到nginx的安装目录，（这里吐槽下Virmach，果真是垃圾VPS提供商。母鸡的IPv6服务坏了快一个月都没能好）。我这里用的是当初我安装lnmp时候留下来的安装包。如果没有的话，可以用wget的方法从nginx官网上重新得到安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/lnmp1.3-full/src</span><br><span class="line">tar -xf nginx-1.10.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.10.0</span><br></pre></td></tr></table></figure><p>3、重新./configure ，添加所需要的模块后使用make编译。格式应该是这样的：”./configure “ + 第一步得到的configure arguments信息 + 你想要添加的模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module --with-http_realip_module</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># make</span></span><br></pre></td></tr></table></figure><p>千万要注意：到这里就可以了，千万不要make install，不然文件就会被覆盖了。</p><p>4、备份原先配置，杀掉nginx进程，然后替换nginx二进制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># killall nginx</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># killall nginx</span></span><br><span class="line">nginx: no process killed</span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># cp ./objs/nginx /usr/local/nginx/sbin/</span></span><br><span class="line">cp: overwrite `/usr/<span class="built_in">local</span>/nginx/sbin/nginx<span class="string">'? yes</span></span><br></pre></td></tr></table></figure><p>5、更改站点的nginx配置文件，在location / {} 中加入第一篇文章中提到的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">set_real_ip_from 103.21.244.0/22;</span><br><span class="line">set_real_ip_from 103.22.200.0/22;</span><br><span class="line">set_real_ip_from 103.31.4.0/22;</span><br><span class="line">set_real_ip_from 104.16.0.0/12;</span><br><span class="line">set_real_ip_from 108.162.192.0/18;</span><br><span class="line">set_real_ip_from 131.0.72.0/22;</span><br><span class="line">set_real_ip_from 141.101.64.0/18;</span><br><span class="line">set_real_ip_from 162.158.0.0/15;</span><br><span class="line">set_real_ip_from 172.64.0.0/13;</span><br><span class="line">set_real_ip_from 173.245.48.0/20;</span><br><span class="line">set_real_ip_from 188.114.96.0/20;</span><br><span class="line">set_real_ip_from 190.93.240.0/20;</span><br><span class="line">set_real_ip_from 197.234.240.0/22;</span><br><span class="line">set_real_ip_from 198.41.128.0/17;</span><br><span class="line">set_real_ip_from 199.27.128.0/21;</span><br><span class="line">set_real_ip_from 2400:cb00::/32;</span><br><span class="line">set_real_ip_from 2606:4700::/32;</span><br><span class="line">set_real_ip_from 2803:f800::/32;</span><br><span class="line">set_real_ip_from 2405:b500::/32;</span><br><span class="line">set_real_ip_from 2405:8100::/32;</span><br><span class="line">set_real_ip_from 2c0f:f248::/32;</span><br><span class="line">set_real_ip_from 2a06:98c0::/29;</span><br><span class="line"><span class="comment"># use any of the following two</span></span><br><span class="line">real_ip_header CF-Connecting-IP;</span><br><span class="line"><span class="comment">#real_ip_header X-Forwarded-For;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、重启nginx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp nginx restart</span><br></pre></td></tr></table></figure><p>我这里用的是lnmp带的命令，你还可以使用下面的命令来重启并检查nginx运行情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># /usr/local/nginx/sbin/nginx</span></span><br><span class="line">[root@WiseImpressionable-VM nginx-1.10.0]<span class="comment"># netstat -anpt | grep nginx</span></span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 23371/nginx</span><br></pre></td></tr></table></figure><p><strong>2018.01.01 更</strong></p><p>7、自动更新 cloudflare-real-ip 清单<br>如果你是使用lnmp.org提供的一键包来安装的，请参照进行。</p><p>在nginx配置目录创建cloudflare_ip.conf文件<br><code>touch /usr/local/nginx/conf/cloudflare_ip.conf</code></p><p>修改原有的vhost配置，将原来第五步配置的信息改为<br><code>include cloudflare_ip.conf;</code></p><p>创建自更新脚本update_cloudflare_ip.sh（假定该文件放在 /root 目录下），内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#Cloudflare"</span> &gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"set_real_ip_from <span class="variable">$i</span>;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"set_real_ip_from <span class="variable">$i</span>;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"# use any of the following two"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"real_ip_header CF-Connecting-IP;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#real_ip_header X-Forwarded-For;"</span> &gt;&gt; /usr/<span class="built_in">local</span>/nginx/conf/cloudflare_ip.conf;</span><br></pre></td></tr></table></figure><p>配置crontab</p><p><code>0 5 * * 1 /bin/bash /root/update_cloudflare_ip.sh</code></p><p>↑ 每周一的上午5点更新</p><hr><p>作者：Rhilip<br>链接：<a href="https://blog.rhilip.info/archives/256/" target="_blank" rel="noopener">https://blog.rhilip.info/archives/256/</a><br>来源：<a href="https://blog.rhilip.info/" target="_blank" rel="noopener">https://blog.rhilip.info/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;惯例性滴先Google了一下，发现了这篇文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://support.cloudflare.com/hc/en-us/articles/200170706-How-do-I-restore-original-visitor-IP-with-Nginx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How do I restore original visitor IP with Nginx? – Cloudflare Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_realip_module.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Module ngx_http_realip_module - Nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看起来挺简单的嘛，在nginx配置文件中加一段地址说明就好了的事。。&lt;br&gt;然而在重启时却发现，报错了。。。。。新添加的”set_real_ip_from”没有被认出来，导致新配置的文件不被认可就没能重启。。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.bfdz.ink/categories/Linux/"/>
    
    
      <category term="nginx" scheme="https://www.bfdz.ink/tags/nginx/"/>
    
      <category term="Cloudflare" scheme="https://www.bfdz.ink/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>江湖儿女</title>
    <link href="https://www.bfdz.ink/2018/10/04/107/"/>
    <id>https://www.bfdz.ink/2018/10/04/107/</id>
    <published>2018-10-04T13:36:00.000Z</published>
    <updated>2019-02-22T15:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/92253953gy1fvwj1p9q63j20f00l0q7l.jpg" alt=""></p><a id="more"></a><p>◎译　　名　Ash is Purest White / Les Eternels / Money &amp; Love / 灰烬是最洁白的 / 金钱与爱情<br>◎片　　名　江湖儿女<br>◎年　　代　2018<br>◎产　　地　中国大陆 / 法国 / 日本<br>◎类　　别　爱情 / 犯罪<br>◎语　　言　汉语普通话 / 山西方言 / 湖北方言 / 重庆方言<br>◎上映日期　2018-05-11(戛纳电影节) / 2018-09-21(中国大陆)<br>◎IMDb评分　6.9/10 from 478 users<br>◎IMDb链接　<a href="http://www.imdb.com/title/tt7298400" target="_blank" rel="noopener">http://www.imdb.com/title/tt7298400</a><br>◎豆瓣评分　7.7/10 from 90538 users<br>◎豆瓣链接　<a href="https://movie.douban.com/subject/26972258/" target="_blank" rel="noopener">https://movie.douban.com/subject/26972258/</a><br>◎片　　长　137分钟(中国大陆)<br>◎导　　演　贾樟柯 Zhangke Jia<br>◎编　　剧　贾樟柯 Zhangke Jia<br>◎主　　演　赵涛 Tao Zhao<br>　　　　　　廖凡 Fan Liao<br>　　　　　　徐峥 Zheng Xu<br>　　　　　　梁嘉艳 Casper Liang<br>　　　　　　刁亦男 Yi’nan Diao<br>　　　　　　张一白 Yibai Zhang<br>　　　　　　丁嘉丽 Jiali Ding<br>　　　　　　张译 Yi Zhang<br>　　　　　　董子健 Zijian Dong<br>　　　　　　李宣 Xuan Li<br>　　　　　　查娜 Chana<br>　　　　　　冯家妹 Jiamei Feng<br>　　　　　　康亢 Kang Kang<br>　　　　　　张晓军 Xiaojun Zhang<br>　　　　　　柳敏 Min Liu<br>　　　　　　王谭 Tan Wang<br>　　　　　　原文倩 Wenqian Yuan</p><p>◎标　　签　中国大陆 | 文艺 | 人性 | 社会 | 剧情 | 2018 | 爱情 | 犯罪</p><p>◎简　　介  </p><p>　　故事开始于2001年的山西大同，巧巧（赵涛 饰）和斌斌（廖凡 饰）相恋多年，巧巧一心希望能够和斌斌成家过安稳的生活，但斌斌身为当地的大佬，有着自己更高远的志向。一场意外中，斌斌遭人暗算危在旦夕，巧巧拿着斌斌私藏的手枪挺身而出救了斌斌，自己却因为非法持枪而被判处了五年的监禁。<br>一晃眼五年过去，出狱后的巧巧发现整个世界都发生了翻天覆地的变化，唯一不变的是她对斌斌真挚的感情。巧巧跋山涉水寻找斌斌的下落，但此时的斌斌早已经失去了往日的锋芒，而且身边已有了新的女友。身无分文的巧巧靠着自己的智慧摸爬滚打，终于为自己挣得了一片天地。</p><p>◎获奖情况  </p><p>　　第71届戛纳电影节(2018)<br>　　主竞赛单元 金棕榈奖(提名) 贾樟柯</p><p>　　第55届台北金马影展(2018)<br>　　金马奖 最佳女主角(提名) 赵涛</p><hr><blockquote><p>1080p 无水印 在线观看和下载<br>链接：<a href="https://pan.nas.ink/%E7%94%B5%E5%BD%B1/%E4%B8%AD%E5%9B%BD/%E6%B1%9F%E6%B9%96%E5%84%BF%E5%A5%B3.2018/" target="_blank" rel="noopener">https://pan.nas.ink/%E7%94%B5%E5%BD%B1/%E4%B8%AD%E5%9B%BD/%E6%B1%9F%E6%B9%96%E5%84%BF%E5%A5%B3.2018/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/92253953gy1fvwj1p9q63j20f00l0q7l.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="电影" scheme="https://www.bfdz.ink/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="江湖儿女" scheme="https://www.bfdz.ink/tags/%E6%B1%9F%E6%B9%96%E5%84%BF%E5%A5%B3/"/>
    
      <category term="贾樟柯" scheme="https://www.bfdz.ink/tags/%E8%B4%BE%E6%A8%9F%E6%9F%AF/"/>
    
  </entry>
  
</feed>
